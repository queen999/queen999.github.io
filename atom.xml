<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>覃浩的博客</title>
  
  <subtitle>覃浩的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.imqinhao.cn/"/>
  <updated>2020-07-17T10:22:05.825Z</updated>
  <id>https://www.imqinhao.cn/</id>
  
  <author>
    <name>覃浩</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络学习1</title>
    <link href="https://www.imqinhao.cn/2020/07/17/computer_Internet_1/"/>
    <id>https://www.imqinhao.cn/2020/07/17/computer_Internet_1/</id>
    <published>2020-07-17T10:25:00.000Z</published>
    <updated>2020-07-17T10:22:05.825Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>学习笔记，包含以下内容：</p><ul><li>网络、互联网（互连网）和因特网</li><li>三种交换方式</li><li>计算机网络的性能指标</li></ul><a id="more"></a><h2 id="网络、互联网（互联网）和因特网"><a href="#网络、互联网（互联网）和因特网" class="headerlink" title="网络、互联网（互联网）和因特网"></a>网络、互联网（互联网）和因特网</h2><p>网络（Network）由若干<span class='p red'>结点</span>（Node）和连接这些节点的<span class='p red'>链路</span>（Link）组成。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717162104.png" alt=""></p><p>多个网络还可以通过路由器互连起来，这样就构成了一个覆盖范围更大的网络，即互联网（或互连网）。因此，互连网是“<span class='p red'>网络中的网络</span>（Network  of  Network）”</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717162555.png" alt=""></p><p>因特网（Internet）是世界上最大的互联网络（用户数以亿计，互连的网络数以百万计）</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717162750.png" alt=""></p><h3 id="Internet与internet的区别"><a href="#Internet与internet的区别" class="headerlink" title="Internet与internet的区别"></a>Internet与internet的区别</h3><blockquote><p><kbd>internet</kbd>（互联网或互连网）是一个<kbd>通用名词</kbd>，它泛指<kbd>由多个计算机网络互连而成的网络</kbd>。在这些网络之间的<kbd>通信协议</kbd>可以是<kbd>任意</kbd>的。</p></blockquote><blockquote><p><kbd>Internet</kbd>（因特网）则是一个<kbd>专用名词</kbd>，它指当前<kbd>全球最大的、开放的、由众多网络相互连接而成的特定计算机网络</kbd>，它采用<kbd>TCP/IP协议</kbd>族作为通信的规则，其前身是美国的ARPANET。</p></blockquote><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><p><kbd>ISP</kbd>：因特网服务提供者</p><h3 id="因特网的组成"><a href="#因特网的组成" class="headerlink" title="因特网的组成"></a>因特网的组成</h3><p>① 边缘部分：由所有连接在因特网上的主机组成。</p><p>② 核心部分：由大量的网络和连接这些网络的路由器组成。</p><h2 id="电路交换、分组交换和报文交换"><a href="#电路交换、分组交换和报文交换" class="headerlink" title="电路交换、分组交换和报文交换"></a>电路交换、分组交换和报文交换</h2><h3 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h3><blockquote><p>电话交换机接通电话线的方式称为电路交换。</p></blockquote><blockquote><p>从通信资源的分配角度来看，交换（Switching）就是按照某种方式动态地分配传输线路的资源。</p></blockquote><blockquote><p>电路交换的三个步骤：</p><ol><li>建立连接（分配通信资源）</li><li>通话（一直占用通信资源）</li><li>释放连接（归还通信资源）</li></ol></blockquote><p>当使用电路交换来传送计算机数据时，其线路的传输效率往往很低。</p><h3 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180739.png" alt="image-20200717165117099"></p><h3 id="三种交换方式的对比"><a href="#三种交换方式的对比" class="headerlink" title="三种交换方式的对比"></a>三种交换方式的对比</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180740.png" alt="image-20200717165207537"></p><h2 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h2><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180741.png" alt="image-20200717165735699"></p><p>计算题：有一个待发送的数据块，大小为100MB，网卡的发送速率为100Mbps，则网卡发送完该数据块需要多长时间？</p><p>$$\frac{100MB}{100Mb/s} = \frac{MB}{Mb/s} = \frac{2^{20}·8 b }{10^{6}b/s} ≈ 8.4s$$</p><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180742.png" alt="image-20200717171145414"></p><blockquote><p>一条通信线路的“频带宽度”越宽，其所传输数据的“最高数据率”也越高。</p></blockquote><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><blockquote><p>吞吐量表示在单位时间内通过某个网络（或信道、接口）的数据量。</p></blockquote><blockquote><p>吞吐量被经常用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络。</p></blockquote><blockquote><p>吞吐量受<kbd>网络的带宽</kbd>或<kbd>额定速率</kbd>的限制。</p></blockquote><h3 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h3><blockquote><p>发送时延 ： $$  \frac{分组长度(b)}{发送速率(b/s)} $$ ，与网卡的发送速率、信道带宽、接口速率都有关。</p></blockquote><blockquote><p>传播时延： $$ \frac{信道长度(m)}{电磁波传播速率(m/s)} $$ </p></blockquote><blockquote><p>处理时延： 路由器接收数据后，对数据进行存储转发所消耗的时间。</p></blockquote><p>计算题： 数据块长度为100MB，信道带宽为1 Mb/s，传送距离为1000 km，计算<kbd>发送时延</kbd>和<kbd>传播时延</kbd>。</p><p>$$ 发送时延 = \frac{分组长度(b)}{发送速率(b/s)} = \frac{100 × 2^{20} × 8(b)}{10^6(b/s)} = 838.8608s $$</p><p>$$  传播时延 = \frac{信道长度(m)}{电磁波传播速率(m/s)} = \frac{1000 × 10^3(m)}{2 × 10^8(m/s)} = 0.005s $$</p><h3 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h3><p>$$  时延带宽积 = 传播时延 × 带宽 $$</p><h3 id="往返时间"><a href="#往返时间" class="headerlink" title="往返时间"></a>往返时间</h3><blockquote><p>在很多情况下，因特网上的信息不仅仅单方向传输，而是双向交互。因此，往返时间RTT（Round-Trip  Time）也是一个重要指标。</p></blockquote><h3 id="利用率"><a href="#利用率" class="headerlink" title="利用率"></a>利用率</h3><blockquote><p><kbd>信道利用率</kbd> ： 用来表示某信道有百分之几的时间是被利用的（有数据通过）。</p><p><kbd>网络利用率</kbd> ： 全网络的信道利用率的加权平均。</p></blockquote><p>根据排队论，当某信道的利用率增大时，该信道引起的时延也会迅速增加。因此，信道的利用率并非越高越好。</p><p>如果令$$ D_0 $$ 表示网络空闲时的时延，D表示网络当前的时延，那么在适当的假定条件下，可以用下面的简单公式来表示D、$$ D_0 $$ 和利用率U之间的关系：</p><p>$$ D = \frac{D_0}{1 - U}  $$</p><ul><li>当网络的利用率达到 50% 的时候，时延就要加倍。</li><li>当网络的利用率超过 50% 的时候，时延急剧增大。</li><li>当网络的利用率接近 100% 的时候，时延就趋近于无穷大。</li><li>因此，一些拥有较大主干网的ISP通常会控制他们的信道利用率不超过 50% 。如果超过了，就要准备扩容，增大线路的带宽。</li><li>也不能使信道利用率太低，这会使宝贵的通信资源被白白浪费。应该使用一些机制，可以根据情况动态调整输入到网络中的通信量，使网络利用率保持在一个合理的范围内。</li></ul><h3 id="丢包率"><a href="#丢包率" class="headerlink" title="丢包率"></a>丢包率</h3><blockquote><p>丢包率即分组丢失率，是指在一定的时间范围内，传输过程中丢失的分组数量与总分组数量的比率。</p></blockquote><blockquote><p>丢包率具体可分为接口丢失率、结点丢包率、链路丢包率、路径丢包率、网络丢包率等。</p></blockquote><blockquote><p>丢包率是网络运维人员非常关心的一个网络性能指标，但对于普通用户来说往往并不关心这个指标，因为他们通常意识不到网络丢包。</p></blockquote><blockquote><p>分组丢失主要有两种情况：</p><ul><li>分组在传输过程中出现误码，被结点丢弃</li><li>分组到达一台队列已满的分组交换机时被丢弃，在通信量较大时就可能造成网络拥塞。</li></ul></blockquote><blockquote><p>丢包率反映了网络的拥塞情况：</p><ul><li>无拥塞时路径丢包率为0</li><li>轻度拥塞时路径丢包率为1% ~ 4%</li><li>严重拥塞时路径丢包率为5% ~ 15%</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习笔记，包含以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络、互联网（互连网）和因特网&lt;/li&gt;
&lt;li&gt;三种交换方式&lt;/li&gt;
&lt;li&gt;计算机网络的性能指标&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://www.imqinhao.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Python基础之变量进阶</title>
    <link href="https://www.imqinhao.cn/2020/07/07/Python_variable/"/>
    <id>https://www.imqinhao.cn/2020/07/07/Python_variable/</id>
    <published>2020-07-07T10:30:11.000Z</published>
    <updated>2020-07-07T10:54:59.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>变量的引用</li><li>可变和不可变类型</li><li>局部变量和全局变量</li></ul><a id="more"></a><h2 id="01-变量的引用"><a href="#01-变量的引用" class="headerlink" title="01. 变量的引用"></a>01. 变量的引用</h2><blockquote><ul><li>变量 和 数据 都是保存在 <strong>内存</strong> 中的</li><li>在 <code>Python</code> 中 <strong>函数 的 参数传递</strong> 以及 <strong>返回值</strong> 都是靠 <strong>引用</strong> 传递的</li></ul></blockquote><h3 id="1-1-引用的概念"><a href="#1-1-引用的概念" class="headerlink" title="1.1 引用的概念"></a>1.1 引用的概念</h3><p>在 <code>Python</code> 中</p><ul><li><strong>变量</strong> 和 <strong>数据</strong> 是分开存储的</li><li><strong>数据</strong> 保存在内存中的一个位置</li><li><strong>变量</strong> 中保存着数据在内存中的地址</li><li><strong>变量</strong> 中 <strong>记录数据的地址</strong>，就叫做 <strong>引用</strong></li><li>使用 <code>id()</code> 函数可以查看变量中保存数据所在的 <strong>内存地址</strong></li></ul><blockquote><p>注意：如果变量已经被定义，当给一个变量赋值的时候，本质上是 <strong>修改了数据的引用</strong></p><ul><li>变量 <strong>不再</strong> 对之前的数据引用</li><li>变量 <strong>改为</strong> 对新赋值的数据引用</li></ul></blockquote><h3 id="1-2-变量引用-的示例"><a href="#1-2-变量引用-的示例" class="headerlink" title="1.2 变量引用 的示例"></a>1.2 <code>变量引用</code> 的示例</h3><p>在 <code>Python</code> 中，变量的名字类似于 <strong>便签纸</strong> 贴在 <strong>数据</strong> 上</p><ul><li>定义一个整数变量 <code>a</code>，并且赋值为 <code>1</code></li></ul><table><thead><tr><th align="center">代码</th><th align="center">图示</th></tr></thead><tbody><tr><td align="center">a = 1</td><td align="center"><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183733.png" alt="004_a1tag"></td></tr></tbody></table><ul><li>将变量 <code>a</code> 赋值为 <code>2</code></li></ul><table><thead><tr><th align="center">代码</th><th align="center">图示</th></tr></thead><tbody><tr><td align="center">a = 2</td><td align="center"><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183734.png" alt="005_a2tag">)<img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183735.png" alt="005_1"></td></tr></tbody></table><ul><li>定义一个整数变量 <code>b</code>，并且将变量 <code>a</code> 的值赋值给 <code>b</code></li></ul><table><thead><tr><th align="center">代码</th><th align="center">图示</th></tr></thead><tbody><tr><td align="center">b = a</td><td align="center"><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183736.png" alt="006_ab2tag"></td></tr></tbody></table><blockquote><p>变量 <code>b</code> 是第 2 个贴在数字 <code>2</code> 上的标签</p></blockquote><h3 id="1-3-函数的参数和返回值的传递"><a href="#1-3-函数的参数和返回值的传递" class="headerlink" title="1.3 函数的参数和返回值的传递"></a>1.3 函数的参数和返回值的传递</h3><p>在 <code>Python</code> 中，函数的 <strong>实参</strong>/<strong>返回值</strong> 都是是靠 <strong>引用</strong> 来传递来的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(num)</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"%d 在函数内的内存地址是 %x"</span> % (num, id(num)))</span><br><span class="line"></span><br><span class="line">    result = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"返回值 %d 在内存中的地址是 %x"</span> % (result, id(result)))</span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  result</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">print(<span class="string">"调用函数前 内存地址是 %x"</span> % id(a))</span><br><span class="line"></span><br><span class="line">r = test(a)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"调用函数后 实参内存地址是 %x"</span> % id(a))</span><br><span class="line">print(<span class="string">"调用函数后 返回值内存地址是 %x"</span> % id(r))</span><br></pre></td></tr></table></figure><h2 id="02-可变和不可变类型"><a href="#02-可变和不可变类型" class="headerlink" title="02. 可变和不可变类型"></a>02. 可变和不可变类型</h2><ul><li><p><strong>不可变类型</strong>，内存中的数据不允许被修改：</p><ul><li>数字类型 <code>int</code>, <code>bool</code>, <code>float</code>, <code>complex</code>, <code>long(2.x)</code></li><li>字符串 <code>str</code></li><li>元组 <code>tuple</code></li></ul></li><li><p><strong>可变类型</strong>，内存中的数据可以被修改：</p><ul><li>列表 <code>list</code></li><li>字典 <code>dict</code></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">a = <span class="string">"hello"</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">a = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">demo_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">"定义列表后的内存地址 %d"</span> % id(demo_list))</span><br><span class="line"></span><br><span class="line">demo_list.append(<span class="number">999</span>)</span><br><span class="line">demo_list.pop(<span class="number">0</span>)</span><br><span class="line">demo_list.remove(<span class="number">2</span>)</span><br><span class="line">demo_list[<span class="number">0</span>] = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"修改数据后的内存地址 %d"</span> % id(demo_list))</span><br><span class="line"></span><br><span class="line">demo_dict = &#123;<span class="string">"name"</span>: <span class="string">"小明"</span>&#125;</span><br><span class="line"></span><br><span class="line">print(<span class="string">"定义字典后的内存地址 %d"</span> % id(demo_dict))</span><br><span class="line"></span><br><span class="line">demo_dict[<span class="string">"age"</span>] = <span class="number">18</span></span><br><span class="line">demo_dict.pop(<span class="string">"name"</span>)</span><br><span class="line">demo_dict[<span class="string">"name"</span>] = <span class="string">"老王"</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"修改数据后的内存地址 %d"</span> % id(demo_dict))</span><br></pre></td></tr></table></figure><blockquote><p>注意：字典的 <code>key</code> <strong>只能使用不可变类型的数据</strong></p></blockquote><p><strong>注意</strong></p><ol><li><strong>可变类型</strong>的数据变化，是通过 <strong>方法</strong> 来实现的</li><li>如果给一个可变类型的变量，赋值了一个新的数据，<strong>引用会修改</strong><ul><li>变量 <strong>不再</strong> 对之前的数据引用</li><li>变量 <strong>改为</strong> 对新赋值的数据引用</li></ul></li></ol><h3 id="哈希-hash"><a href="#哈希-hash" class="headerlink" title="哈希 (hash)"></a>哈希 <code>(hash)</code></h3><ul><li><code>Python</code> 中内置有一个名字叫做 <code>hash(o)</code> 的函数<ul><li>接收一个 <strong>不可变类型</strong> 的数据作为 <strong>参数</strong></li><li><strong>返回</strong> 结果是一个 <strong>整数</strong></li></ul></li><li><code>哈希</code> 是一种 <strong>算法</strong>，其作用就是提取数据的 <strong>特征码（指纹）</strong><ul><li><strong>相同的内容</strong> 得到 <strong>相同的结果</strong></li><li><strong>不同的内容</strong> 得到 <strong>不同的结果</strong></li></ul></li><li>在 <code>Python</code> 中，设置字典的 <strong>键值对</strong> 时，会首先对 <code>key</code> 进行 <code>hash</code> 已决定如何在内存中保存字典的数据，以方便 <strong>后续</strong> 对字典的操作：<strong>增、删、改、查</strong><ul><li>键值对的 <code>key</code> 必须是不可变类型数据</li><li>键值对的 <code>value</code> 可以是任意类型的数据</li></ul></li></ul><h2 id="03-局部变量和全局变量"><a href="#03-局部变量和全局变量" class="headerlink" title="03. 局部变量和全局变量"></a>03. 局部变量和全局变量</h2><ul><li><strong>局部变量</strong> 是在 <strong>函数内部</strong> 定义的变量，<strong>只能在函数内部使用</strong></li><li><strong>全局变量</strong> 是在 <strong>函数外部定义</strong> 的变量（没有定义在某一个函数内），<strong>所有函数</strong> 内部 <strong>都可以使用这个变量</strong></li></ul><blockquote><p>提示：在其他的开发语言中，大多 <strong>不推荐使用全局变量</strong> —— 可变范围太大，导致程序不好维护！</p></blockquote><h3 id="3-1-局部变量"><a href="#3-1-局部变量" class="headerlink" title="3.1 局部变量"></a>3.1 局部变量</h3><ul><li><strong>局部变量</strong> 是在 <strong>函数内部</strong> 定义的变量，<strong>只能在函数内部使用</strong></li><li>函数执行结束后，<strong>函数内部的局部变量，会被系统回收</strong></li><li>不同的函数，可以定义相同的名字的局部变量，但是 <strong>彼此之间</strong> 不会产生影响</li></ul><h4 id="局部变量的作用"><a href="#局部变量的作用" class="headerlink" title="局部变量的作用"></a>局部变量的作用</h4><ul><li>在函数内部使用，<strong>临时</strong> 保存 <strong>函数内部需要使用的数据</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">    num = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"修改后 %d"</span> % num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    num = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><h4 id="局部变量的生命周期"><a href="#局部变量的生命周期" class="headerlink" title="局部变量的生命周期"></a>局部变量的生命周期</h4><ul><li>所谓 <strong>生命周期</strong> 就是变量从 <strong>被创建</strong> 到 <strong>被系统回收</strong> 的过程</li><li><strong>局部变量</strong> 在 <strong>函数执行时</strong> 才会被创建</li><li><strong>函数执行结束后</strong> 局部变量 <strong>被系统回收</strong></li><li><strong>局部变量在生命周期</strong> 内，可以用来存储 <strong>函数内部临时使用到的数据</strong></li></ul><h3 id="3-2-全局变量"><a href="#3-2-全局变量" class="headerlink" title="3.2 全局变量"></a>3.2 全局变量</h3><ul><li><strong>全局变量</strong> 是在 <strong>函数外部定义</strong> 的变量，所有函数内部都可以使用这个变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个全局变量</span></span><br><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：函数执行时，<strong>需要处理变量时</strong> 会：</p><ol><li><strong>首先</strong> 查找 <strong>函数内部</strong> 是否存在 <strong>指定名称 的局部变量</strong>，<strong>如果有，直接使用</strong></li><li>如果没有，查找 <strong>函数外部</strong> 是否存在 <strong>指定名称 的全局变量</strong>，<strong>如果有，直接使用</strong></li><li>如果还没有，程序报错！</li></ol><h4 id="1-函数不能直接修改-全局变量的引用"><a href="#1-函数不能直接修改-全局变量的引用" class="headerlink" title="1) 函数不能直接修改 全局变量的引用"></a>1) 函数不能直接修改 <code>全局变量的引用</code></h4><ul><li><strong>全局变量</strong> 是在 <strong>函数外部定义</strong> 的变量（没有定义在某一个函数内），<strong>所有函数</strong> 内部 <strong>都可以使用这个变量</strong></li></ul><blockquote><p>提示：在其他的开发语言中，大多 <strong>不推荐使用全局变量</strong> —— 可变范围太大，导致程序不好维护！</p></blockquote><ul><li>在函数内部，可以 <strong>通过全局变量的引用获取对应的数据</strong></li><li>但是，<strong>不允许直接修改全局变量的引用</strong> —— 使用赋值语句修改全局变量的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo1"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 只是定义了一个局部变量，不会修改到全局变量，只是变量名相同而已</span></span><br><span class="line">    num = <span class="number">100</span></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo2"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意：只是在函数内部定义了一个局部变量而已，只是变量名相同 —— 在函数内部不能直接修改全局变量的值</p></blockquote><h4 id="2-在函数内部修改全局变量的值"><a href="#2-在函数内部修改全局变量的值" class="headerlink" title="2) 在函数内部修改全局变量的值"></a>2) 在函数内部修改全局变量的值</h4><ul><li>如果在函数中需要修改全局变量，需要使用 <code>global</code> 进行声明</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo1"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># global 关键字，告诉 Python 解释器 num 是一个全局变量</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="comment"># 只是定义了一个局部变量，不会修改到全局变量，只是变量名相同而已</span></span><br><span class="line">    num = <span class="number">100</span></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo2"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><h4 id="3-全局变量定义的位置"><a href="#3-全局变量定义的位置" class="headerlink" title="3) 全局变量定义的位置"></a>3) 全局变量定义的位置</h4><ul><li>为了保证所有的函数都能够正确使用到全局变量，应该 <strong>将全局变量定义在其他函数的上方</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"%d"</span> % a)</span><br><span class="line">    print(<span class="string">"%d"</span> % b)</span><br><span class="line">    print(<span class="string">"%d"</span> % c)</span><br><span class="line"></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line">demo()</span><br><span class="line">c = <span class="number">30</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li>由于全局变量 c，是在调用函数之后，才定义的，在执行函数时，变量还没有定义，所以程序会报错！</li></ul><p><strong>代码结构示意图如下</strong></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183737.png" alt="001_代码结构示意图-w240"></p><h4 id="4-全局变量命名的建议"><a href="#4-全局变量命名的建议" class="headerlink" title="4) 全局变量命名的建议"></a>4) 全局变量命名的建议</h4><ul><li>为了避免局部变量和全局变量出现混淆，在定义全局变量时，有些公司会有一些开发要求，例如：</li><li>全局变量名前应该增加 <code>g_</code> 或者 <code>gl_</code> 的前缀</li></ul><blockquote><p>提示：具体的要求格式，各公司要求可能会有些差异</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;变量的引用&lt;/li&gt;
&lt;li&gt;可变和不可变类型&lt;/li&gt;
&lt;li&gt;局部变量和全局变量&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>综合应用 —— 名片管理系统</title>
    <link href="https://www.imqinhao.cn/2020/07/07/Python_cards_manage/"/>
    <id>https://www.imqinhao.cn/2020/07/07/Python_cards_manage/</id>
    <published>2020-07-07T09:20:14.000Z</published>
    <updated>2020-07-07T10:10:57.176Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>综合应用已经学习过的知识点：</p><ul><li><strong>变量</strong></li><li><strong>流程控制</strong></li><li><strong>函数</strong></li><li><strong>模块</strong></li></ul><p>开发 <strong>名片管理系统</strong></p><a id="more"></a><h2 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h2><ul><li><ol><li>程序启动，显示名片管理系统欢迎界面，并显示功能菜单</li></ol></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">**************************************************</span><br><span class="line">欢迎使用【名片管理系统】V1.0</span><br><span class="line"></span><br><span class="line">1. 新建名片</span><br><span class="line">2. 显示全部</span><br><span class="line">3. 查询名片</span><br><span class="line"></span><br><span class="line">0. 退出系统</span><br><span class="line">**************************************************</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>用户用数字选择不同的功能</li></ol></li><li><ol start="3"><li>根据功能选择，执行不同的功能</li></ol></li><li><ol start="4"><li>用户名片需要记录用户的 <strong>姓名</strong>、<strong>电话</strong>、<strong>QQ</strong>、<strong>邮件</strong></li></ol></li><li><ol start="5"><li>如果查询到指定的名片，用户可以选择 <strong>修改</strong> 或者 <strong>删除</strong> 名片</li></ol></li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>框架搭建</li><li>新增名片</li><li>显示所有名片</li><li>查询名片</li><li>查询成功后修改、删除名片</li><li>让 Python 程序能够直接运行</li></ol><h2 id="01-框架搭建"><a href="#01-框架搭建" class="headerlink" title="01. 框架搭建"></a>01. 框架搭建</h2><p><strong>目标</strong></p><ul><li>搭建名片管理系统 <strong>框架结构</strong><ol><li><strong>准备文件</strong>，确定文件名，保证能够 <strong>在需要的位置</strong> 编写代码</li><li>编写 <strong>主运行循环</strong>，实现基本的 <strong>用户输入和判断</strong></li></ol></li></ul><h3 id="1-1-文件准备"><a href="#1-1-文件准备" class="headerlink" title="1.1 文件准备"></a>1.1 文件准备</h3><ol><li>新建 <code>cards_main.py</code> 保存 <strong>主程序功能代码</strong><ul><li>程序的入口</li><li>每一次启动名片管理系统都通过 <code>main</code> 这个文件启动 </li></ul></li><li>新建 <code>cards_tools.py</code> 保存 <strong>所有名片功能函数</strong><ul><li>将对名片的 <strong>新增</strong>、<strong>查询</strong>、<strong>修改</strong>、<strong>删除</strong> 等功能封装在不同的函数中</li></ul></li></ol><h3 id="1-2-编写主运行循环"><a href="#1-2-编写主运行循环" class="headerlink" title="1.2 编写主运行循环"></a>1.2 编写主运行循环</h3><ul><li>在 <code>cards_main</code> 中添加一个 <strong>无限循环</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># TODO(小明) 显示系统菜单</span></span><br><span class="line"></span><br><span class="line">    action = input(<span class="string">"请选择操作功能："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"您选择的操作是：%s"</span> % action)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据用户输入决定后续的操作</span></span><br><span class="line">    <span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入"</span>)</span><br></pre></td></tr></table></figure><h4 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断"></a>字符串判断</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"1"</span> <span class="keyword">or</span> action == <span class="string">"2"</span> <span class="keyword">or</span> action == <span class="string">"3"</span>:</span><br></pre></td></tr></table></figure><ol><li>使用 <code>in</code> 针对 <strong>列表</strong> 判断，避免使用 <code>or</code> 拼接复杂的逻辑条件</li><li>没有使用 <code>int</code> 转换用户输入，可以避免 <strong>一旦用户输入的不是数字</strong>，导致程序运行出错</li></ol><h4 id="pass"><a href="#pass" class="headerlink" title="pass"></a>pass</h4><ul><li><code>pass</code> 就是一个空语句，不做任何事情，一般用做占位语句</li><li>是为了保持程序结构的完整性</li></ul><h4 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h4><ul><li>在开发软件时，如果 <strong>不希望程序执行后</strong> 立即退出</li><li>可以在程序中增加一个 <strong>无限循环</strong></li><li><strong>由用户来决定</strong> 退出程序的时机</li></ul><h4 id="TODO-注释"><a href="#TODO-注释" class="headerlink" title="TODO 注释"></a>TODO 注释</h4><ul><li>在 <code>#</code> 后跟上 <code>TODO</code>，用于标记需要去做的工作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TODO(作者/邮件) 显示系统菜单</span></span><br></pre></td></tr></table></figure><h3 id="1-3-在-cards-tools-中增加四个新函数"><a href="#1-3-在-cards-tools-中增加四个新函数" class="headerlink" title="1.3 在 cards_tools 中增加四个新函数"></a>1.3 在 <code>cards_tools</code> 中增加四个新函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示菜单</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新建名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：新建名片"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""搜索名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：搜索名片"</span>)</span><br></pre></td></tr></table></figure><h3 id="1-4-导入模块"><a href="#1-4-导入模块" class="headerlink" title="1.4 导入模块"></a>1.4 导入模块</h3><ul><li>在 <code>cards_main.py</code> 中使用 <code>import</code> 导入 <code>cards_tools</code> 模块</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br></pre></td></tr></table></figure><ul><li>修改 <code>while</code> 循环的代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    cards_tools.show_menu()</span><br><span class="line"></span><br><span class="line">    action = input(<span class="string">"请选择操作功能："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"您选择的操作是：%s"</span> % action)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据用户输入决定后续的操作</span></span><br><span class="line">    <span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line">            cards_tools.new_card()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">            cards_tools.show_all()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> action == <span class="string">"3"</span>:</span><br><span class="line">            cards_tools.search_card()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入："</span>)</span><br></pre></td></tr></table></figure><blockquote><p>至此：<code>cards_main</code> 中的所有代码全部开发完毕！</p></blockquote><h3 id="1-5-完成-show-menu-函数"><a href="#1-5-完成-show-menu-函数" class="headerlink" title="1.5 完成 show_menu 函数"></a>1.5 完成 <code>show_menu</code> 函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示菜单</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"欢迎使用【菜单管理系统】V1.0"</span>)</span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"1. 新建名片"</span>)</span><br><span class="line">    print(<span class="string">"2. 显示全部"</span>)</span><br><span class="line">    print(<span class="string">"3. 查询名片"</span>)</span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"0. 退出系统"</span>)</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br></pre></td></tr></table></figure><h2 id="02-保存名片数据的结构"><a href="#02-保存名片数据的结构" class="headerlink" title="02. 保存名片数据的结构"></a>02. 保存名片数据的结构</h2><p><strong>程序就是用来处理数据的，而变量就是用来存储数据的</strong></p><ul><li>使用 <strong>字典</strong> 记录 <strong>每一张名片</strong> 的详细信息</li><li>使用 <strong>列表</strong> 统一记录所有的 <strong>名片字典</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707171312.png" alt="001_名片管理系统全局列表-w500"></p><h3 id="定义名片列表变量"><a href="#定义名片列表变量" class="headerlink" title="定义名片列表变量"></a>定义名片列表变量</h3><ul><li>在 <code>cards_tools</code> 文件的顶部增加一个 <strong>列表变量</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有名片记录的列表</span></span><br><span class="line">card_list = []</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ol><li><strong>所有名片相关操作</strong>，都需要使用这个列表，所以应该 <strong>定义在程序的顶部</strong></li><li><strong>程序刚运行时，没有数据</strong>，所以是 <strong>空列表</strong></li></ol><h2 id="03-新增名片"><a href="#03-新增名片" class="headerlink" title="03. 新增名片"></a>03. 新增名片</h2><h3 id="3-1-功能分析"><a href="#3-1-功能分析" class="headerlink" title="3.1 功能分析"></a>3.1 功能分析</h3><ol><li>提示用户依次输入名片信息</li><li>将名片信息保存到一个字典</li><li>将字典添加到名片列表</li><li>提示名片添加完成</li></ol><h3 id="3-2-实现-new-card-方法"><a href="#3-2-实现-new-card-方法" class="headerlink" title="3.2 实现 new_card 方法"></a>3.2 实现 new_card 方法</h3><ul><li>根据步骤实现代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新建名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：新建名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 提示用户输入名片信息</span></span><br><span class="line">    name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    phone = input(<span class="string">"请输入电话："</span>)</span><br><span class="line">    qq = input(<span class="string">"请输入 QQ 号码："</span>)</span><br><span class="line">    email = input(<span class="string">"请输入邮箱："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 将用户信息保存到一个字典</span></span><br><span class="line">    card_dict = &#123;<span class="string">"name"</span>: name,</span><br><span class="line">                 <span class="string">"phone"</span>: phone,</span><br><span class="line">                 <span class="string">"qq"</span>: qq,</span><br><span class="line">                 <span class="string">"email"</span>: email&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 将用户字典添加到名片列表</span></span><br><span class="line">    card_list.append(card_dict)</span><br><span class="line"></span><br><span class="line">    print(card_list)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 4. 提示添加成功信息</span></span><br><span class="line">    print(<span class="string">"成功添加 %s 的名片"</span> % card_dict[<span class="string">"name"</span>])</span><br></pre></td></tr></table></figure><blockquote><p>技巧：在 <code>PyCharm</code> 中，可以使用 <code>SHIFT + F6</code> 统一修改变量名</p></blockquote><h2 id="04-显示所有名片"><a href="#04-显示所有名片" class="headerlink" title="04. 显示所有名片"></a>04. 显示所有名片</h2><h3 id="4-1-功能分析"><a href="#4-1-功能分析" class="headerlink" title="4.1 功能分析"></a>4.1 功能分析</h3><ul><li>循环遍历名片列表，顺序显示每一个字典的信息</li></ul><h3 id="4-2-基础代码实现"><a href="#4-2-基础代码实现" class="headerlink" title="4.2 基础代码实现"></a>4.2 基础代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        print(card_dict)</span><br></pre></td></tr></table></figure><ul><li>显示效果不好！</li></ul><h3 id="4-3-增加标题和使用-t-显示"><a href="#4-3-增加标题和使用-t-显示" class="headerlink" title="4.3 增加标题和使用 \t 显示"></a>4.3 增加标题和使用 <code>\t</code> 显示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印表头</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> [<span class="string">"姓名"</span>, <span class="string">"电话"</span>, <span class="string">"QQ"</span>, <span class="string">"邮箱"</span>]:</span><br><span class="line">        print(name, end=<span class="string">"\t\t"</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印分隔线</span></span><br><span class="line">    print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s\t\t%s\t\t%s\t\t%s"</span> % (card_dict[<span class="string">"name"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"email"</span>]))</span><br></pre></td></tr></table></figure><h3 id="4-4-增加没有名片记录判断"><a href="#4-4-增加没有名片记录判断" class="headerlink" title="4.4 增加没有名片记录判断"></a>4.4 增加没有名片记录判断</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 判断是否有名片记录</span></span><br><span class="line">    <span class="keyword">if</span> len(card_list) == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"提示：没有任何名片记录"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li>在函数中使用 <code>return</code> 表示返回</li><li>如果在 <code>return</code> 后没有跟任何内容，只是表示该函数执行到此就不再执行后续的代码</li></ul><h2 id="05-查询名片"><a href="#05-查询名片" class="headerlink" title="05. 查询名片"></a>05. 查询名片</h2><h3 id="5-1-功能分析"><a href="#5-1-功能分析" class="headerlink" title="5.1 功能分析"></a>5.1 功能分析</h3><ol><li>提示用户要搜索的姓名</li><li>根据用户输入的姓名遍历列表</li><li>搜索到指定的名片后，再执行后续的操作</li></ol><h3 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h3><ul><li>查询功能实现</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""搜索名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：搜索名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 提示要搜索的姓名</span></span><br><span class="line">    find_name = input(<span class="string">"请输入要搜索的姓名："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 遍历字典</span></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> card_dict[<span class="string">"name"</span>] == find_name:</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"姓名\t\t\t电话\t\t\tQQ\t\t\t邮箱"</span>)</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">40</span>)</span><br><span class="line">            </span><br><span class="line">            print(<span class="string">"%s\t\t\t%s\t\t\t%s\t\t\t%s"</span> % (</span><br><span class="line">                card_dict[<span class="string">"name"</span>],</span><br><span class="line">                card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                card_dict[<span class="string">"email"</span>]))</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">40</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># TODO(小明) 针对找到的字典进行后续操作：修改/删除</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"没有找到 %s"</span> % find_name)</span><br></pre></td></tr></table></figure><ul><li>增加名片操作函数：<strong>修改</strong>/<strong>删除</strong>/<strong>返回主菜单</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_card</span><span class="params">(find_dict)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""操作搜索到的名片字典</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param find_dict:找到的名片字典</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(find_dict)</span><br><span class="line"></span><br><span class="line">    action_str = input(<span class="string">"请选择要执行的操作 "</span></span><br><span class="line">                       <span class="string">"[1] 修改 [2] 删除 [0] 返回上级菜单"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line">        print(<span class="string">"修改"</span>)</span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">        print(<span class="string">"删除"</span>)</span><br></pre></td></tr></table></figure><h2 id="06-修改和删除"><a href="#06-修改和删除" class="headerlink" title="06. 修改和删除"></a>06. 修改和删除</h2><h3 id="6-1-查询成功后删除名片"><a href="#6-1-查询成功后删除名片" class="headerlink" title="6.1 查询成功后删除名片"></a>6.1 查询成功后删除名片</h3><ul><li>由于找到的字典记录已经在列表中保存</li><li>要删除名片记录，只需要把列表中对应的字典删除即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">    card_list.remove(find_dict)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"删除成功"</span>)</span><br></pre></td></tr></table></figure><h3 id="6-2-修改名片"><a href="#6-2-修改名片" class="headerlink" title="6.2 修改名片"></a>6.2 修改名片</h3><ul><li>由于找到的字典记录已经在列表中保存</li><li>要修改名片记录，只需要把列表中对应的字典中每一个键值对的数据修改即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line"></span><br><span class="line">    find_dict[<span class="string">"name"</span>] = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    find_dict[<span class="string">"phone"</span>] = input(<span class="string">"请输入电话："</span>)</span><br><span class="line">    find_dict[<span class="string">"qq"</span>] = input(<span class="string">"请输入QQ："</span>)</span><br><span class="line">    find_dict[<span class="string">"email"</span>] = input(<span class="string">"请输入邮件："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"%s 的名片修改成功"</span> % find_dict[<span class="string">"name"</span>])</span><br></pre></td></tr></table></figure><h4 id="修改名片细化"><a href="#修改名片细化" class="headerlink" title="修改名片细化"></a>修改名片细化</h4><ul><li><strong>如果用户在使用时，某些名片内容并不想修改</strong>，应该如何做呢？—— 既然系统提供的 <code>input</code> 函数不能满足需求，那么就新定义一个函数 <code>input_card_info</code> 对系统的 <code>input</code> 函数进行扩展</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_card_info</span><span class="params">(dict_value, tip_message)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""输入名片信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param dict_value: 字典原有值</span></span><br><span class="line"><span class="string">    :param tip_message: 输入提示信息</span></span><br><span class="line"><span class="string">    :return: 如果输入，返回输入内容，否则返回字典原有值</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 1. 提示用户输入内容</span></span><br><span class="line">    result_str = input(tip_message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 针对用户的输入进行判断，如果用户输入了内容，直接返回结果</span></span><br><span class="line">    <span class="keyword">if</span> len(result_str) &gt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result_str</span><br><span class="line">    <span class="comment"># 3. 如果用户没有输入内容，返回 `字典中原有的值`</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict_value</span><br></pre></td></tr></table></figure><h2 id="07-LINUX-上的-Shebang-符号"><a href="#07-LINUX-上的-Shebang-符号" class="headerlink" title="07. LINUX 上的 Shebang 符号(#!)"></a>07. LINUX 上的 <code>Shebang</code> 符号(<code>#!</code>)</h2><ul><li><code>#!</code>这个符号叫做 <code>Shebang</code> 或者 <code>Sha-bang</code></li><li><code>Shebang</code> 通常在 <code>Unix</code> 系统脚本的中 <strong>第一行开头</strong> 使用</li><li>指明 <strong>执行这个脚本文件</strong> 的 <strong>解释程序</strong></li></ul><h3 id="使用-Shebang-的步骤"><a href="#使用-Shebang-的步骤" class="headerlink" title="使用 Shebang 的步骤"></a>使用 Shebang 的步骤</h3><ul><li><ol><li>使用 <code>which</code> 查询 <code>python3</code> 解释器所在路径</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> python3</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>修改要运行的 <strong>主 python 文件</strong>，在第一行增加以下内容</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br></pre></td></tr></table></figure><ul><li><ol start="3"><li>修改 <strong>主 python 文件</strong> 的文件权限，增加执行权限</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x cards_main.py</span><br></pre></td></tr></table></figure><ul><li><ol start="4"><li>在需要时执行程序即可</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cards_main.py</span><br></pre></td></tr></table></figure><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><h3 id="cards-tools代码"><a href="#cards-tools代码" class="headerlink" title="cards_tools代码"></a>cards_tools代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 记录所有的名片字典</span></span><br><span class="line">card_list = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''显示菜单'''</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"欢迎使用【名片管理系统】 V1.0"</span>)</span><br><span class="line">    print()</span><br><span class="line">    print(<span class="string">"1. 新建名片"</span>)</span><br><span class="line">    print(<span class="string">"2. 显示全部"</span>)</span><br><span class="line">    print(<span class="string">"3. 查询名片"</span>)</span><br><span class="line">    print()</span><br><span class="line">    print(<span class="string">"0. 退出系统"</span>)</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新增名片"""</span></span><br><span class="line">    <span class="comment"># 1.提示用户输入名片的详细信息</span></span><br><span class="line">    name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    phone = input(<span class="string">"请输入手机号："</span>)</span><br><span class="line">    qq = input(<span class="string">"请输入QQ号："</span>)</span><br><span class="line">    email = input(<span class="string">"请输入邮箱："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用用户输入的信息建立一个名片字典</span></span><br><span class="line">    card_dict = &#123;<span class="string">"name"</span>: name,</span><br><span class="line">                 <span class="string">"phone"</span>: phone,</span><br><span class="line">                 <span class="string">"qq"</span>: qq,</span><br><span class="line">                 <span class="string">"email"</span>: email&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将名片字典添加到列表中</span></span><br><span class="line">    card_list.append(card_dict)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提示用户新增成功</span></span><br><span class="line">    print(<span class="string">"添加 &#123;&#125; 的名片成功！"</span>.format(name))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示所有名片"""</span></span><br><span class="line">    <span class="comment"># 显示功能</span></span><br><span class="line">    print(<span class="string">"显示所有名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否存在名片记录</span></span><br><span class="line">    <span class="keyword">if</span> len(card_list) == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"当前没有任何的名片记录，请使用新增功能添加名片！"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 打印表头</span></span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> [<span class="string">"姓名"</span>, <span class="string">"电话"</span>, <span class="string">"QQ"</span>, <span class="string">"邮箱"</span>]:</span><br><span class="line">            print(<span class="string">"&#123;:15&#125;"</span>.format(name), end=<span class="string">" "</span>)</span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印分隔线</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line">        print(<span class="string">"&#123;:15&#125;&#123;:15&#125;&#123;:15&#125;&#123;:15&#125;"</span>.format(card_dict[<span class="string">"name"</span>],</span><br><span class="line">                                            card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                                            card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                                            card_dict[<span class="string">"email"</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""搜索名片"""</span></span><br><span class="line">    <span class="comment"># 显示功能</span></span><br><span class="line">    print(<span class="string">"搜索名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用户输入要搜索的姓名</span></span><br><span class="line">    find_name = input(<span class="string">"请输入要搜索的姓名："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历名片列表</span></span><br><span class="line">    <span class="keyword">for</span> user_info <span class="keyword">in</span> card_list:</span><br><span class="line">        <span class="keyword">if</span> user_info[<span class="string">"name"</span>] == find_name:</span><br><span class="line">            <span class="comment"># 打印表头</span></span><br><span class="line">            <span class="keyword">for</span> name <span class="keyword">in</span> [<span class="string">"姓名"</span>, <span class="string">"电话"</span>, <span class="string">"QQ"</span>, <span class="string">"邮箱"</span>]:</span><br><span class="line">                print(<span class="string">"&#123;:20&#125;"</span>.format(name), end=<span class="string">" "</span>)</span><br><span class="line">            print()</span><br><span class="line">            <span class="comment"># 打印分隔线</span></span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="comment"># 打印名片信息</span></span><br><span class="line">            print(<span class="string">"&#123;:20&#125;&#123;:20&#125;&#123;:20&#125;&#123;:20&#125;"</span>.format(user_info[<span class="string">"name"</span>],</span><br><span class="line">                                                user_info[<span class="string">"phone"</span>],</span><br><span class="line">                                                user_info[<span class="string">"qq"</span>],</span><br><span class="line">                                                user_info[<span class="string">"email"</span>]))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 针对找到的名片记录执行修改和删除的操作</span></span><br><span class="line">            deal_card(user_info)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"抱歉，没有找到&#123;&#125;的名片"</span>.format(find_name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_card</span><span class="params">(find_dict)</span>:</span></span><br><span class="line">    <span class="string">"""处理查找到的名片</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param find_dict: 查找到的名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    action_str = input(<span class="string">"请选择要执行的操作： "</span></span><br><span class="line">                       <span class="string">"[1]  修改  /  [2]  删除  /  [0]  返回上级菜单"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> action_str == <span class="string">"1"</span>:</span><br><span class="line">        find_dict[<span class="string">"name"</span>] = input_card_info(find_dict[<span class="string">"name"</span>], <span class="string">"姓名[回车不修改]："</span>)</span><br><span class="line">        find_dict[<span class="string">"phone"</span>] = input_card_info(find_dict[<span class="string">"phone"</span>], <span class="string">"电话[回车不修改]："</span>)</span><br><span class="line">        find_dict[<span class="string">"qq"</span>] = input_card_info(find_dict[<span class="string">"qq"</span>], <span class="string">"QQ[回车不修改]："</span>)</span><br><span class="line">        find_dict[<span class="string">"email"</span>] = input_card_info(find_dict[<span class="string">"email"</span>], <span class="string">"邮箱[回车不修改]："</span>)</span><br><span class="line">        print(<span class="string">"修改&#123;&#125;的名片成功！"</span>.format(find_dict[<span class="string">"name"</span>]))</span><br><span class="line">    <span class="keyword">elif</span> action_str == <span class="string">"2"</span>:</span><br><span class="line">        card_list.remove(find_dict)</span><br><span class="line">        print(<span class="string">"删除&#123;&#125;的名片成功！"</span>.format(find_dict[<span class="string">"name"</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_card_info</span><span class="params">(dict_value, tip_message)</span>:</span></span><br><span class="line">    <span class="string">"""输入名片信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param dict_value: 字典原有数值</span></span><br><span class="line"><span class="string">    :param tip_message: 用户输入提示信息</span></span><br><span class="line"><span class="string">    :return: 如果用户输入了内容，就返回内容，如果没有输入内容，则用字典中原有的值</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 提示用户输入内容</span></span><br><span class="line">    result_str = input(tip_message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 针对用户的输入进行判断，如果用户输入了内容，直接返回结果</span></span><br><span class="line">    <span class="keyword">if</span> len(result_str) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> result_str</span><br><span class="line">    <span class="comment"># 如果用户没有输入内容，返回“字典中原有的值”</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> dict_value</span><br></pre></td></tr></table></figure><h3 id="cards-main代码"><a href="#cards-main代码" class="headerlink" title="cards_main代码"></a>cards_main代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 由用户决定退出程序的时机</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示系统功能</span></span><br><span class="line">    cards_tools.show_menu()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 没有使用int转换用户输入，可以避免一旦用户输入的不是数字，导致程序运行出错</span></span><br><span class="line">    action_str = input(<span class="string">"请选择您希望执行的操作："</span>)</span><br><span class="line">    print(<span class="string">"您选择的操作是【&#123;&#125;】"</span>.format(action_str))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1,2,3对名片进行操作</span></span><br><span class="line">    <span class="comment"># 使用in针对列表判断，避免使用or拼接复杂的逻辑条件</span></span><br><span class="line">    <span class="keyword">if</span> action_str <span class="keyword">in</span> [<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>]:</span><br><span class="line">        <span class="comment"># 新增名片</span></span><br><span class="line">        <span class="keyword">if</span> action_str == <span class="string">"1"</span>:</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            cards_tools.new_card()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 显示全部</span></span><br><span class="line">        <span class="keyword">if</span> action_str == <span class="string">"2"</span>:</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            cards_tools.show_all()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 查询名片</span></span><br><span class="line">        <span class="keyword">if</span> action_str == <span class="string">"3"</span>:</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            cards_tools.search_card()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果在开发程序的时候，不希望立刻编写分支内部的代码</span></span><br><span class="line">        <span class="comment"># 可以使用pass关键字，表示一个占位符，能够保证程序的代码结构正确</span></span><br><span class="line">        <span class="comment"># 程序运行时，pass关键字不会执行任何的操作</span></span><br><span class="line">        <span class="comment"># pass</span></span><br><span class="line">    <span class="comment"># 0表示退出系统</span></span><br><span class="line">    <span class="keyword">elif</span> action_str == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 其他内容输入错误，需要提示用户</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"您输入的不正确，请重新选择"</span>)</span><br></pre></td></tr></table></figure><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707181035.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;综合应用已经学习过的知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流程控制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模块&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发 &lt;strong&gt;名片管理系统&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>购买VPN | 安全、高速、稳定</title>
    <link href="https://www.imqinhao.cn/2020/06/13/buy-VPN/"/>
    <id>https://www.imqinhao.cn/2020/06/13/buy-VPN/</id>
    <published>2020-06-13T05:14:20.000Z</published>
    <updated>2020-06-13T06:07:57.010Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最高500M带宽，最低仅需5.99元包月，包年最低32.99元，先到先得。支持mac，Windows，安卓和ios，包年赠送ios客户端。购买请移步<kbd><a href="https://www.zhengyuanyuan520.com/VPN" target="_blank" rel="noopener">购买VPN</a></kbd></p><a id="more"></a><h2 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h2><table><thead><tr><th>名称</th><th>版本</th><th>下载地址</th><th>下载地址</th><th>下载地址</th></tr></thead><tbody><tr><td>Clash</td><td>0.9.4</td><td><strong><a href="https://github.com/qianglie/Client/releases/download/0.0.1/Clash-Windows.exe" target="_blank" rel="noopener">本地下载</a></strong></td><td><strong><a href="https://www.pjapp.club/660ce2a4dca0738880f15e0c2cd90f06abd7c53f" target="_blank" rel="noopener">磁力链接</a></strong></td><td><strong><a href="https://github.com/qianglie/Client/releases/download/0.0.4/clash-windows-0.9.4.torrent" target="_blank" rel="noopener">BT种子</a></strong></td></tr></tbody></table><p>以上App由其作者进行维护，并非由我们开发，如有疑问，请联系其作者。</p><h2 id="墙裂配置-–-Clash"><a href="#墙裂配置-–-Clash" class="headerlink" title="墙裂配置 – Clash"></a>墙裂配置 – Clash</h2><p>登陆我们的网站，执行下列操作：</p><p>单击 “产品服务” &gt; “我的服务” &gt; 选择 “你可用的产品/服务”。</p><p><img src="https://cn.joysaid.com/files/images/int-portal-productdetail.png" alt="img"></p><p>点击 “Clash” 右边绿色的按钮 “复制”。</p><p><img src="https://cn.joysaid.com/files/images/int-portal-productdetail-02.png" alt="img"></p><h3 id="Clash-的设置过程："><a href="#Clash-的设置过程：" class="headerlink" title="Clash 的设置过程："></a>Clash 的设置过程：</h3><p>安装客户端后，点击 “Profiles”。</p><p><img src="https://cn.joysaid.com/files/images/Clash-01.png" alt="img"></p><p>在 “Download from a URL” 粘贴刚才复制的托管地址，然后点击 “Download”。</p><p><img src="https://cn.joysaid.com/files/images/Clash-02.png" alt="img"></p><p>自动下载托管配置，若下载不成功请检查网络。</p><p><img src="https://cn.joysaid.com/files/images/Clash-03.png" alt="img"></p><p>显示 “Success!” 则下载成功。</p><p><img src="https://cn.joysaid.com/files/images/Clash-04.png" alt="img"></p><p>前往 “General”，选择 “System Proxy” 开启系统代理。</p><p><img src="https://cn.joysaid.com/files/images/Clash-05.png" alt="img"></p><p>前往 “Proxies”，选择 “Global” 模式，选择您心仪的节点即可畅游网络！</p><p>如果您了解如何使用 “Rule” 模式，我们推荐您使用该模式，节省流量。</p><p><img src="https://cn.joysaid.com/files/images/Clash-06.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最高500M带宽，最低仅需5.99元包月，包年最低32.99元，先到先得。支持mac，Windows，安卓和ios，包年赠送ios客户端。购买请移步&lt;kbd&gt;&lt;a href=&quot;https://www.zhengyuanyuan520.com/VPN&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;购买VPN&lt;/a&gt;&lt;/kbd&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="VPN" scheme="https://www.imqinhao.cn/categories/VPN/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL压缩包版安装方法</title>
    <link href="https://www.imqinhao.cn/2020/06/13/mysql-install/"/>
    <id>https://www.imqinhao.cn/2020/06/13/mysql-install/</id>
    <published>2020-06-13T04:00:00.000Z</published>
    <updated>2020-06-13T03:58:52.577Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>MySQL虽然提供了msi的安装包方式，但是最新版的会默认安装在C盘，而压缩版的我们只需要将文件夹放在自己想放的位置，配置即可使用。接下来我们介绍一下MySQL压缩包安装方式。</p><a id="more"></a><h2 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h2><p>首先我们到MySQL官网下载<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">MySQL的压缩包</a>，MySQL提供了压缩包和安装包两种方式，两种方式的区别是压缩包解压之后配置一下就可以使用，而<kbd>.msi</kbd>的安装包安装较为繁琐，故我们介绍压缩包的方式。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613101840.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102214.png" alt=""></p><h2 id="解压压缩包"><a href="#解压压缩包" class="headerlink" title="解压压缩包"></a>解压压缩包</h2><p>解压之后我们会得到下图所示的文件及文件夹</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102143.png" alt=""></p><h2 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h2><h3 id="以管理员身份运行cmd"><a href="#以管理员身份运行cmd" class="headerlink" title="以管理员身份运行cmd"></a>以管理员身份运行<kbd>cmd</kbd></h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102404.png" alt=""></p><h3 id="进入到解压根目录-bin目录下"><a href="#进入到解压根目录-bin目录下" class="headerlink" title="进入到解压根目录/bin目录下"></a>进入到解压根目录/bin目录下</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102633.png" alt=""></p><h3 id="创建配置文件my-ini"><a href="#创建配置文件my-ini" class="headerlink" title="创建配置文件my.ini"></a>创建配置文件my.ini</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613115839.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102927.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 设置mysql的安装目录  </span><br><span class="line">basedir&#x3D;D:\\mysql-8.0.20-winx64</span><br><span class="line"># 设置mysql数据库的数据的存放目录  </span><br><span class="line">datadir&#x3D;D:\\mysql-8.0.20-winx64\\data</span><br></pre></td></tr></table></figure><div class="note success"><p><strong>basedir和datadir设置时需要注意的是如果使用“\”请使用双“\”来分割目录，如果不使用这种可以使用单“/”</strong></p></div><h3 id="将my-ini剪切到bin目录下"><a href="#将my-ini剪切到bin目录下" class="headerlink" title="将my.ini剪切到bin目录下"></a>将my.ini剪切到bin目录下</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103046.png" alt=""></p><h3 id="新建data文件夹"><a href="#新建data文件夹" class="headerlink" title="新建data文件夹"></a>新建data文件夹</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103557.png" alt=""></p><h3 id="初始化MySQL数据目录"><a href="#初始化MySQL数据目录" class="headerlink" title="初始化MySQL数据目录"></a>初始化MySQL数据目录</h3><p>执行命令<kbd>mysqld --initialize</kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103303.png" alt=""></p><p>运行完之后就会发现在我们新建的data文件夹生成了很多文件</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103432.png" alt=""></p><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>如果出现了下面的提示，说明没有安装VC++2015运行库，MySQL运行需要这个运行库，可以去微软官网下载。没有出现报错则跳过该步骤。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103812.png" alt=""></p><p>进入微软官网搜索并下载</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103926.png" alt=""></p><h3 id="获取初始化数据库随机密码"><a href="#获取初始化数据库随机密码" class="headerlink" title="获取初始化数据库随机密码"></a>获取初始化数据库随机密码</h3><p>执行完上一步之后，在data目录下生的文件有一个.err文件，这里面有初始化的密码。我们编辑打开此文件，找到密码。该文件命名规则是【电脑用户名.err】如下图</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613104100.png" alt=""></p><p>找到我们的随机密码</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613104246.png" alt=""></p><h3 id="安装MySQL服务"><a href="#安装MySQL服务" class="headerlink" title="安装MySQL服务"></a>安装MySQL服务</h3><p>执行命令<kbd>mysqld --install mysql</kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613104649.png" alt=""></p><h3 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h3><p>执行命令<kbd>net  start  mysql </kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613113631.png" alt=""></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p><kbd>此电脑</kbd>右键—&gt;<kbd>属性</kbd>—&gt;<kbd>高级系统设置</kbd>—&gt;<kbd>环境变量</kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114009.png" alt=""></p><p>找到<kbd>PATH</kbd>变量，推荐配置在用户变量。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114042.png" alt=""></p><p>将MySQL文件夹的bin目录的路径复制，点击右侧新建，添加到环境变。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114137.png" alt=""></p><div class="note success"><p>配置完成后记得点击确定，有两个地方需要点击确定。</p></div><h2 id="MySQL连接"><a href="#MySQL连接" class="headerlink" title="MySQL连接"></a>MySQL连接</h2><h3 id="登录连接MySQL"><a href="#登录连接MySQL" class="headerlink" title="登录连接MySQL"></a>登录连接MySQL</h3><p>输入<kbd>mysql  -u  root  -p</kbd>，输入我们刚刚获取到的随机密码。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114457.png" alt=""></p><p>出现下面的提示又电脑的路径变成了<kbd>mysql> </kbd>表示我们连接数据库成功。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114553.png" alt=""></p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>输入<kbd>ALTER USER 'root'@'localhost' IDENTIFIED BY '密码';</kbd></p><div class="note success"><p>修改密码成功会提示<kbd>Query OK</p></div><h3 id="退出重新登录"><a href="#退出重新登录" class="headerlink" title="退出重新登录"></a>退出重新登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL虽然提供了msi的安装包方式，但是最新版的会默认安装在C盘，而压缩版的我们只需要将文件夹放在自己想放的位置，配置即可使用。接下来我们介绍一下MySQL压缩包安装方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://www.imqinhao.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>无法访问蓝奏云的解决方法</title>
    <link href="https://www.imqinhao.cn/2020/06/11/lanzous/"/>
    <id>https://www.imqinhao.cn/2020/06/11/lanzous/</id>
    <published>2020-06-11T12:20:11.000Z</published>
    <updated>2020-06-12T11:58:20.616Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>介绍一下打开蓝奏云链接时提示我们网页不存在的解决方法</p><a id="more"></a><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>将蓝奏云链接的www改成pan，然后删掉lanzous后面的s。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>更改DNS为114.114.114.114 和 114.114.115.115</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍一下打开蓝奏云链接时提示我们网页不存在的解决方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="小技巧" scheme="https://www.imqinhao.cn/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>政府工作报告词云示例</title>
    <link href="https://www.imqinhao.cn/2020/06/01/Python-5/"/>
    <id>https://www.imqinhao.cn/2020/06/01/Python-5/</id>
    <published>2020-06-01T05:14:20.000Z</published>
    <updated>2020-06-05T12:59:39.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>政府工作报告词云小练习</p><p>使用库：</p><p><kbd>jieba库</kbd></p><p><kbd>wordcloud库</kbd></p><a id="more"></a><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread</span><br><span class="line">mask = imread(<span class="string">"chinamap.png"</span>)</span><br><span class="line">f = open(<span class="string">"新时代中国特色社会主义.txt"</span>,<span class="string">"r"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">t = f.read()</span><br><span class="line">f.close()</span><br><span class="line">ls = jieba.lcut(t)</span><br><span class="line">txt = <span class="string">" "</span>.join(ls)</span><br><span class="line">w = wordcloud.WordCloud(width=<span class="number">1000</span>,height=<span class="number">700</span>,background_color=<span class="string">"white"</span>,font_path=<span class="string">"msyh.ttc"</span>,mask=mask)</span><br><span class="line">w.generate(txt)</span><br><span class="line">w.to_file(<span class="string">"wordclouddemo3.png"</span>)</span><br></pre></td></tr></table></figure><h2 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200601131058.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;政府工作报告词云小练习&lt;/p&gt;
&lt;p&gt;使用库：&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;jieba库&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;wordcloud库&lt;/kbd&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>华为应用开发学习笔记</title>
    <link href="https://www.imqinhao.cn/2020/05/29/huawei-exam-application/"/>
    <id>https://www.imqinhao.cn/2020/05/29/huawei-exam-application/</id>
    <published>2020-05-29T12:13:14.000Z</published>
    <updated>2020-06-01T05:18:01.052Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>华为应用开发学习笔记</p><a id="more"></a><h2 id="解压命令"><a href="#解压命令" class="headerlink" title="解压命令"></a>解压命令</h2><p><kbd>.tar</kbd> 用 <kbd>tar -xvf </kbd>解压</p><p><kbd>.gz</kbd> 用 <kbd>gzip  -d</kbd> 或者 <kbd>gunzip</kbd> 解压</p><p><kbd>.tar.gz</kbd> 和 <kbd>.tgz</kbd> 用 <kbd>tar  -xzf</kbd> 解压</p><p><kbd>.bz2</kbd> 用 <kbd>bzip2  -d</kbd> 或者用 <kbd>bunzip2</kbd> 解压</p><p><kbd>.tar.bz2</kbd>  用 <kbd>tar  -xjf</kbd> 解压</p><p><kbd>.Z</kbd>  用 <kbd>uncompress</kbd> 解压</p><p><kbd>.tar.Z</kbd> 用 <kbd>tar  -xZf</kbd> 解压</p><p><kbd>.tar.xz</kbd> 用 <kbd>jxvf</kbd> 解压</p><p><kbd>.rar</kbd> 用 <kbd>unrar  e </kbd> 解压</p><p><kbd>.zip</kbd> 用 <kbd>unzip</kbd> 解压</p><br><p>使用<kbd>rpmbuild</kbd>命令将源码打包成rpm包。</p><br><p>公共镜像：常见的标准操作系统镜像。</p><p>私有镜像：个人镜像，仅用户自己可见。</p><p>共享镜像：由其他用户共享的私有镜像。</p><p>市场镜像：提供预装操作系统、应用环境和各类软件的优质第三方镜像。</p><br><h2 id="Linux安装软件方式"><a href="#Linux安装软件方式" class="headerlink" title="Linux安装软件方式"></a>Linux安装软件方式</h2><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><blockquote><ul><li>可以自定义安装目录和一些配置文件</li><li>需要事先调整编译参数</li></ul></blockquote><h3 id="yum安装软件"><a href="#yum安装软件" class="headerlink" title="yum安装软件"></a>yum安装软件</h3><blockquote><ul><li>全自动安装，自动安装依赖</li><li>缺乏自主性，软件的功能和存放的位置均已设置好</li></ul></blockquote><h3 id="RPM安装"><a href="#RPM安装" class="headerlink" title="RPM安装"></a>RPM安装</h3><blockquote><ul><li>自主制作的RPM包能够实现全自动安装，且可自动以安装路径等配置</li><li>需提前识别依赖并手动安装</li></ul></blockquote><h2 id="数据库配置文件"><a href="#数据库配置文件" class="headerlink" title="数据库配置文件"></a>数据库配置文件</h2><p><kbd>props.ora</kbd> ：<kbd>Oracle</kbd></p><p><kbd>props.pg</kbd> ： <kbd>PostgreSQL</kbd></p><p><kbd>Props.fb</kbd> ： <kbd>FireBirdSQL</kbd></p><p><kbd>Props.gb</kbd> ： <kbd>GuassDB</kbd></p><p><kbd>Props.percona</kbd> ： <kbd>percona</kbd></p><h2 id="华为云服务中的鲲鹏云手机服务的特性"><a href="#华为云服务中的鲲鹏云手机服务的特性" class="headerlink" title="华为云服务中的鲲鹏云手机服务的特性"></a>华为云服务中的鲲鹏云手机服务的特性</h2><blockquote><ul><li>原生指令兼容性</li><li>32/64位应用全兼容</li><li>ARM原生指令兼容性</li><li>Monbox双OS共内核架构</li><li>单台服务器超200路并发</li><li>性能较模拟器提升10倍以上</li><li>自研芯片及硬件底座</li><li>华为鲲鹏916/920芯片</li><li>自研高性能GPU</li></ul></blockquote><p>华为云鲲鹏云手机结合华为在操作系统、虚拟化以及容器等方面技术深厚积累，构建高密MonBox仿真软件架构，相比同等性能x86服务器构造方案，性能提升高达10倍以上，并完美兼容32位与64位的应用。</p><h2 id="华为云服务器应用场景"><a href="#华为云服务器应用场景" class="headerlink" title="华为云服务器应用场景"></a>华为云服务器应用场景</h2><p><kbd>计算加速型</kbd>  ： AI训练、推理</p><p><kbd>内存密集型KM1</kbd>  ：Redis、Cassandra内存数据库</p><p><kbd>存储密集型KI1 </kbd>：分布式缓存数据库、大数据</p><p><kbd>通用计算型KC1</kbd> ：建站、电商、游戏、视频、大数据、HPC等</p><p><kbd>通用型KS1</kbd> ：大数据管理节点、NameNode、HPC等</p><p><kbd>存储型KD1</kbd> ：大数据数据节点、DataNode、Kafka等</p><br><div class="note success"><p><strong>openEuler1.0是一款开源操作系统，支持鲲鹏、至强及其他多种处理器，能充分释放计算芯片的潜能</strong></p></div><br><h2 id="iSula特点"><a href="#iSula特点" class="headerlink" title="iSula特点"></a>iSula特点</h2><p>iSula 通用容器引擎（iSulad）是一种新的容器解决方案，具有以下特点：</p><ul><li>快速灵活&amp;轻量级</li><li>可信&amp;安全启动</li><li>升级不中断业务</li><li>增强安全性和调测特性</li></ul><h2 id="iSula部署模式"><a href="#iSula部署模式" class="headerlink" title="iSula部署模式"></a>iSula部署模式</h2><blockquote><p>iSula 通用容器引擎（iSulad）是一种新的容器解决方案，提供统一的架构设计来满足CT和IT领域的不同需求。相比 Golang 编写的 Docker，轻量级容器具有轻、灵、巧、快的特点，不受硬件规格和架构的限制，底噪开销更小，可应用领域更为广泛。openEuler 1.0 中提供容器运行的基础平台iSula。</p></blockquote><p>容器根据部署模型可以分成三种模型：<kbd>应用容器</kbd>、<kbd>安全容器</kbd>、<kbd>系统容器</kbd>。</p><h3 id="应用容器"><a href="#应用容器" class="headerlink" title="应用容器"></a>应用容器</h3><p>应用最广泛的容器形态，容器中仅运行客户定义的应用程序。openEuler 1.0 集成 moby 18.09 版本，并在版本基础上进行了 bugfix 和稳</p><p>定性增强。</p><h3 id="安全容器"><a href="#安全容器" class="headerlink" title="安全容器"></a>安全容器</h3><p>本质上是虚拟机，但是接口封装为容器接口；着重容器的隔离性缺陷。openEuler 1.0 集成 kata-container1.7 版本，在社区版本的基础</p><p>上，进行了稳定性和可靠性加固，增加了异构计算支持，更适于生产环境的 Host CGroup 配置与 DPDK/SPDK 高性能网络、存储支持。</p><h3 id="系统容器"><a href="#系统容器" class="headerlink" title="系统容器"></a>系统容器</h3><p>本质上是容器，但是使用方式和虚拟机相同；着重解决虚拟机的厚重问题。iSula 容器平台支持创建系统容器，并能支持在系统容器内动</p><p>态调整设备、运行资源，且提供更优秀的 user namespace 隔离。</p><br><p>华为鲲鹏920处理器内置了3大加速引擎：<kbd>ssl加速引擎</kbd>、<kbd>加解密加速引擎</kbd>、<kbd>压缩解压缩加速引擎</kbd>。</p><br><h2 id="华为计算服务适用场景"><a href="#华为计算服务适用场景" class="headerlink" title="华为计算服务适用场景"></a>华为计算服务适用场景</h2><p><kbd>高性能计算型</kbd>：可适用于基因工程、游戏动画、生物制药的计算和存储系统；渲染农场、动漫影视基地等公共渲染平台，以及影视等渲染</p><p>平台；高性能前端集群、Web 服务器、高性能科学和工程应用、广告服务、视频编码和分布式分析等等</p><p><kbd>计算加速型</kbd> ： AI训练、推理</p><p><kbd>内存密集型KM1</kbd> ：Redis、Cassandra内存数据库</p><p><kbd>存储密集型KI1</kbd>：分布式缓存数据库、大数据</p><p><kbd>通用计算型KC1</kbd>：建站、电商、游戏、视频、大数据、HPC等</p><p><kbd>通用型KS1</kbd>：大数据管理节点、NameNode、HPC等</p><p><kbd>存储型KD1</kbd>：大数据数据节点、DataNode、Kafka等</p><h2 id="TPCC衡量标准"><a href="#TPCC衡量标准" class="headerlink" title="TPCC衡量标准"></a>TPCC衡量标准</h2><p><kbd>tpmC（NewOrders）</kbd>:每分钟处理的订单个数</p><p><kbd>tpmTOTAL（TPS）</kbd>：每分钟处理的总数</p><h2 id="华为云通过的国际认证"><a href="#华为云通过的国际认证" class="headerlink" title="华为云通过的国际认证"></a>华为云通过的国际认证</h2><p>近日，全球权威标准机构BSI（英国标准协会）和CSA（云安全联盟）宣布，华为云顺利通过<kbd>ISO 27001</kbd>&amp; <kbd>ISO  27017</kbd>&amp;<kbd>ISO  27018</kbd>&amp;<kbd>CSA STAR</kbd>四个安全复审和认证。</p><h2 id="容灾指标"><a href="#容灾指标" class="headerlink" title="容灾指标"></a>容灾指标</h2><p><kbd>业界领先</kbd>：跨AZ RPO=0，RTO&lt; 30分钟，确保数据零丢失，业务快速恢复。</p><p><kbd>最高等级</kbd>：快速构建云上两地三中心，同城双中心可达Tier5~Tier6容灾等级。</p><p><kbd>专属安全</kbd>：物理隔离，满足安全合规要求，相比客户自建容灾中心免基础设施运维。</p><h2 id="云计算的特征"><a href="#云计算的特征" class="headerlink" title="云计算的特征"></a>云计算的特征</h2><p>1.<kbd>按需自助服务</kbd>，消费者不需要或很少需要云服务提供商的协助，就可以单方面按需获取云端的计算资源。</p><p>2.<kbd>广泛的网络接入</kbd>，消费者可以随时随地使用云终端设备接入网络并使用云端的计算资源。常见的云终端设备包括手机、平板、笔记本电</p><p>脑、PDA掌上电脑和台式机等。</p><p>3.<kbd>资源池化</kbd>，云端计算资源需要被池化，以便通过多租户形式共享给多个消费者，也只有池化才能根据消费者的需求动态分配或再分配各</p><p>种物理的和虚拟的资源。消费者通常不知道自己正在使用的计算资源的确切位置，但是在自助申请时允许指定大概的区域范围（比如在哪</p><p>个国家、哪个省或者哪个数据中心）。</p><p>4.<kbd>快速弹性伸缩</kbd>。消费者能方便、快捷地按需获取和释放计算资源，也就是说，需要时能快速获取资源从而扩展计算能力，不需要时能迅</p><p>速释放资源，以便降低计算能，从而减少资源的使用费用。对于消费者来说，云端的计算资源是无限的，可以随时申请并获取任何数量的</p><p>计算资源。但是我我们一定要消除一个误解，那就是一个实际的云计算系统不一定是投资巨大的工程，也不一定要购买成千上万台计算</p><p>机，也不一定具备超大规模的运算能力。其实一台计算机就可以组建一个最小的云端，云端建设方案务必采用可伸缩性策略，刚开始时采</p><p>用几台计算机，然后根据用户数量规模来增减计算资源。</p><p>5.<kbd>可计量服务</kbd>，消费者使用云端计算资源是要付费的，付费的计量方法有很多，比如根据某类资源（如存储、CPU、内存、网络带宽等）</p><p>的使用量和时间长短计费，也可以按照每使用一次来计费。但不管如何计费，对消费者来说，价码要清楚，计量方法要明确，而云服务提</p><p>供商需要监视和控制资源的使用情况，并及时输出各种资源的使用报表，做到供/需双方费用结清清楚楚、明明白白。</p><h2 id="云计算的四种部署模型"><a href="#云计算的四种部署模型" class="headerlink" title="云计算的四种部署模型"></a>云计算的四种部署模型</h2><h3 id="私有云"><a href="#私有云" class="headerlink" title="私有云"></a>私有云</h3><p>云端资源只给一个单位组织内的用户使用，这是私有云的核心特征。而云端的所有权、日程管理和操作的主体到底属于谁并没有严格的规</p><p>定，可能是本单位，也可能是第三方机构，还可能是二者的联合。云端可能位于本单位内部，也可能托管在其他地方。</p><h3 id="社区云"><a href="#社区云" class="headerlink" title="社区云"></a>社区云</h3><p>云端资源专门给固定的几个单位内的用户使用，而这些单位对云端具有相同的诉求（如安全要求、云端使命、规章制度、合规性要求</p><p>等）。云端的所有权、日常管理的操作的主体可能是本社区内的一个或多个单位，也可能是社区外的第三方机构，还可能是二者的联合。</p><p>云端可能部署在本地，也可能部署与他处。</p><h3 id="公共云"><a href="#公共云" class="headerlink" title="公共云"></a>公共云</h3><p>云端资源开发给社会公众使用。云端的所有权、日常管理和操作的主体可以是一个商业组织、学术机构、政府部门或者它们其中的几个联</p><p>合。云端可能部署在本地，也可能部署于其他地方，比如中山市民公共云的云端可能就建在中山，也可能建在深圳。</p><h3 id="混合云"><a href="#混合云" class="headerlink" title="混合云"></a>混合云</h3><p>混合云由两个或两个以上不同类型的云（私有云、社区云、公共云）组成，它们各自独立，但用标准的或专有的技术将它们组合起点，而</p><p>这些技术能实现云之间的数据和应用程序的平滑流转。由多个相同类型的云组合在一起，混合云属于多云的一种。私有云和公共云构成的</p><p>混合云是目前最流行的——当私有云资源短暂性需求过大（称为云爆发，Cloud Bursting）时，自动租赁公共云资源来平抑私有云资源</p><p>的需求峰值。例如，网店在节假日期间点击量巨大，这时就会临时使用公共云资源的应急。</p><h2 id="云计算的3种服务模式"><a href="#云计算的3种服务模式" class="headerlink" title="云计算的3种服务模式"></a>云计算的3种服务模式</h2><h3 id="SaaS"><a href="#SaaS" class="headerlink" title="SaaS"></a>SaaS</h3><p><kbd>软件即服务（Software as a Service，SaaS）</kbd>,云服务提供商把IT系通中的应用软件层作为服务租出去，消费者不用自己安装应用软件，直</p><p>接使用即可，这进一步降低了云服务消费者的技术门槛。</p><h3 id="PaaS"><a href="#PaaS" class="headerlink" title="PaaS"></a>PaaS</h3><p><kbd>平台即服务（Platform as a Service，PaaS）</kbd>。云服务提供商把IT系统中的平台软件层作为服务租出去，消费者自己开发或者安装程序，</p><p>并运行程序。</p><h3 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h3><p><kbd>基础设施及服务（Infrastructure as a Service，IaaS）</kbd>。云服务提供商把IT系统的基础设施层作为服务租出去，由消费者自己安装操作系</p><p>统、中间件、数据库和应用程序。</p><h2 id="云硬盘的类型"><a href="#云硬盘的类型" class="headerlink" title="云硬盘的类型"></a>云硬盘的类型</h2><h3 id="普通IO"><a href="#普通IO" class="headerlink" title="普通IO"></a>普通IO</h3><p>该类型云硬盘的<kbd>最大IOPS为2200</kbd>，适用于<kbd>大容量</kbd>、<kbd>读写速率中等</kbd>、<kbd>事务性处理较少</kbd>的应用场景，例如企业的日常办公应用或者小型测试</p><p>等</p><h3 id="高速高IO"><a href="#高速高IO" class="headerlink" title="高速高IO"></a>高速高IO</h3><p>该类型云硬盘的<kbd>最大IOPS可达5000</kbd>，<kbd>最低读写时延为1 ms</kbd>，<kbd>适用于主流的高性能、高可靠应用场景</kbd>，例如企业应用、大型开发测试以及</p><p>Web服务器日志等。</p><h3 id="超高IO"><a href="#超高IO" class="headerlink" title="超高IO"></a>超高IO</h3><p>该类型云硬盘的<kbd>最大IOPS可达33000</kbd>，<kbd>最低读写时延为1 ms</kbd>，<kbd>适用于超高IO、超大带宽的读写密集型应用场景</kbd>，例如高性能计算应用场</p><p>景，用来部署分布式文件系统，或者I/O密集型应用场景，用来部署各类NoSQL/关系型数据库。</p><h3 id="超高IO-时延优化"><a href="#超高IO-时延优化" class="headerlink" title="超高IO (时延优化)"></a>超高IO (时延优化)</h3><p>该类型的云硬盘提供<kbd>低至1 ms的读写时延和高达1 GB/s的吞吐量</kbd>，可运行企业核心业务，如SAP HANA。</p><h2 id="docker-ps-a显示标题含义"><a href="#docker-ps-a显示标题含义" class="headerlink" title="docker ps -a显示标题含义"></a>docker ps -a显示标题含义</h2><p><kbd>CONTAINER ID</kbd>：容器的唯一表示ID。</p><p><kbd>IMAGE</kbd>：创建容器时使用的镜像。</p><p><kbd>COMMAND</kbd>：容器最后运行的命令。</p><p><kbd>CREATED</kbd>：创建容器的时间。</p><p><kbd>STATUS</kbd>：容器状态。</p><p><kbd>PORT</kbd>：:对外开放的端口。</p><br><p><strong>CPU性能和网络带宽都会影响HPC性能</strong></p><br><p><kbd>–mcpu=tsv110</kbd>是<kbd>GNU9编译器</kbd>对鲲鹏架构进行指定优化的参数。</p><br><h2 id="RPM常用命令"><a href="#RPM常用命令" class="headerlink" title="RPM常用命令"></a>RPM常用命令</h2><p><kbd>安装软件</kbd>：执行<kbd>rpm -ivh rpm包名</kbd>，如： #rpm -ivh apache-1.3.6.i386.rpm</p><p><kbd>升级软件</kbd>：执行<kbd>rpm -Uvh rpm包名</kbd>。</p><p><kbd>反安装</kbd>：执行<kbd>rpm -e rpm包名</kbd>。</p><p><kbd>查询软件包的详细信息</kbd>：执行<kbd>rpm -qpi rpm包名</kbd>。</p><p><kbd>查询某个文件是属于那个rpm包</kbd>：执行<kbd>rpm -qf rpm包名</kbd>。</p><p><kbd>查该软件包会向系统里面写入哪些文件</kbd>：执行 <kbd>rpm -qpl rpm包名</kbd>。</p><h2 id="TaiShan服务器适用场景"><a href="#TaiShan服务器适用场景" class="headerlink" title="TaiShan服务器适用场景"></a>TaiShan服务器适用场景</h2><blockquote><ul><li>TaiShan 5280：存储型服务器</li><li>TaiShan 2280：均衡型服务器</li><li>TaiShan X6000：高密型服务器</li><li>TaiShan 2480： 2U4路高性能型</li></ul></blockquote><h2 id="设置CPU的亲和性"><a href="#设置CPU的亲和性" class="headerlink" title="设置CPU的亲和性"></a>设置CPU的亲和性</h2><ul><li><kbd>echo cpuMask>/proc/irq/smp affinity- list</kbd></li><li><kbd>numactl命令</kbd></li><li><kbd>C语言的sched setaffinity函数</kbd></li></ul><br><p><strong>在从x86平台向鲲鹏处理器迁移软件时，技术分析阶段需要完成以下哪些活动?</strong></p><ul><li>软件栈分析（应用软件、OS、数据库、中间件组件等）</li><li>编程语言/代码、依赖库分析</li><li>准备调试编译环境（准备测试样机服务器/OpenLab线上服务器）</li><li>成立项目组</li><li>制定迁移计划</li><li>协调相关人力/物料资源</li></ul><p><strong>主要活动为</strong>：</p><ul><li>软件栈分析、制定迁移替换策略</li><li>申请线上资源/测试样机上架上电</li><li>安装OS/编译器/JDK/其他工具软件</li></ul><h2 id="GNU"><a href="#GNU" class="headerlink" title="GNU"></a>GNU</h2><p>1984年有Richard Stallman发起并创建，意在创造一个自由使用、自由学习和修改、自由分发、自由创建衍生版软件的环境。</p><p>GNU目标是编写大量兼容于Unix系统的自由软件</p><h2 id="GPL"><a href="#GPL" class="headerlink" title="GPL"></a>GPL</h2><ul><li>通用性公开许可证，开源协议</li><li>自由软件的通用许可证</li><li>允许用户任意复制、传递、修改及再发布</li><li>基于自由软件修改再次发布的软件，仍需遵循GPL</li></ul><h2 id="LGPL"><a href="#LGPL" class="headerlink" title="LGPL"></a>LGPL</h2><ul><li>相对于GPL较为宽松，允许不公开全部源代码</li><li>为基于Linux平台开发商业软件提供了更多空间</li></ul><h2 id="OpenEuler的技术特性"><a href="#OpenEuler的技术特性" class="headerlink" title="OpenEuler的技术特性"></a>OpenEuler的技术特性</h2><p><kbd>系统安装</kbd>：openEuler 1.0 改进了安装程序 Anaconda，并做了个性化定制和修改，方便用户安装。</p><p><kbd>定制/剪裁</kbd>：openEuler 1.0 提供优化的 kiwi 工具对系统进行个性化的自定义修改。</p><p><kbd>文件系统</kbd>：openEuler 1.0 中使用的默认文件系统是ext4，兼容ext3/2文件系统。openEuler 1.0 支持高性能日志文件系统XFS。</p><p><kbd>系统管理</kbd>：openEuler 1.0 使用 systemd 进行系统和服务的管理，systemd 与 SysV 和 Linux 标准的 init 脚本兼容。</p><p><kbd>系统安全</kbd>：openEuler 1.0 提供多重安全手段，包括身份识别与认证、安全协议、强制访问控制、完整性保护、安全审计等安全机制，保</p><p>障操作系统的安全性，为各类上层应用提供安全基础。</p><p><kbd>系统调测</kbd>：openEuler 1.0 支持Perf性能调测工具和blktrace块设备I/O跟踪工具。</p><p><kbd>编译器</kbd>：openEuler 1.0 基于原生GCC进行了Bug修复、特性增强；同时openEuler 1.0提供Huawei Open JDK支持，相比较Open JDK，</p><p>Huawei Open JDK作了优化、稳定性增强、安全增强等。</p><p><kbd>内核</kbd>：openEuler 1.0 采用 kernel 版本 4.19。Linux Kernel 4.19 是一个 LTS 版本，提供长期支持并持续更新版本，以保障用户的 </p><p>Linux 操作系统安全、可靠。</p><h2 id="PostgreSQL常用命令"><a href="#PostgreSQL常用命令" class="headerlink" title="PostgreSQL常用命令"></a>PostgreSQL常用命令</h2><p>登陆数据库：/home/pgsql/bin/psql -U postgres</p><p>初始化数据库： /home/pgsql/bin/initdb -D pgsql/</p><p>启动数据库： /home/pgsql/bin/pg_ctl -D pgsql/ -l logfile start</p><h2 id="BenchmarkSQL配置文件参数"><a href="#BenchmarkSQL配置文件参数" class="headerlink" title="BenchmarkSQL配置文件参数"></a>BenchmarkSQL配置文件参数</h2><p><kbd>warehouse</kbd>：指定仓库数量。</p><p><kbd>loadWorkers</kbd>：指定装载数据的并发数。</p><p><kbd>Terminals</kbd>：指定并发用户数。</p><p><kbd>runMins</kbd>：指定测试时间。</p><p><kbd>runTxnsPerTerminal</kbd>：指定每个Terminal运行的事务数量，runMins必须等于0。</p><p><kbd>limitTxnsPerMin</kbd>：指定每分钟总事务数。</p><p><kbd>terminalWarehouseFixed</kbd>：指定每个终端是否绑定固定warehouse。</p><h2 id="HCS-Online主打应用场景"><a href="#HCS-Online主打应用场景" class="headerlink" title="HCS  Online主打应用场景"></a>HCS  Online主打应用场景</h2><ul><li><p>行业云场景</p></li><li><p>HCSO+HPC场景</p></li><li><p>HCSO+灾备场景</p></li><li><p>智能大数据场景</p></li><li><p>多级混合云场景</p></li></ul><h2 id="鲲鹏处理器优点"><a href="#鲲鹏处理器优点" class="headerlink" title="鲲鹏处理器优点"></a>鲲鹏处理器优点</h2><ul><li>采用ARM架构，同样功能性能占用的芯片面积小、功耗低、集成度更高，更多的硬件CPU核具备更好的并发性能。</li><li>支持16位、32位、64位多种指令集，能很好的兼容从IoT、终端到云端的各类应用场景。</li><li>大量使用寄存器，大多数数据操作都在寄存器中完成，指令执行速度更快。</li><li>采用RISC指令集，指令长度固定，寻址方式灵活简单，执行效率高。</li></ul><h2 id="HiBench"><a href="#HiBench" class="headerlink" title="HiBench"></a>HiBench</h2><p>开源的大数据基准测试套件。</p><p>用于<kbd>评估大数据框架的速度，吞吐量和系统资源利用率</kbd>。</p><p>支持的框架：hadoopbench、sparkbench、stormbench、flinkbench、gearpumpbench。</p><p>支持的开源版本组件：Hadoop、Spark、Storm、Kafka、Flink。</p><p>目前使用较多的版本：HiBench-7.0。</p><p>共计19个测试方向，可分为6种测试类别。</p><h2 id="软件迁移过程"><a href="#软件迁移过程" class="headerlink" title="软件迁移过程"></a>软件迁移过程</h2><p><kbd>技术分析</kbd>-&gt;<kbd>编译迁移</kbd>-&gt;<kbd>功能验证</kbd>-&gt;<kbd>性能调优</kbd>-&gt;<kbd>规模商用</kbd></p><h2 id="容灾"><a href="#容灾" class="headerlink" title="容灾"></a>容灾</h2><p>容灾系统是指在相隔较远的异地，建立两套或多套功能相同的IT系统，互相之间可以进行健康状态监视和功能切换，当一处系统因意外</p><p>（如火灾、地震等）停止工作时，整个应用系统可以切换到另一处，使得该系统功能可以继续正常工作。容灾技术是系统的高可用性技术</p><p>的一个组成部分，容灾系统恢复功能。</p><h3 id="数据库容灾"><a href="#数据库容灾" class="headerlink" title="数据库容灾"></a>数据库容灾</h3><div class="note success"><p>数据库容灾，即在异地部署一个一模一样的数据库，一个数据库所处的地理位置发生自然灾害了导致当前数据库发生灾难，另一个数据库会立马顶替工作。</p></div><h3 id="冷备容灾"><a href="#冷备容灾" class="headerlink" title="冷备容灾"></a>冷备容灾</h3><div class="note success"><p>每天备份一次数据库，保存在磁带或光盘上。</p></div><h3 id="热备容灾"><a href="#热备容灾" class="headerlink" title="热备容灾"></a>热备容灾</h3><div class="note success"><p>建立数据库灾备中心，与主库实时进行数据同步，同时应用系统保持文件实时同步，保证引用系统版本最新。</p></div><h3 id="应用双活"><a href="#应用双活" class="headerlink" title="应用双活"></a>应用双活</h3><div class="note success"><p>双活容灾即灾备系统中使主生产端数据库和备机端数据库同时在线运行，处于可读可查询的状态的技术。</p></div><h2 id="SHARE78容灾备份标准等级"><a href="#SHARE78容灾备份标准等级" class="headerlink" title="SHARE78容灾备份标准等级"></a>SHARE78容灾备份标准等级</h2><p><strong>真正的容灾必须满足三个要素</strong></p><ol><li>系统中的部件</li><li>数据都具有冗余性，即一个系统发生故障</li><li>容灾系统要追求全部的数据复制，也称为容灾的”3R”（Redundance、Remote、Replication）</li></ol><blockquote><p>​      从简单的仅在本地进行磁带备份，到将备份的磁带存储在异地，再到建立应用系统实时切换的异地备份系统，恢复时间也可以从</p><p>几天到小时级到分钟级、秒级或零数据丢失等。目前针对这七个层次，都有相应的容灾方案，所以，用户在选择容灾方案时应重点区</p><p>分它们各自的特点和适用范围，结合自己对容灾系统的要求判断选择哪个层次的方案。</p></blockquote><h3 id="零级-无异地备份"><a href="#零级-无异地备份" class="headerlink" title="零级 无异地备份"></a>零级 无异地备份</h3><blockquote><p>零级容灾方案数据仅在本地进行备份，没有在异地备份数据，未制定灾难恢复计划。这种方式是成本低的灾难恢复解决方案，但不具</p><p>备真正灾难恢复能力。</p><p>特点：是用户投资较少，技术实现简单。</p><p>缺点：是一旦本地发生毁灭性灾难，将丢失全部的本地备份数据，业务无法恢复。</p></blockquote><h3 id="一级-实现异地备份"><a href="#一级-实现异地备份" class="headerlink" title="一级 实现异地备份"></a>一级 实现异地备份</h3><blockquote><p>进行本地数据备份，然后将备份介质送往异地存放。异地未建容灾备份中心，没有灾难恢复计划。</p><p>该方案成本较低，运用本地备份管理软件，可以在本地发生毁灭性灾难后，恢复从异地运送过来的备份数据到本地，进行业务恢复，</p><p>但难以管理。</p></blockquote><h3 id="二级-热备份站点备份"><a href="#二级-热备份站点备份" class="headerlink" title="二级 热备份站点备份"></a>二级 热备份站点备份</h3><blockquote><p>将关键数据进行备份并存放到异地，制定有相应灾难恢复计划，具有热备份能力的站点灾难恢复。一旦发生灾难，利用热备份主机系</p><p>统将数据恢复。</p><p>该容灾方案由于备份介质是采用交通运输方式送往异地，异地热备中心保存的数据是上一次备份的数据，可能会有几天甚至几周的数</p><p>据丢失。这对于关键数据的容灾是不能容忍的。</p></blockquote><h3 id="三级-在线数据恢复"><a href="#三级-在线数据恢复" class="headerlink" title="三级 在线数据恢复"></a><strong>三级 在线数据恢复</strong></h3><blockquote><p>通过网络将关键数据进行备份并存放至异地，制定有相应灾难恢复计划，有备份中心，并配备部分数据处理系统及网络通信系统。特</p><p>点：用电子数据传输取代交通工具传输备份数据，从而提高了灾难恢复的速度。</p><p>该方案由于备份站点要保持持续运行，对网络的要求较高，因此成本相应有所增加。利用异地的备份管理软件将通过网络传送到异地</p><p>的数据备份到主机系统。一旦灾难发生，需要的关键数据通过网络可迅速恢复，通过网络切换，关键应用恢复时间可降低到天（数量</p><p>1）或小时级。</p></blockquote><h3 id="四级-定时数据备份"><a href="#四级-定时数据备份" class="headerlink" title="四级 定时数据备份"></a><strong>四级 定时数据备份</strong></h3><blockquote><p>该方案是在第三级容灾方案的基础上，利用备份管理软件自动通过通信网络将部分关键数据定时备份至异地，并制定相应的灾难恢复</p><p>计划。一旦灾难发生，利用备份中心已有资源及异地备份数据恢复关键业务系统运行。</p><p>该方案由于对备份管理软件设备和网络设备的要求较高，因此投入成本也会增加。但由于该级别备份的特点，业务恢复时间和数据的</p><p>丢失量还不能满足关键行业对关键数据容灾的要求。</p></blockquote><h3 id="五级-实时数据备份"><a href="#五级-实时数据备份" class="headerlink" title="五级 实时数据备份"></a><strong>五级 实时数据备份</strong></h3><blockquote><p>在前面几个级别的基础上使用了硬件的镜像技术和软件的数据复制技术，可以实现在应用站点与备份站点的数据都被更新。数据在两</p><p>个站点之间相互镜像，由远程异步提交来同步，因为关键应用使用了双重在线存储，所以在灾难发生时，仅仅很小部分的数据被丢</p><p>失，恢复的时间被降低到了分钟级或秒级。</p><p>由于对存储系统和数据复制软件的要求较高，所需成本也大大增加。该方案由于既能保证不影响当前交易的进行，又能实时复制交易</p><p>产生的数据到异地，所以这一层次的方案是目前应用较常见的一类产品容灾解决方案。</p></blockquote><h3 id="六级-零数据丢失"><a href="#六级-零数据丢失" class="headerlink" title="六级 零数据丢失"></a><strong>六级 零数据丢失</strong></h3><blockquote><p>该方案是灾难恢复中较昂贵的方式，也是速度较快的恢复方式，它是灾难恢复的级别中的佼佼者，利用专用的存储网络将关键数据同</p><p>步镜像至备份中心，数据不仅在本地进行确认，而且需要在异地（备份）进行确认。</p><p>因为，数据是镜像地写到两个站点，所以灾难发生时异地容灾系统保留了全部的数据，实现零数据丢失。要求实现远程实时备份，数</p><p>据零丢失；备份中心具备与生产中心一致的处理能力，可实现业务的实时无缝切换，即业务接管。</p></blockquote><h2 id="鲲鹏通用计算型KC1"><a href="#鲲鹏通用计算型KC1" class="headerlink" title="鲲鹏通用计算型KC1"></a>鲲鹏通用计算型KC1</h2><blockquote><ul><li>CPU:MEM  =  1:2/1:4</li><li>最高30G内网带宽</li><li>400万PPS</li></ul></blockquote><br><div class="note success"><p>Tai Shan5280存储型服务器支持RAID 0/1/10/1E/5/50/6/60</p></div><br>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;华为应用开发学习笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="华为认证" scheme="https://www.imqinhao.cn/categories/%E5%8D%8E%E4%B8%BA%E8%AE%A4%E8%AF%81/"/>
    
    
  </entry>
  
  <entry>
    <title>Python实现《三国演义》人物出场次数统计</title>
    <link href="https://www.imqinhao.cn/2020/05/25/Python-4/"/>
    <id>https://www.imqinhao.cn/2020/05/25/Python-4/</id>
    <published>2020-05-25T03:11:11.000Z</published>
    <updated>2020-05-25T03:54:04.147Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用Python的第三方库jieba库实现《三国演义》人物出场次数Top20统计。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">txt = open(<span class="string">"ThreeKingdoms.txt"</span>,<span class="string">"r"</span>, encoding=<span class="string">"gb18030"</span>).read()</span><br><span class="line">exclude = &#123;<span class="string">"将军"</span>,<span class="string">"却说"</span>,<span class="string">"二人"</span>,<span class="string">"不可"</span>,<span class="string">"不能"</span>,<span class="string">"如此"</span>,<span class="string">"荆州"</span>,<span class="string">"商议"</span>,<span class="string">"如何"</span>,<span class="string">"主公"</span>,\</span><br><span class="line">           <span class="string">"军士"</span>,<span class="string">"左右"</span>,<span class="string">"军马"</span>,<span class="string">"引兵"</span>,<span class="string">"次日"</span>,<span class="string">"大喜"</span>,<span class="string">"天下"</span>,<span class="string">"东吴"</span>,<span class="string">"于是"</span>,<span class="string">"今日"</span>,\</span><br><span class="line">           <span class="string">"不敢"</span>,<span class="string">"魏兵"</span>,<span class="string">"陛下"</span>,<span class="string">"人马"</span>,<span class="string">"都督"</span>,<span class="string">"一人"</span>,<span class="string">"不知"</span>,<span class="string">"汉中"</span>,<span class="string">"众将"</span>,<span class="string">"只见"</span>,\</span><br><span class="line">           <span class="string">"后主"</span>,<span class="string">"蜀兵"</span>,<span class="string">"大叫"</span>,<span class="string">"上马"</span>,<span class="string">"先主"</span>,<span class="string">"太守"</span>,<span class="string">"此人"</span>,<span class="string">"天子"</span>,<span class="string">"后人"</span>,<span class="string">"背后"</span>,\</span><br><span class="line">           <span class="string">"城中"</span>,<span class="string">"何不"</span>,<span class="string">"一面"</span>,<span class="string">"忽报"</span>,<span class="string">"大军"</span>,<span class="string">"先生"</span>,<span class="string">"何故"</span>,<span class="string">"夫人"</span>,<span class="string">"先锋"</span>,<span class="string">"然后"</span>,\</span><br><span class="line">           <span class="string">"不如"</span>,<span class="string">"赶来"</span>,<span class="string">"原来"</span>,<span class="string">"令人"</span>,<span class="string">"江东"</span>,<span class="string">"正是"</span>,<span class="string">"徐州"</span>,<span class="string">"忽然"</span>,<span class="string">"下马"</span>,<span class="string">"喊声"</span>,\</span><br><span class="line">           <span class="string">"成都"</span>,<span class="string">"因此"</span>,<span class="string">"未知"</span>,<span class="string">"百姓"</span>,<span class="string">"大败"</span>,<span class="string">"大事"</span>,<span class="string">"一军"</span>,<span class="string">"之后"</span>,<span class="string">"不见"</span>,<span class="string">"接应"</span>,\</span><br><span class="line">           <span class="string">"起兵"</span>,<span class="string">"引军"</span>,<span class="string">"军中"</span>,<span class="string">"可以"</span>,<span class="string">"进兵"</span>,<span class="string">"大怒"</span>,<span class="string">"大惊"</span>,<span class="string">"心中"</span>,<span class="string">"以为"</span>,<span class="string">"不得"</span>,\</span><br><span class="line">           <span class="string">"下文"</span>,<span class="string">"粮草"</span>,<span class="string">"追赶"</span>,<span class="string">"分付"</span>,<span class="string">"一声"</span>,<span class="string">"分解"</span></span><br><span class="line">           &#125;</span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> len(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"诸葛亮"</span> <span class="keyword">or</span> word == <span class="string">"孔明曰"</span>:</span><br><span class="line">        rword = <span class="string">"孔明"</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"关公"</span> <span class="keyword">or</span> word == <span class="string">"云长"</span>:</span><br><span class="line">        rword = <span class="string">"关羽"</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"玄德"</span> <span class="keyword">or</span> word == <span class="string">"玄德曰"</span>:</span><br><span class="line">        rword = <span class="string">"刘备"</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"孟德"</span> <span class="keyword">or</span> word == <span class="string">"丞相"</span>:</span><br><span class="line">        rword = <span class="string">"曹操"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rword = word</span><br><span class="line">    counts[rword] = counts.get(rword,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> exclude:</span><br><span class="line">    <span class="keyword">del</span> counts[word]</span><br><span class="line">items = list(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    word,count = items[i]</span><br><span class="line">    print(<span class="string">"&#123;0:&lt;12&#125;&#123;1:&lt;4&#125;"</span>.format(word,count))</span><br></pre></td></tr></table></figure><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200525114839.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Python的第三方库jieba库实现《三国演义》人物出场次数Top20统计。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>七段数码管带时间倒计时效果</title>
    <link href="https://www.imqinhao.cn/2020/05/24/Python-3/"/>
    <id>https://www.imqinhao.cn/2020/05/24/Python-3/</id>
    <published>2020-05-24T03:11:11.000Z</published>
    <updated>2020-05-25T03:57:42.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>带刷新时间的时间倒计时效果，使用随机数生成随机色，实现不同数字间的颜色变化。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLine</span><span class="params">(draw)</span>:</span></span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">70</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawDigit</span><span class="params">(digit,color)</span>:</span></span><br><span class="line">    turtle.pencolor(color)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.fd(<span class="number">-70</span>)</span><br><span class="line">    time.sleep(<span class="number">0.8</span>)</span><br><span class="line">    turtle.clear()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomColor</span><span class="params">()</span>:</span></span><br><span class="line">    num1 = random.random()</span><br><span class="line">    num2 = random.random()</span><br><span class="line">    num3 = random.random()</span><br><span class="line">    <span class="keyword">return</span> num1,num2,num3</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.setup(<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">-25</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    turtle.speed(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">        drawDigit(<span class="number">10</span>-i,randomColor())</span><br><span class="line">        <span class="comment"># randomColor()</span></span><br><span class="line">    turtle.write(<span class="string">"浩浩❤元元"</span>,font=(<span class="string">"Arial"</span>,<span class="number">55</span>,<span class="string">"normal"</span>),align=<span class="string">"center"</span>)</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;带刷新时间的时间倒计时效果，使用随机数生成随机色，实现不同数字间的颜色变化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>白嫖天翼云盘4T空间和1年会员</title>
    <link href="https://www.imqinhao.cn/2020/05/23/free-get-189vip/"/>
    <id>https://www.imqinhao.cn/2020/05/23/free-get-189vip/</id>
    <published>2020-05-23T04:00:00.000Z</published>
    <updated>2020-05-23T04:17:26.712Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>天翼云盘是中国电信推出的云存储服务，通过天翼云盘可多终端上传和下载、管理和分享文件。天翼网盘免费提供30G个人云空间、30G家庭云空间，单文件最大为2G。订购会员可以获得4T空间，且上传文件无大小限制。接下来我们来免费撸1年的黄金VIP会员和4T云存储空间。</p><a id="more"></a><h2 id="下载客户端"><a href="#下载客户端" class="headerlink" title="下载客户端"></a>下载客户端</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523120118.png" alt="安卓版下载"></p><h2 id="注册天翼网盘账号"><a href="#注册天翼网盘账号" class="headerlink" title="注册天翼网盘账号"></a>注册天翼网盘账号</h2><p>打开APP，点击<kbd>短信验证码登录</kbd>，勾选<kbd>登录即同意服务协议和隐私协议</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/26d2fd87bf99a5fa9070b75448b910b.jpg" alt=""></p><p>此时会跳转到<kbd>短信验证码登录</kbd>界面，<kbd>输入手机号</kbd>，点击<kbd>获取验证码</kbd>，将收到的验证码输入到验证码输入栏，点击<kbd>登录</kbd>即可注册登录成功。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/516134a47a66e7470b1287b77536964.jpg" alt=""></p><h2 id="获得三个月黄金会员"><a href="#获得三个月黄金会员" class="headerlink" title="获得三个月黄金会员"></a>获得三个月黄金会员</h2><p>进入软件首页，点击<kbd>活动</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/3656609eb88d907dccdaa2da9132e2c.jpg" alt=""></p><p>找到<kbd>家庭云免费赠送三个云黄金会员</kbd>活动。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/166468859c7e643be42facc03fc0713.jpg" alt=""></p><p>完成两个任务即可领取天翼网盘黄金会员。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115644.jpg" alt=""></p><h2 id="获得4T空间加1年黄金会员"><a href="#获得4T空间加1年黄金会员" class="headerlink" title="获得4T空间加1年黄金会员"></a>获得4T空间加1年黄金会员</h2><p>找到活动<kbd>1年教师尊享会员免费领</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115708.jpg" alt=""></p><p>点击<kbd>立即认证领取</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115736.jpg" alt=""></p><p>认证界面填写自己的<kbd>姓名</kbd>、<kbd>学校</kbd>、<kbd>身份证号码</kbd>，然后上传相关的资格证即可领取高达4T的云空间和1年的黄金会员。</p><div class="note success"><p>其实上面的姓名、学校、身份证号码可以随便乱填，资格证上传一张表情包都是可以通过的。</p></div><h2 id="查看会员是否到账"><a href="#查看会员是否到账" class="headerlink" title="查看会员是否到账"></a>查看会员是否到账</h2><p>退出APP，重新进入APP，然后查看会员和空间是否到账。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115802.jpg" alt=""></p><h2 id="领取更多空间"><a href="#领取更多空间" class="headerlink" title="领取更多空间"></a>领取更多空间</h2><p><kbd>每日签到</kbd>可以增大云空间容量。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115822.jpg" alt=""></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p><red>活动截止到6月30日结束，大家赶紧行动起来。不限速，不限速，不限速，重要的事情说三遍，大家且行且珍惜。</red></p><br><p>如果想获取更多内容欢迎关注我的公众号！</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/weixin.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;天翼云盘是中国电信推出的云存储服务，通过天翼云盘可多终端上传和下载、管理和分享文件。天翼网盘免费提供30G个人云空间、30G家庭云空间，单文件最大为2G。订购会员可以获得4T空间，且上传文件无大小限制。接下来我们来免费撸1年的黄金VIP会员和4T云存储空间。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小技巧" scheme="https://www.imqinhao.cn/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>七段数码管绘制系统时间</title>
    <link href="https://www.imqinhao.cn/2020/05/20/python-2/"/>
    <id>https://www.imqinhao.cn/2020/05/20/python-2/</id>
    <published>2020-05-20T12:13:14.000Z</published>
    <updated>2020-05-24T01:28:55.665Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Python代码利用turtle（海龟绘图）实现七段数码管的显示，绘制当前的系统日期。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SevennDigitsDrawV1.py</span></span><br><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawGap</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawLine</span><span class="params">(draw)</span>:</span></span><br><span class="line">    DrawGap()</span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">40</span>)</span><br><span class="line">    DrawGap()</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawDigits</span><span class="params">(digits)</span>:</span></span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawDate</span><span class="params">(date)</span>:</span></span><br><span class="line">    turtle.pencolor(<span class="string">"red"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> date:</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">"-"</span>:</span><br><span class="line">            turtle.write(<span class="string">'年'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">"green"</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">"="</span>:</span><br><span class="line">            turtle.write(<span class="string">'月'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">"blue"</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">"+"</span>:</span><br><span class="line">            turtle.write(<span class="string">'日'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            DrawDigits(eval(i))</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.setup(<span class="number">800</span>,<span class="number">300</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">-300</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    DrawDate(time.strftime(<span class="string">"%Y-%m=%d+"</span>,time.gmtime()))</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line">    </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200524092806.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python代码利用turtle（海龟绘图）实现七段数码管的显示，绘制当前的系统日期。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>网页禁止审查元素和F12</title>
    <link href="https://www.imqinhao.cn/2020/05/19/not-allow-F12/"/>
    <id>https://www.imqinhao.cn/2020/05/19/not-allow-F12/</id>
    <published>2020-05-19T14:25:11.000Z</published>
    <updated>2020-05-19T14:28:00.147Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>很多时候我们不想要自己的博客被其他人审查元素，防止其他人扒下自己的网页，获取网站内资源的真实链接，都会选择使用禁止浏览器右键查看元素或F12审查元素。</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">123</span>) &#123;</span><br><span class="line">    alert(<span class="string">"F12被禁用"</span>);</span><br><span class="line">    event.keyCode=<span class="number">0</span>;</span><br><span class="line">    event.returnValue=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">    <span class="built_in">window</span>.event.keyCode = <span class="number">505</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">8</span>) &#123;</span><br><span class="line">    alert(str+<span class="string">"\n请使用Del键进行字符的删除操作！"</span>);</span><br><span class="line">    <span class="built_in">window</span>.event.returnValue=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  document.onkeydown = function()&#123;</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">      if(window.event &amp;&amp; window.event.keyCode == 123) &#123;</span></span><br><span class="line"><span class="string">          window.location="</span>about:blank<span class="string">"; //将当前窗口跳转置空白页</span></span><br><span class="line"><span class="string">          event.keyCode=0;</span></span><br><span class="line"><span class="string">          event.returnValue=false;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      if(window.event &amp;&amp; window.event.keyCode == 13) &#123;</span></span><br><span class="line"><span class="string">          window.event.keyCode = 505;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      if(window.event &amp;&amp; window.event.keyCode == 8) &#123;</span></span><br><span class="line"><span class="string">          alert(str+"</span>\n请使用Del键进行字符的删除操作！<span class="string">");</span></span><br><span class="line"><span class="string">          window.event.returnValue=false;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多时候我们不想要自己的博客被其他人审查元素，防止其他人扒下自己的网页，获取网站内资源的真实链接，都会选择使用禁止浏览器右键查看元素或F12审查元素。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小技巧" scheme="https://www.imqinhao.cn/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>解决pip异常:No module named &#39;pip&#39;</title>
    <link href="https://www.imqinhao.cn/2020/05/19/No-module-named-pip/"/>
    <id>https://www.imqinhao.cn/2020/05/19/No-module-named-pip/</id>
    <published>2020-05-19T13:10:00.000Z</published>
    <updated>2020-05-19T13:14:37.534Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>学习Python过程中，pip安装模块的时候提示我有新版本更新，更新之后不知道为什么就无法使用pip命令了，一直提示<kbd>ModuleNotFoundError: No module named 'pip'</kbd>。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;e:\python\lib\runpy.py&quot;, line 193, in _run_module_as_main</span><br><span class="line">    return _run_code(code, main_globals, None,</span><br><span class="line">  File &quot;e:\python\lib\runpy.py&quot;, line 86, in _run_code</span><br><span class="line">    exec(code, run_globals)</span><br><span class="line">  File &quot;E:\python\Scripts\pip.exe\__main__.py&quot;, line 5, in &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named &#39;pip&#39;</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python -m ensurepip</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519210256.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519210329.png" alt=""></p><div class="note success"><p>至此，pip命令修复完成，又可以正常使用了</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习Python过程中，pip安装模块的时候提示我有新版本更新，更新之后不知道为什么就无法使用pip命令了，一直提示&lt;kbd&gt;ModuleNotFoundError: No module named &#39;pip&#39;&lt;/kbd&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>非华为电脑使用多屏协同</title>
    <link href="https://www.imqinhao.cn/2020/05/19/huawei-PCManager/"/>
    <id>https://www.imqinhao.cn/2020/05/19/huawei-PCManager/</id>
    <published>2020-05-19T03:42:14.000Z</published>
    <updated>2020-05-19T04:10:09.386Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>绕过华为对非华为电脑管家的限制，一键安装PCManager（不需要改BOIS）</p><p>PCManager管理功能，启动、关闭、服务控制等。</p><p>提供极客模式。</p><a id="more"></a><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>具有多屏协同功能的华为或荣耀手机</p>            </div> <div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>一台带蓝牙和无线网卡的win 10电脑</p>            </div><h2 id="安装华为的电脑管家"><a href="#安装华为的电脑管家" class="headerlink" title="安装华为的电脑管家"></a>安装华为的电脑管家</h2><p>华为电脑管家的安装包大家可以关注我的微信公众号，回复“多屏协同”即可获取安装包及安装工具下载地址。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/weixin.jpg" alt=""></p><h3 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h3><p>解压之后会得到下图的文件。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200518202819.png" alt=""></p><h3 id="启动安装工具"><a href="#启动安装工具" class="headerlink" title="启动安装工具"></a>启动安装工具</h3><ol><li>将之前安装的电脑管家完全卸载，删除<kbd>C:\Program Files\Huawei\PCManager</kbd>目录所有文件。</li><li>重启电脑。</li><li><kbd>PCManagerMgr.exe</kbd>右键，以<kbd>管理员身份运行</kbd>。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519100611.png" alt=""></p><h3 id="卸载之前的版本"><a href="#卸载之前的版本" class="headerlink" title="卸载之前的版本"></a>卸载之前的版本</h3><div class="note success"><p>如果之前安装过旧版本请执行此步骤，没有安装过请跳过</p></div><p>点击<kbd>卸载</kbd>，会弹出华为电脑管家的卸载界面，点击<kbd>我要卸载</kbd>，等待卸载完成，出现<kbd>电脑管家已卸载</kbd>，点击<kbd>完成</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519101314.png" alt=""></p><h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><div class="note success"><p>卸载完成后需要重启电脑，然后再次打开工具。</p></div><h3 id="获取口令"><a href="#获取口令" class="headerlink" title="获取口令"></a>获取口令</h3><p>关注<kbd>汉客儿</kbd>的微信公众号，回复关键字<kbd>口令</kbd>，将获取到的口令复制到下图方框位置。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519101920.png" alt=""></p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>复制口令后，点击<kbd>安装</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102200.png" alt=""></p><p>点击<kbd>安装</kbd>后会出现<kbd>正在安装hw电脑管家...</kbd>，等待弹出华为电脑管家的安装界面。<red>注意：系统必须是win10的，我这里由于安装过了，用虚拟机展示的界面。</red></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102314.png" alt=""></p><p>点击<kbd>立即安装</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102434.png" alt=""></p><p>安装完成后会到工具，看到<kbd>当前管家已经xx，尽情享受吧</kbd>，此时软件已经安装完成。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102713.png" alt=""></p><h3 id="检查服务是否运行"><a href="#检查服务是否运行" class="headerlink" title="检查服务是否运行"></a>检查服务是否运行</h3><p>检查上图中右边的服务是否是<kbd>运行中</kbd>的状态，如果是<kbd>未运行</kbd>则点击后面的<kbd>运行</kbd>按钮。</p><h2 id="连接手机"><a href="#连接手机" class="headerlink" title="连接手机"></a>连接手机</h2><p>点击左侧<kbd>我的手机</kbd>，然后点击<kbd>立即连接</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519110854.png" alt=""></p><p>选择<kbd>扫码连接</kbd>，手机打开<kbd>华为浏览器</kbd>，扫码后点击<kbd>连接</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519111026.png" alt=""></p><p>点击<kbd>连接</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/5382a561154e1d7697f13ce372a3516.jpg" alt=""></p><p>点击<kbd>允许</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519111423.png" alt=""></p><p>连接成功之后会出现手机的型号以及存储空间信息。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519113119.png" alt=""></p><h2 id="多屏协同"><a href="#多屏协同" class="headerlink" title="多屏协同"></a>多屏协同</h2><p>点击<kbd>多屏协同</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519113243.png" alt=""></p><p>此时就可以使用<kbd>多屏协同</kbd>功能啦。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519113426.png" alt=""></p><div class="note success"><p>建议电脑和手机处于5GHz频带的wifi可提升流畅度。</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;绕过华为对非华为电脑管家的限制，一键安装PCManager（不需要改BOIS）&lt;/p&gt;
&lt;p&gt;PCManager管理功能，启动、关闭、服务控制等。&lt;/p&gt;
&lt;p&gt;提供极客模式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件破解" scheme="https://www.imqinhao.cn/categories/%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>ICIC</title>
    <link href="https://www.imqinhao.cn/2020/05/12/ICIC/"/>
    <id>https://www.imqinhao.cn/2020/05/12/ICIC/</id>
    <published>2020-05-12T06:11:21.000Z</published>
    <updated>2020-05-12T07:21:14.455Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>小区间干扰协调（Inter Cell Interference Coordination，ICIC）是用来解决同频组网时，小区间干扰的技术。</p><a id="more"></a><h2 id="干扰抑制的3种类型"><a href="#干扰抑制的3种类型" class="headerlink" title="干扰抑制的3种类型"></a>干扰抑制的3种类型</h2><ul><li>干扰随机化：加扰、交织、跳频</li><li>干扰消除：波束赋形、IRC</li><li>干扰协调：ICIC<ul><li>资源调度方式</li><li>资源调度周期</li></ul></li></ul><br><h2 id="小区间干扰抑制技术"><a href="#小区间干扰抑制技术" class="headerlink" title="小区间干扰抑制技术"></a>小区间干扰抑制技术</h2><div class="note success"><p>小区间的干扰主要来自于同频组网带来的同频干扰。</p></div><br><h3 id="小区间干扰抑制技术-1"><a href="#小区间干扰抑制技术-1" class="headerlink" title="小区间干扰抑制技术"></a>小区间干扰抑制技术</h3><ul><li>干扰随机化技术</li><li>干扰消除技术</li><li>干扰协调技术（ICIC）</li></ul><h3 id="小区间干扰随机化技术：加扰"><a href="#小区间干扰随机化技术：加扰" class="headerlink" title="小区间干扰随机化技术：加扰"></a>小区间干扰随机化技术：加扰</h3><ul><li>LTE系统充分使用序列的随机化避免小区间干扰</li><li>一般情况下，加扰在信道编码之后、数据调制之前进行，即比特级的加扰。</li></ul><h3 id="小区间干扰随机化技术：跳频"><a href="#小区间干扰随机化技术：跳频" class="headerlink" title="小区间干扰随机化技术：跳频"></a>小区间干扰随机化技术：跳频</h3><ul><li>目前LTE上下行都支持跳频传输，通过跳频传输可以随机化小区间的干扰。</li><li>除了PBCH之外，其他下行物理控制信道的资源映射均与小区id有关</li><li>PDSCH、PUSCH以及PUCCH采用子帧内跳频传输</li><li>PUSCH可以采用子帧间的跳频传输</li></ul><h3 id="小区间干扰消除技术：发射端波束赋形"><a href="#小区间干扰消除技术：发射端波束赋形" class="headerlink" title="小区间干扰消除技术：发射端波束赋形"></a>小区间干扰消除技术：发射端波束赋形</h3><ul><li>提高期望用户的信号强度</li><li>降低信号对其他用户的干扰</li><li>已经知道被干扰用户的方位，可以主动降低对该方向辐射能量</li></ul><h3 id="小区间干扰消除技术：IRC"><a href="#小区间干扰消除技术：IRC" class="headerlink" title="小区间干扰消除技术：IRC"></a>小区间干扰消除技术：IRC</h3><div class="note success"><p>接收端利用多根天线对接收信号进行加权，抑制强干扰，称为IRC。</p></div><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200512134430.png" alt=""></p><h3 id="小区间干扰协调：ICIC"><a href="#小区间干扰协调：ICIC" class="headerlink" title="小区间干扰协调：ICIC"></a>小区间干扰协调：ICIC</h3><ul><li>是一种考虑多个小区中资源使用和负载等情况而进行的多小区无线资源管理方案。</li><li>基本思想：通过管理无线资源使得小区间干扰得到控制。</li><li>限制的无线资源：<ul><li>时频资源</li><li>一定时频资源上的功率资源</li></ul></li><li>是目前研究的一项热门技术，可以应用于各种宽带的业务。</li></ul><br><h3 id="小区间干扰协调ICIC的实现方式"><a href="#小区间干扰协调ICIC的实现方式" class="headerlink" title="小区间干扰协调ICIC的实现方式"></a>小区间干扰协调ICIC的实现方式</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200512135150.png" alt=""></p><br><hr><ul><li>静态ICIC：对无线资源的使用重新配置的时间以天为单位。几乎不需要基站之间交互信息。</li><li>半静态ICIC：对无线资源的使用重新配置的时间以秒为单位。基站之间信息传递的频率类似。</li><li>动态ICIC：对无线资源的使用重新配置的时间以10ms或百毫秒为单位，基站之间信息传递的频率类似。</li><li>协调调度：对无线资源的使用重新配置的时间以TTI为单位，由于x2接口的时延限制，在基站间无法实时传递信息，协调调度在LTE-advanced阶段实现。</li></ul><br><h3 id="ICIC方案对应关系图"><a href="#ICIC方案对应关系图" class="headerlink" title="ICIC方案对应关系图"></a>ICIC方案对应关系图</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200512140530.png" alt=""></p><h3 id="ICIC解决方案-基于SFR半静态ICIC"><a href="#ICIC解决方案-基于SFR半静态ICIC" class="headerlink" title="ICIC解决方案-基于SFR半静态ICIC"></a>ICIC解决方案-基于SFR半静态ICIC</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200512140648.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小区间干扰协调（Inter Cell Interference Coordination，ICIC）是用来解决同频组网时，小区间干扰的技术。&lt;/p&gt;
    
    </summary>
    
    
      <category term="通信技术" scheme="https://www.imqinhao.cn/categories/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="通信技术" scheme="https://www.imqinhao.cn/tags/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
      <category term="无线技术" scheme="https://www.imqinhao.cn/tags/%E6%97%A0%E7%BA%BF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="通信原理" scheme="https://www.imqinhao.cn/tags/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>MIMO</title>
    <link href="https://www.imqinhao.cn/2020/05/11/MIMO/"/>
    <id>https://www.imqinhao.cn/2020/05/11/MIMO/</id>
    <published>2020-05-11T13:21:21.000Z</published>
    <updated>2020-05-11T13:19:16.882Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>多进多出（MIMO）是为极大地提高信道容量，在发送端和接收端都使用多根天线，在收发之间构成多个信道的天线系统。MIMO系统的一个明显特点就是具有极高的频谱利用效率，在对现有频谱资源充分利用的基础上通过利用空间资源来获取可靠性与有效性两方面增益，其代价是增加了发送端与接收端的处理复杂度。大规模MIMO技术采用大量天线来服务数量相对较少的用户，可以有效提高频谱效率。</p><a id="more"></a><h2 id="MIMO的定义"><a href="#MIMO的定义" class="headerlink" title="MIMO的定义"></a>MIMO的定义</h2><details ><summary> <p>Multiple Input Multiple Output，多输入多输出。</p> </summary>              <div class='content'>              <div class="note success"><p>在多个天线上分别发送多个数据流</p></div><div class="note success"><p>利用多径衰落，在不增加带宽和天线发射功率的情况下，提高信道容量及频谱利用率，或提高数据的传输质量。</p></div>              </div>            </details><h2 id="MIMO的优点"><a href="#MIMO的优点" class="headerlink" title="MIMO的优点"></a>MIMO的优点</h2><p><red><strong>MIMO多种模式带来多种增益。</strong></red></p><ul><li>分集增益</li><li>波束赋形增益</li><li>空间复用增益</li></ul><p><red><strong>频谱效率</strong></red></p><p>要求TD-LTE的下行频率速率达到5bps/Hz（Rel-10为30bps/Hz），上行频谱速率达到2.5bps/Hz（Rel-10为15bps/Hz）</p><hr><div class="note success"><p>MIMO天线收发分集：提高通信质量。</p></div><div class="note success"><p>发射分集技术提高系统下行链路性能。</p></div><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511140050.png" alt="开环模式中的STTD分集"></p><hr><div class="note success"><p>MIMO天线空间复用：提高系统容量</p></div><p>MU-MIMO：基站将占用相同时频资源的多个数据流发送给不同用户</p><p>下行同时支持SU-MIMO和MU-MIMO</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511154807.png" alt=""></p><hr><div class="note success"><p>MIMO天线波束赋形：增强抗干扰能力</p></div><p>传统的波束赋形：</p><ul><li>小间距的天线阵列，使用较多天线单元</li><li>提高峰值速率，小区覆盖，降低小区间的干扰</li></ul><hr><h2 id="LTE创新技术：双流波束赋形"><a href="#LTE创新技术：双流波束赋形" class="headerlink" title="LTE创新技术：双流波束赋形"></a>LTE创新技术：双流波束赋形</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511211824.png" alt=""></p><hr><h2 id="MIMO优点总结"><a href="#MIMO优点总结" class="headerlink" title="MIMO优点总结"></a>MIMO优点总结</h2><p>发送分集：提高可靠性，不能提升数据速率</p><p>波束赋形：降低干扰，能提升数据速率</p><p>空分复用：多个数据流传输，可提升数据速率</p><hr><h2 id="TD-LTE中MIMO的应用（PDSCH-传输方案）"><a href="#TD-LTE中MIMO的应用（PDSCH-传输方案）" class="headerlink" title="TD-LTE中MIMO的应用（PDSCH 传输方案）"></a>TD-LTE中MIMO的应用（PDSCH 传输方案）</h2><table><thead><tr><th align="center">传输模式</th><th align="left">PDSCH传输方案</th><th>优点</th><th>典型应用方案</th></tr></thead><tbody><tr><td align="center">TM1</td><td align="left">单天线传输模式</td><td>产生的CRS开销小</td><td>各类场景</td></tr><tr><td align="center">TM2</td><td align="left">发送分集</td><td>提高链路传输质量，提高小区覆盖半径</td><td>作为其他MIMO模式的回退模式</td></tr><tr><td align="center">TM3</td><td align="left">开环空间复用</td><td>提高小区平均频谱效率和峰值速率</td><td>高速移动场景</td></tr><tr><td align="center">TM4</td><td align="left">闭环空间复用</td><td>提高小区平均频谱效率和峰值速率</td><td>低速移动场景</td></tr><tr><td align="center">TM5</td><td align="left">多用户MIMO</td><td>提高小区平均频谱效率和峰值速率</td><td>密集城区</td></tr><tr><td align="center">TM6</td><td align="left">Rank=1的预编码</td><td>提高小区的覆盖</td><td>仅支持rank=1的传输</td></tr><tr><td align="center">TM7</td><td align="left">单流波束赋形</td><td>提高链路传输质量，提高小区覆盖半径</td><td>郊区、大范围覆盖场景</td></tr><tr><td align="center">TM8</td><td align="left">双流波束赋形</td><td>提高小区覆盖，提升小区中心用户吞吐量</td><td>小区中心吞吐量需求大的场景</td></tr></tbody></table><hr><h2 id="TM1：单天线端口传输"><a href="#TM1：单天线端口传输" class="headerlink" title="TM1：单天线端口传输"></a>TM1：单天线端口传输</h2><ul><li>最简单的传输方案</li><li>PDSCH使用单天线端口传输时，根据Port0上的CRS进行解调。</li></ul><div class="note success"><p>Port0上的小区专用参考信号的标识是R0。</p></div><hr><h2 id="TM2：发送分集"><a href="#TM2：发送分集" class="headerlink" title="TM2：发送分集"></a>TM2：发送分集</h2><ul><li>用于增强小区覆盖。</li><li>作为TM3/4/5/6/7的回退模式</li><li>LTE中的实现方式SFBC+FSTD。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511191836.png" alt=""></p><hr><h2 id="TM3：开环空间复用"><a href="#TM3：开环空间复用" class="headerlink" title="TM3：开环空间复用"></a>TM3：开环空间复用</h2><ul><li>一种大延迟（CDD）空间复用，接收端不需给发射端反馈预编码矩阵信息。</li><li>用于提高小区平均频谱效率和峰值速率。</li><li>适用于高速移动场景。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511192143.png" alt=""></p><hr><h2 id="TM4：闭环空间复用"><a href="#TM4：闭环空间复用" class="headerlink" title="TM4：闭环空间复用"></a>TM4：闭环空间复用</h2><ul><li>发送端需要给接收端反馈预编码矩阵信息。</li><li>用于提高小区平均频谱效率和峰值速率。</li><li>适用于低速移动场景。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511192325.png" alt=""></p><hr><h2 id="TM5：多用户MIMO"><a href="#TM5：多用户MIMO" class="headerlink" title="TM5：多用户MIMO"></a>TM5：多用户MIMO</h2><ul><li>只支持每个用户单层的传输，而且最大支持两层。</li><li>用于提高小区平均频谱效率和峰值速率。</li></ul><hr><h2 id="TM6：闭环RANK-1的预编码"><a href="#TM6：闭环RANK-1的预编码" class="headerlink" title="TM6：闭环RANK=1的预编码"></a>TM6：闭环RANK=1的预编码</h2><ul><li>用于增强小区覆盖。</li><li>尽可能减小承载相关的控制信令。</li><li>仅支持rank=1的传输。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511192647.png" alt=""></p><hr><h2 id="TM7：单流波束赋形"><a href="#TM7：单流波束赋形" class="headerlink" title="TM7：单流波束赋形"></a>TM7：单流波束赋形</h2><ul><li>PDSCH是依据port5上DRS进行解调的。</li><li>用于提高小区边缘用户的覆盖。</li><li>单流波束赋形是基于专用导频的非码本波束赋形。</li><li>主要用于TD-LTE系统。</li></ul><hr><h2 id="TM8：双流波束赋形"><a href="#TM8：双流波束赋形" class="headerlink" title="TM8：双流波束赋形"></a>TM8：双流波束赋形</h2><ul><li>双流波束赋形将波束赋形技术与空间复用技术相结合。</li><li>既提高小区边缘用户的覆盖，也可以提升小区中心用户的吞吐量。</li><li>双流波束赋形是基于专用导频的非码本波束赋形。</li><li>双流波束赋形是TD-LTE  Rel-9中的增强型技术。</li></ul><hr><h2 id="终端LTE多天线"><a href="#终端LTE多天线" class="headerlink" title="终端LTE多天线"></a>终端LTE多天线</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200511205924.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多进多出（MIMO）是为极大地提高信道容量，在发送端和接收端都使用多根天线，在收发之间构成多个信道的天线系统。MIMO系统的一个明显特点就是具有极高的频谱利用效率，在对现有频谱资源充分利用的基础上通过利用空间资源来获取可靠性与有效性两方面增益，其代价是增加了发送端与接收端的处理复杂度。大规模MIMO技术采用大量天线来服务数量相对较少的用户，可以有效提高频谱效率。&lt;/p&gt;
    
    </summary>
    
    
      <category term="通信技术" scheme="https://www.imqinhao.cn/categories/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="通信技术" scheme="https://www.imqinhao.cn/tags/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
      <category term="无线技术" scheme="https://www.imqinhao.cn/tags/%E6%97%A0%E7%BA%BF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="通信原理" scheme="https://www.imqinhao.cn/tags/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>OFDMA</title>
    <link href="https://www.imqinhao.cn/2020/04/25/OFDMA/"/>
    <id>https://www.imqinhao.cn/2020/04/25/OFDMA/</id>
    <published>2020-04-25T09:13:00.000Z</published>
    <updated>2020-04-25T09:32:11.755Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>TD-LTE核心技术</p><p>频分多址技术之OFDMA/SC-FDMA</p><a id="more"></a><h2 id="OFDMA的优点"><a href="#OFDMA的优点" class="headerlink" title="OFDMA的优点"></a>OFDMA的优点</h2><ul><li>时域上抵抗多径衰落</li><li>频域上抵抗频率选择性衰落，简化接收机的信道均衡操作</li></ul><br><div class="note success"><p>码元的长度越长，符号间的干扰（ISI）就越低。</p></div><div class="note success"><p>码元的长度越长，码元速率就越低。</p></div><br><h2 id="OFDM循环前缀CP"><a href="#OFDM循环前缀CP" class="headerlink" title="OFDM循环前缀CP"></a>OFDM循环前缀CP</h2><p>CP能够克服时延拓展，最大限度消除符号间干扰（ISI）。CP越长，能够抵抗的多径时延越长，但相应的，系统开销也越大。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200425155542.png" alt=""></p><div class="note success"><p>I指的是OFDM符号的编码</p></div><br><div class="note success"><p>LTE系统中最小的时间单位叫作基本的时间单位。</p></div><div class="note success"><p>一个子帧可以划分成14个OFDM符号，14个OFDM符号可以划分成2个时隙，1个时隙就是7个OFDM符号</p></div><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200425161403.png" alt=""></p><br><p>CP使一个符号周期内因多径产生的波形为完整的正弦波，因此不同子载波对应的时域信号与其多径积分总为0，消除载波间干扰（ICI）。</p><br><h2 id="OFDM定义"><a href="#OFDM定义" class="headerlink" title="OFDM定义"></a>OFDM定义</h2><div class="note success"><p>子载波间的正交性</p></div><div class="note success"><p>上行采用SC-FDMA技术</p></div><h2 id="OFDM基本原理"><a href="#OFDM基本原理" class="headerlink" title="OFDM基本原理"></a>OFDM基本原理</h2><div class="note success"><p>高速串行转低速并行</p></div><div class="note success"><p>傅里叶逆变换</p></div><h2 id="循环前缀"><a href="#循环前缀" class="headerlink" title="循环前缀"></a>循环前缀</h2><div class="note success"><p>目的：降低ISI和ICI</p></div><div class="note success"><p>分类：常规CP和扩展CP</p></div><h2 id="OFDM和CDMA的对比"><a href="#OFDM和CDMA的对比" class="headerlink" title="OFDM和CDMA的对比"></a>OFDM和CDMA的对比</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200425162921.png" alt=""></p><h3 id="OFDM缺点"><a href="#OFDM缺点" class="headerlink" title="OFDM缺点"></a>OFDM缺点</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200425163141.png" alt=""></p><h2 id="SC-FDMA"><a href="#SC-FDMA" class="headerlink" title="SC-FDMA"></a>SC-FDMA</h2><div class="note success"><p>单载波频分多址接入（Single Carrier Frequency Division Multiple Access）</p></div><br><p>SC-FDMA类似于OFDMA，但SC-FDMA可以降低PAPR（峰均比）。</p><h2 id="OFDMA-VS-SC-FDMA"><a href="#OFDMA-VS-SC-FDMA" class="headerlink" title="OFDMA  VS  SC-FDMA"></a>OFDMA  VS  SC-FDMA</h2><ul><li>OFDMA导致<kbd>高PAPR</kbd>，影响UE的成本和电池寿命</li><li>SC-FDMA采用<kbd>单载波技术</kbd>，<kbd>峰均比（PAPR）低</kbd>，有效提高RF功率放大器的效率，降低终端成本和耗电量</li></ul><h2 id="下行多址方式-OFDMA"><a href="#下行多址方式-OFDMA" class="headerlink" title="下行多址方式-OFDMA"></a>下行多址方式-OFDMA</h2><p>集中式：连续RB分给一个用户</p><details ><summary> <p>点击查看优点</p> </summary>              <div class='content'>              <div class="note success"><p>优点：调度开销小</p></div>              </div>            </details><p>分布式：分配给用户的RB不连续</p><details ><summary> <p>点击查看优点</p> </summary>              <div class='content'>              <div class="note success"><p>优点：选频调度增益较大</p></div>              </div>            </details><br><p><strong>RB(Resource Block)</strong>：资源块。业务信道资源分配的资源单位，时域上为一个时隙，频域上为12个子载波。</p><p><strong>RE(Resource Element)</strong>：最小的资源单位，时域上为一个符号，频域上为一个子载波。</p><br><h2 id="上行多址方式-SC-FDMA"><a href="#上行多址方式-SC-FDMA" class="headerlink" title="上行多址方式-SC-FDMA"></a>上行多址方式-SC-FDMA</h2><p>与OFDMA相同，将传输带宽划分成一系列正交的子载波资源，将不同的子载波资源分配给不同的用户实现多址。注意不同的是：任一终端使用的子载波必须连续。</p><br><div class="note success"><p>在任一调度周期中，一个用户分得的子载波必须是连续的</p></div><br><p>上行方向上给用户分配RB要满足：<br>$$<br>RB = 2^a·3^b·5^c<br>$$</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="OFDM的缺点"><a href="#OFDM的缺点" class="headerlink" title="OFDM的缺点"></a>OFDM的缺点</h3><div class="note success"><p>高峰均比，高同步要求，同频干扰</p></div><h3 id="SC-FDMA定义"><a href="#SC-FDMA定义" class="headerlink" title="SC-FDMA定义"></a>SC-FDMA定义</h3><div class="note success"><p>目的：抗峰均比</p></div><div class="note success"><p>傅里叶表换&amp;傅里叶逆变换</p></div><h3 id="上下行资源的分配"><a href="#上下行资源的分配" class="headerlink" title="上下行资源的分配"></a>上下行资源的分配</h3><p>上行：资源集中&amp;连续RB数满足$$ RB = 2^a·3^b·5^c $$</p><p>下行：资源既可集中，也可分布</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TD-LTE核心技术&lt;/p&gt;
&lt;p&gt;频分多址技术之OFDMA/SC-FDMA&lt;/p&gt;
    
    </summary>
    
    
      <category term="通信技术" scheme="https://www.imqinhao.cn/categories/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="通信技术" scheme="https://www.imqinhao.cn/tags/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
      <category term="无线技术" scheme="https://www.imqinhao.cn/tags/%E6%97%A0%E7%BA%BF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="通信原理" scheme="https://www.imqinhao.cn/tags/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>网络接入技术与方法</title>
    <link href="https://www.imqinhao.cn/2020/04/24/Network_Access/"/>
    <id>https://www.imqinhao.cn/2020/04/24/Network_Access/</id>
    <published>2020-04-24T10:48:12.000Z</published>
    <updated>2020-04-24T10:50:27.692Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>数字用户线xDSL接入技术</p><p>光纤同轴电缆混合网</p><p>无源光网络（PON）标准化的业务（OC-1=51.84Mbps）</p><p>宽带接入技术IEEE 802.16标准与城域网</p><a id="more"></a><h2 id="宽带接入技术的基本类型"><a href="#宽带接入技术的基本类型" class="headerlink" title="宽带接入技术的基本类型"></a>宽带接入技术的基本类型</h2><p>从<red>用户接入</red>的角度，宽带接入可以分为<kbd>接入技术</kbd>与<kbd>接入方式</kbd>两种类型，其中接入方式与用户工作环境与需求相关。</p><p>从<red>技术实现</red>的角度，且前宽带接入技术主要有：<kbd>数字用户线（xDSL）技术</kbd>、<kbd>光纤同轴电缆混合网（HFC）技术</kbd>、<kbd>光纤接入技术</kbd>、<kbd>局域网接入技术</kbd>以及<kbd>无线接入技术</kbd>。其中，无线接入又可以分为<kbd>无线局域网接入</kbd>、<kbd>无线城域网接入</kbd>与<kbd>无线Ad hoc接入</kbd>。</p><h3 id="真考试题"><a href="#真考试题" class="headerlink" title="真考试题"></a>真考试题</h3><p>下列技术中，<red>不属于</red>无线接入技术的是（        ）。</p><div class='checkbox green'><input type="checkbox" />            <p>Ad hoc</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>SDH</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>WiFi</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>WiMAX</p>            </div><h2 id="各种接入技术"><a href="#各种接入技术" class="headerlink" title="各种接入技术"></a>各种接入技术</h2><h3 id="数字用户线xDSL接入技术"><a href="#数字用户线xDSL接入技术" class="headerlink" title="数字用户线xDSL接入技术"></a>数字用户线xDSL接入技术</h3><p>xDSL中x的意思是表示它的不同类型，例如，可以理解x是A、H或RA等，它们对应于不同的数字用户线技术。xDSL技术根据上行和下行的速率是否相同可分为<kbd>速率对称型</kbd>和<kbd>速率非对称型</kbd>两种。</p><br><p class='p subtitle'>根据信号传输的速率、距离以及上行速率与下行速率的不同，xDSL技术主要可以分为以下几种：</p><details ><summary> <p>点击查看具体内容</p> </summary>              <div class='content'>              <div class="note warning"><p>非对称数字用户线（ADSL）</p></div><div class="note warning"><p>高比特率数字用户线（HDSL）</p></div><div class="note warning"><p>速率自适应数字用户线（RADSL）</p></div><div class="note warning"><p>超高比特率数字用户线（VDSL）</p></div>              </div>            </details><br><p>xDSL技术的上行与下行速率</p><table><thead><tr><th align="center">xDSL</th><th align="center">上/下行速率（距离5.5km）</th><th align="center">上/下行速率（距离3.6km）</th><th align="center">是否对称</th><th align="center">线对数</th></tr></thead><tbody><tr><td align="center">ADSL</td><td align="center">64Kbit/s / 1.5Mbit/s</td><td align="center">640Kbit/s  /  6Mbit/s</td><td align="center">否</td><td align="center">1</td></tr><tr><td align="center">HDSL</td><td align="center">1.554Mbit/s</td><td align="center">1.554Mbit/s</td><td align="center">是</td><td align="center">2</td></tr><tr><td align="center">VDSL</td><td align="center">2.3Mbit/s / 51Mbit/s</td><td align="center">2.3Mbit/s  /  51Mbit/s</td><td align="center">否</td><td align="center">2</td></tr><tr><td align="center">RADSL</td><td align="center">64Kbit/s / 1.5Mbit/s</td><td align="center">640Kbit/s  /  6Mbit/s</td><td align="center">否</td><td align="center">1</td></tr></tbody></table><br><p>ADSL的技术特点主要表现在：</p><ul><li>能够利用现有的用户电话铜双绞线，以重叠和不干扰传统模拟电话业务的方式，即普通电话业务（POTS）的方式，提供高速数字业务。ADSL允许用户在保留已有的模拟电话业务的同时，进行Internet在线访问、视频点播（VOD）等新型宽带业务。</li><li>该技术与本地环路的实际参数以及用户电话铜双绞线的特性关系都不大，所以用户不需要进行电缆的重新铺设。</li><li>上行速率在<kbd>64-640Kbit/s</kbd>，下行速率在<kbd>500Kbit/s~7Mbit/s</kbd>，用户可以根据需要自行选择。</li></ul><br><h4 id="真考试题-1"><a href="#真考试题-1" class="headerlink" title="真考试题"></a>真考试题</h4><p>ADSL的上行速率在（        ）。</p><div class='checkbox green'><input type="checkbox" />            <p>10Mbps ~ 20Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>7Mbps ~ 10Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>640Kbps ~ 7Mbps</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>64Kbps ~ 640Kbps</p>            </div><br><p>下列关于xDSL技术的描述中，<red>错误</red>的是（        ）。</p><div class='checkbox green'><input type="checkbox" />            <p>xDSL技术按上行与下行速率分为速率对称与非对称两类</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>ADSL技术在现有用户电话线上同时支持电话业务和数字业务</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>ADSL上行传输速率最大可以达到8Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>HDSL上行传输速率为1.544Mbps</p>            </div><h3 id="光纤同轴电缆混合网"><a href="#光纤同轴电缆混合网" class="headerlink" title="光纤同轴电缆混合网"></a>光纤同轴电缆混合网</h3><h4 id="光纤同轴电缆混合网的基本结构"><a href="#光纤同轴电缆混合网的基本结构" class="headerlink" title="光纤同轴电缆混合网的基本结构"></a>光纤同轴电缆混合网的基本结构</h4><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200424134759.png" alt=""></p><div class="note success"><p>HFC是由<kbd>电视头端</kbd>、<kbd>长距离干线</kbd>、<kbd>放大器</kbd>、<kbd>馈线</kbd>与<kbd>下引线</kbd>组成。</p></div><div class="note success"><p>HFC是新一代的有线电视网络，是一个<kbd>双向传输系统</kbd>，光纤结点通过同轴电缆下引线可以为<kbd>500～2000</kbd>个用户服务。</p></div><div class="note success"><p>HFC<kbd>改善了信号质量，提高了可靠性</kbd>，线路可以使用的带宽甚至可以达到<kbd>1GHz</kbd>。</p></div><div class="note success"><p>从用户接入的角度来看，光纤到HFC是经过双向改造的有线电视网络，是用户通过有线电视宽带接入Intermet的一种重要的方式。</p></div><div class="note success"><p>HFC是使用<kbd>Cable Modem</kbd>，通过有线电视宽带接入Intermet的，数据传输速率可达<kbd>10-36Mbit/s</kbd>。</p></div><br><h4 id="真考试题-2"><a href="#真考试题-2" class="headerlink" title="真考试题"></a>真考试题</h4><p>下列关于光纤同轴电缆混合网HFC的描述中，<red>错误</red>的是（        ）。</p><div class='checkbox green'><input type="checkbox" />            <p>HFC是一个双向传输系统</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>HFC由有线电视头端、长距离干线、放大器、馈线和下引线组成</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>HFC的数据传输速率可达10~36Mbps</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>HFC通过路由器将用户计算机与同轴电缆连接起来</p>            </div><br><h4 id="电缆调制解调器"><a href="#电缆调制解调器" class="headerlink" title="电缆调制解调器"></a>电缆调制解调器</h4><p><kbd>Cable Modem把用户过算机与有线电视同抽电缆连接起来</kbd>，不仅有调制解调功能，也带有加密解密和协议适配，以及网桥、路由器与集线器的部分功能。Cable Modem利用<kbd>频分复用</kbd>的方法，将双向信道分为：<kbd>从计算机终端到网络方向称为上行信道，从网络到计算机终端方向称为下行信道</kbd>。</p><br><p>从<red>数据传输</red>方向上，Cable Modem可以分为<kbd>单向</kbd>、<kbd>双向</kbd>两类。<br>从<red>传输方式</red>上，Cable Modem可以分为<kbd>双向对称式传输</kbd>和<kbd>非对称式传输</kbd>两类。<br>从<red>同步方式</red>上，Cable Modem可以分为<kbd>类似于Ethernet的同步交换</kbd>和<kbd>类似于ATM技术的异步交换</kbd>两类。<br>从<red>接入的角度</red>，Cable Modem可以分为<kbd>个人Cable Modem</kbd>和<kbd>宽带多用户Cable Modem</kbd>。<br>从<red>接口的角度</red>，Cable Modem可分为<kbd>外置式</kbd>、<kbd>内置式</kbd>和<kbd>交互式机顶盒</kbd>3种。</p><br><h4 id="真考试题-3"><a href="#真考试题-3" class="headerlink" title="真考试题"></a>真考试题</h4><p>下列关于光纤同轴电缆混合网HFC的描述中，<red>错误</red>的是（        ）。</p><div class='checkbox green'><input type="checkbox" />            <p>HFC是一个双向传输系统</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>Cable Modem利用频分多路复用方法将信道分为上行信道与下行信道</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>Cable Modem传输方式分为对称式和非对称式两类</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>HFC通过Cable Modem将光缆与同轴电缆连接起来</p>            </div><p>解析：HFC通过Cable  Modem将用户计算机与同轴电缆连接的，并不是将光缆与同轴电缆连接的。</p><br><h3 id="光纤接入技术"><a href="#光纤接入技术" class="headerlink" title="光纤接入技术"></a>光纤接入技术</h3><p>APON（宽带无源光网络）是ATMPON的简称。<kbd>ATM是一种基王信元的传输协议</kbd>，能为接入网<kbd>提供动态的带宽分配</kbd>，从而更适合宽带数据业务的需要。<br>EPON（以太网无源光网络）是基于以太网的PON技术。EPON采用点到多点结构、无源光纤传输，在以太网之上提供多种业务，<kbd>EPON是一种实现光纤到户的重要技术</kbd>。</p><br><p>无源光网络（PON）是基于ITU ”基于无源光纤网的高速光纤接入系统“  下进行标准化的。</p><ul><li><kbd>OC-3</kbd>：155.520Mbit/s的对称业务</li><li>上行<kbd>OC-3</kbd>：155.520Mbit/s；下行<kbd>OC-12</kbd>：622.080Mbit/s的不对称业务。</li></ul><div class="note success"><p>OC-1 = 51.84Mbit/s</p></div><div class="note success"><p>传输媒介可以是一根或两根单模光纤，双向传输通过波分复用（一根或两根光纤）实现。</p></div><br><h4 id="真考试题-4"><a href="#真考试题-4" class="headerlink" title="真考试题"></a>真考试题</h4><p>ITU标准OC-24和OC-12的传输速率分别为（            ）。</p><div class='checkbox green'><input type="checkbox" />            <p>155.52Mbps和51.84Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>155.52Mbps和622.08Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>622.08Mbps和155.52Mbps</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>1.244Gbps和622.08Mbps</p>            </div><p>解析：</p><div class="note success"><p>OC-24：OC-1 × 24 = 51.84 × 24 = 1244.16Mbps = 1.244Gbps <br> OC-12: OC-24 ÷ 2 = 1244.16 ÷ 2 = 622.08Mbps</p></div><br><p>ITU标准OC-3和OC-12的传输速率分别为（            ）。</p><div class='checkbox green'><input type="checkbox" />            <p>622.08Mbps和1.244Gbps</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>155.52Mbps和622.08Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>155.52Mbps和51.84Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>51.84Mbps和622.08Mbps</p>            </div><p>解析：</p><div class="note success"><p>OC-3：OC-1 × 3 = 51.84 × 3 = 155.52Mbps <br> OC-12: OC-1 × 12 = 51.84 × 12 = 622.08Mbps</p></div><br><h3 id="宽带无线接入技术"><a href="#宽带无线接入技术" class="headerlink" title="宽带无线接入技术"></a>宽带无线接入技术</h3><p>无线接入技术主要有<kbd>IEEE 802.11标准的无线局域网（WL.AN）接入</kbd>、<kbd>IEEE 802.16标准的无线城域网（WMAN）接入</kbd>，以及正在发展的<kbd>Adhoc接入技术</kbd>几种。</p><h4 id="无线接入技术的分类与应用"><a href="#无线接入技术的分类与应用" class="headerlink" title="无线接入技术的分类与应用"></a>无线接入技术的分类与应用</h4><p><red>近距离使用可采用IEEE 802.11标准的无线局域网技术</red>，它可以满足一定地理范围内的用户无线接入需求；<red>远距离使用则采用IEEE 802.16标准的WiMAX技术</red>，该技术可以在<kbd>50km范围内</kbd>提供最高<kbd>70Mbit/s</kbd>的传输速率。</p><br><p>IEEE 802.11标准与IEEE 802.16标准<kbd>均针对无线环境</kbd>,但由于通用对象不同,采用的技术与协议解决问题的重点也不相同。<red>IEEE 802.11标准的重点在解决局域网范围的移动节点通信问题,而IEEE 802.16标准的重点是解决建筑物之间的数据通信问题</red>。</p><br><h4 id="IEEE-802-11标准与无线局域网"><a href="#IEEE-802-11标准与无线局域网" class="headerlink" title="IEEE  802.11标准与无线局域网"></a>IEEE  802.11标准与无线局域网</h4><ul><li><p><kbd>IEEE 802.11</kbd>定义了使用<kbd>红外</kbd>、<kbd>跳频扩频</kbd>与<kbd>直接序列扩频技术</kbd>,数据传输速率为<kbd>1Mbit/s</kbd>或<kbd>2Mbit/s</kbd></p></li><li><p><kbd>IEEE 802.11a</kbd>将传输速率提高到<kbd>54Mbit/s</kbd></p></li><li><p><kbd>IEEE 802.11b</kbd>定义了使用<kbd>直序扩频技术</kbd>,传输速率为<kbd>1Mbit/s</kbd>、<kbd>2Mbit/s</kbd>、<kbd>5.5 Mbit/s</kbd>与<kbd>11Mbit/s</kbd>。</p></li></ul><br><h4 id="IEEE-802-16标准与无线城域网"><a href="#IEEE-802-16标准与无线城域网" class="headerlink" title="IEEE  802.16标准与无线城域网"></a>IEEE  802.16标准与无线城域网</h4><ul><li>按IEEE 802.16标准建立采用<kbd>全双工</kbd>、<kbd>宽带通信</kbd>方式工作的基站。</li><li>IEEE 802.16标准规定了无线网络使用更高的、毫米波的<kbd>10<del>~</del>66GHz</kbd>波段的频率。</li><li>在IEEE 802.16标准上增加了两个物理层标准<kbd>IEEE 802.16d</kbd>与<kbd>IEEE 802.16e</kbd>。</li><li><red>与IEEE 802.16标准工作组对应的论坛组织是<kbd>WiMAX</kbd>，最高的传输速率为<kbd>134Mbit/s</kbd></red>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200424153636.png" alt=""></p><br><h5 id="真考试题-5"><a href="#真考试题-5" class="headerlink" title="真考试题"></a>真考试题</h5><p>下列关于IEEE  802.16标准的描述中，<red>错误</red>的是（            ）。</p><div class='checkbox green'><input type="checkbox" />            <p>提供宽带城域网用户访问Intenet所需要的路由服务</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>最高传输速率为234Mbps</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>使用无线频段为10~66GHz</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>与IEEE 802.16标准工作组对应的论坛组织是WiMAX</p>            </div><br><p>下列关于IEEE  802.16标准的描述中，<red>错误</red>的是（            ）。</p><div class='checkbox green'><input type="checkbox" />            <p>802.16主要用于解决城市地区范围内的宽带无线网接入问题</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>802.16a用于移动结点接入</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>802.11d用于固定结点接入</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>802.16e用于固定或移动结点接入</p>            </div><br><p>下列关于接入技术特征的描述中，<red>正确</red>的是（            ）。</p><div class='checkbox green'><input type="checkbox" />            <p>APON是一种无线接入技术</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>Cable Modem利用波分复用的方法将信道分为上行信道和下行信道</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>IEEE 802.11b将传输速率提高到54Mbps</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>ADSL技术具有非对称带宽特征</p>            </div><details ><summary> <p>点击查看解析</p> </summary>              <div class='content'>              <div class="note warning"><p>APON是一种光纤接入技术的一种，A选项错误；Cable Modem利用的是频分复用的方法将信道分为上行信道和下行信道，故B选项错误；IEEE 802.11b最高的传输速率是11Mbit/s，802.11a最高的速率是54Mbit/s，故C选项错误。</p></div>              </div>            </details><br><p>下列关于接入技术特征的描述中，<red>正确</red>的是（            ）。</p><div class='checkbox green'><input type="checkbox" />            <p>EPON是一种无线接入技术</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>Cable Modem利用波分复用的方法将信道分为上行信道和下行信道</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>802.11a将传输速率提高到11Mbps</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>ADSL技术具有非对称带宽特征</p>            </div><details ><summary> <p>点击查看解析</p> </summary>              <div class='content'>              <div class="note warning"><p>EPON是一种光纤接入技术，故A选项错误；Cable Modem利用的是频分复用的方法将信道分为上行信道和下行信道，故B选项错误；IEEE 802.11b最高的传输速率是11Mbit/s，802.11a最高的速率是54Mbit/s，故C选项错误。</p></div>              </div>            </details><br><div class="note success"><p>非对称数字用户线ADSL技术特点（上行速率在64-640Kbps，下行速率在500Kbps-7Mbps</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数字用户线xDSL接入技术&lt;/p&gt;
&lt;p&gt;光纤同轴电缆混合网&lt;/p&gt;
&lt;p&gt;无源光网络（PON）标准化的业务（OC-1=51.84Mbps）&lt;/p&gt;
&lt;p&gt;宽带接入技术IEEE 802.16标准与城域网&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机三级" scheme="https://www.imqinhao.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7/"/>
    
    
      <category term="网络技术" scheme="https://www.imqinhao.cn/tags/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
      <category term="计算机三级" scheme="https://www.imqinhao.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>构建宽带城域网的基本技术与方案</title>
    <link href="https://www.imqinhao.cn/2020/04/24/build-MAN-idea/"/>
    <id>https://www.imqinhao.cn/2020/04/24/build-MAN-idea/</id>
    <published>2020-04-24T04:12:12.000Z</published>
    <updated>2020-04-24T04:51:22.435Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>基于10GE技术的宽带城域网</p><p>基于弹性分组环技术的宽带城域网</p><a id="more"></a><h2 id="基于10GE技术的宽带城域网"><a href="#基于10GE技术的宽带城域网" class="headerlink" title="基于10GE技术的宽带城域网"></a>基于10GE技术的宽带城域网</h2><p>光以太网是以太网与DWDM技术相结合的产物，可运营光以太网的设备和线路必须符合电信网络99.999%的高运行可靠性，并具备以下特征：</p><p>①能够根据终端用户的实际应用需求分配带宽，保证带宽资源充分、合理地应用。</p><p>②县有认证与授权功能，用户访问网络资源必须经过认证和授权，确保用户和网络资源的安全及合法使用。支持VPN和防火墙，可以有效地保证网络安全。</p><p>③支挂MPLS（多协议标签交换），县有一定的服务质量保证，提供分等级的QoS网络服务。</p><p>④提供计费功能，能及时获得用户的上网时间记录和流量记录，支持按上网时间、用户流量计费，或提供包月计费方式，支持实时计费。</p><p>⑤能够方便、快速、灵活地适应用户和业务的拓展。</p><h3 id="真考试题"><a href="#真考试题" class="headerlink" title="真考试题"></a>真考试题</h3><p>下列关于光以太网在宽带城域网应用的描述中，<red>错误</red>的是（         ）</p><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>光以太网设备与线路符合电信网络99.99%的高运行可靠性</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>能根据用户需求动态分配带宽</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>具有认证与授权功能</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>具有认证与授权功能</p>            </div><p>解析：光以太网设备与线路符合电信网络99.999%的高运行可靠性，故A选项错误。</p><br><p>下列关于光以太网技术特征的描述中，<red>错误</red>的是（        ）。</p><div class='checkbox green'><input type="checkbox" />            <p>能够根据用户的需求分配带宽</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>以信元为单位传输数据</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>具有保护用户和网络资源安全的认证与授权功能</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>提供分级的QoS服务</p>            </div><p>解析：光以太网以光信号为单位来传输数据，以信元为单位传输数据的是ATM网。</p><br><h2 id="基于弹性分组环技术的宽带城域网"><a href="#基于弹性分组环技术的宽带城域网" class="headerlink" title="基于弹性分组环技术的宽带城域网"></a>基于弹性分组环技术的宽带城域网</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200424112901.png" alt=""></p><p>RPR采用双环结构，有内环和外环，两个RPR结点之间的裸光纤的最大长度达到100km，两环均有实现“自愈环”的功能，均可以传输数据分组与控制分组，且可用统计时分多路复用的方法传输IP分组。</p><div class="note success"><p>内环的传输方向是逆时针，外环的传输方向是顺时针。</p></div><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p class='p subtitle'>特点1 公平性好</p><details ><summary> <p>点击查看详情</p> </summary>              <div class='content'>              <div class="note warning"><p>RPR环中每个结点都执行SRP公平算法，使得结点之间能够获得平等的带宽，防止个结点因流量过大而造成环拥塞。同时，RPR环还支持加权公平法则和入口、出口峰值速率限制，用以保证能够根据用户购买的带宽提供相应的服务。</p></div>              </div>            </details><p class='p subtitle'>特点2 带宽的利用率高</p><details ><summary> <p>点击查看详情</p> </summary>              <div class='content'>              <div class="note warning"><p>RPR采用双环结构传输数据分组和控制分组，并限制数据帧只在源结点与目的结点之间的光纤段上传输，当源结点成功地发送一个数据帧之后，这个数据帧要由目的结点从环中收回。如此，该数据帧将不再占用下游段的环带宽，从而提高了环带宽的利用率。</p></div>              </div>            </details><p class='p subtitle'>特点3 保证服务质量</p><details ><summary> <p>点击查看详情</p> </summary>              <div class='content'>              <div class="note warning"><p>RPR环对不同的业务数据分配不同的优先级，以保证高优先级信息的可靠传输，从而保证了网络的服务质量。</p></div>              </div>            </details><p class='p subtitle'>特点4 快速保护和恢复能力强大</p><details ><summary> <p>点击查看详情</p> </summary>              <div class='content'>              <div class="note warning"><p>RPR有自愈环的功能，能够在50ms时间内，隔离出现故障的节点和光纤段，并可在没有专用带宽的前提下就能够提供SDH级的快速保护和恢复。</p></div>              </div>            </details><br><h3 id="真考试题-1"><a href="#真考试题-1" class="headerlink" title="真考试题"></a>真考试题</h3><p>下列关于RPR技术的描述中，<red>正确</red>的是（        ）。</p><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>RPR的内环与外环都可以传输数据分组与控制分组</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>RPR环将沿顺时针方向传输的光纤环叫做内环</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>RPR环中每一个节点都执行DPT公平算法</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>RPR环能够在100ms内实现自愈</p>            </div><p>解析：B选项RPR环将沿顺时针方向传输的光纤环叫做外环，逆时针方向传输的光纤环叫作内环，故B选项错误；C选项RPR环中每一个节点都执行SRP公平算法，故C选项错误；D选项RPR环能够在50ms内实现自愈，故D选项错误。A选项两环均有实现“自愈环”的功能，均可以传输数据分组与控制分组，且可用统计时分多路复用的方法传输IP分组。故A选项正确。</p><br><p>下列关于RPR技术的描述中，<red>正确</red>的是（        ）。</p><div class='checkbox green'><input type="checkbox" />            <p>RPR能够在30ms内隔离出现故障的节点和光纤段</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>RPR环中每一个节点都执行DPT公平算法</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>两个RPR节点之间的裸光纤最大长度为30公里</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>RPR的内环与外环都可以传输数据分组与控制分组</p>            </div><p>解析：A选项RPR能够在50ms内隔离出现故障的节点和光纤段，故A选项错误；B选项RPR环中每一个节点都执行SRP公平算法，并不是DPT算法，故B选项错误；C选项两个RPR节点之间的裸光纤最大长度为100公里，故C选项错误。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于10GE技术的宽带城域网&lt;/p&gt;
&lt;p&gt;基于弹性分组环技术的宽带城域网&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机三级" scheme="https://www.imqinhao.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7/"/>
    
    
      <category term="网络技术" scheme="https://www.imqinhao.cn/tags/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    
      <category term="计算机三级" scheme="https://www.imqinhao.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7/"/>
    
  </entry>
  
</feed>
