<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>覃浩的博客</title>
  
  <subtitle>覃浩的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://imqinhao.cn/"/>
  <updated>2020-11-01T09:57:33.767Z</updated>
  <id>https://imqinhao.cn/</id>
  
  <author>
    <name>覃浩</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《网络设备安全配置与管理》综合实训任务书</title>
    <link href="https://imqinhao.cn/2020/11/01/network_security_comprehensive/"/>
    <id>https://imqinhao.cn/2020/11/01/network_security_comprehensive/</id>
    <published>2020-11-01T08:30:11.000Z</published>
    <updated>2020-11-01T09:57:33.767Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>1.  网络搭建</strong> </p><p>根据所给定的拓扑要求，将给定的网络设备互连，搭建物理网络。</p><p><strong>2. IP 地址规划</strong></p><p>根据要求确定所需子网的数量，每个子网的主机数量，设计适当的编址方案，填写网络地址规划表和设备地址表。</p><p><strong>3. 网络设备的安全配置</strong></p><p>根据任务书中指出的安全需求，完成数据网络安全配置。</p><p><strong>4 数据网络安全测试</strong></p><p>安全配置后进行完全效果测试，并分析对应的数据包，理解背后的原理。</p><a id="more"></a><h1 id="一、综合实训内容描述"><a href="#一、综合实训内容描述" class="headerlink" title="一、综合实训内容描述"></a><strong>一、综合实训内容描述</strong></h1><p>《网络设备安全配置与管理》综合实训目的在于通过实际案例需求分析完成设备的仿真配置，同时根据需求完成网络安全配置与管理，保证数据网络安全正常运行。从而能在实际工程中理解网络安全通信的含义。</p><h1 id="二、实施中需要完成的工作任务"><a href="#二、实施中需要完成的工作任务" class="headerlink" title="二、实施中需要完成的工作任务"></a><strong>二、实施中需要完成的工作任务</strong></h1><p><strong>1. ** **网络搭建</strong> </p><p>根据所给定的拓扑要求，将给定的网络设备互连，搭建物理网络。</p><p><strong>2. IP</strong> <strong>地址规划</strong></p><p>根据要求确定所需子网的数量，每个子网的主机数量，设计适当的编址方案，填写网络地址规划表和设备地址表。</p><p><strong>3.</strong> <strong>网络设备的安全配置</strong></p><p>根据任务书中指出的安全需求，完成数据网络安全配置。</p><p><strong>4</strong> <strong>数据网络安全测试</strong></p><p>安全配置后进行完全效果测试，并分析对应的数据包，理解背后的原理。</p><h1 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a><strong>三、注意事项</strong></h1><p>项目完成后需要提交相关的WORD规划文件以及相应的配置文档。两份文档存储在文件夹中上交。文件及文件夹命名规则如下：</p><table><thead><tr><th>文档类型</th><th>格式</th><th>名称</th></tr></thead><tbody><tr><td>规划表文档</td><td>WORD</td><td>综合实训任务书（姓名）</td></tr><tr><td>配置文档</td><td>PKT</td><td>综合实训项目（姓名）</td></tr></tbody></table><h1 id="四、网络拓扑图如下"><a href="#四、网络拓扑图如下" class="headerlink" title="四、网络拓扑图如下"></a><strong>四、网络拓扑图如下</strong></h1><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage001.png" alt="image001"></p><h1 id="五、根据网络安全需求，进行网络安全配置"><a href="#五、根据网络安全需求，进行网络安全配置" class="headerlink" title="五、根据网络安全需求，进行网络安全配置"></a><strong>五、根据网络安全需求，进行网络安全配置</strong></h1><p>（一）基础配置</p><p>1、在Packet Tracer中绘制如图所示拓扑图，模拟某公司分隔两地的总公司和分公司之间通过Internet 连接。（注意：XX为学号最后2位）</p><p>2、IP地址规划和配置</p><p>（1）IP地址规划：</p><p>如拓扑图所示，2个分公司内部采用私网地址，Internet采用公网地址，地址表规划如下：</p><table><thead><tr><th><strong>设备名称</strong></th><th><strong>接口</strong></th><th><strong>IP</strong> <strong>地址</strong></th><th><strong>网关</strong></th></tr></thead><tbody><tr><td>R1</td><td>Fa0/0</td><td>10.10.11.254/24</td><td></td></tr><tr><td>Fa1/0</td><td>100.1.1.1/30</td><td></td><td></td></tr><tr><td>tunnel</td><td>1.1.1.1/24</td><td></td><td></td></tr><tr><td>R3</td><td>Fa0/0</td><td>192.168.11.254/24</td><td></td></tr><tr><td>Fa1/0</td><td>200.1.1.1/30</td><td></td><td></td></tr><tr><td>tunnel</td><td>1.1.1.2/24</td><td></td><td></td></tr><tr><td>ISP router</td><td>Fa4/0</td><td>100.1.1.2/30</td><td></td></tr><tr><td>Fa5/0</td><td>200.1.1.2/30</td><td></td><td></td></tr><tr><td>Fa0/0</td><td>201.1.1.254/24</td><td></td><td></td></tr><tr><td>Server 0</td><td>Fa0</td><td>10.10.11.1/24</td><td>10.10.11.254/24</td></tr><tr><td>PC1</td><td>Fa0</td><td>10.10.11.2/24</td><td>10.10.11.254/24</td></tr><tr><td>PC5</td><td>Fa0</td><td>10.10.11.3/24</td><td>10.10.11.254/24</td></tr><tr><td>PC2</td><td>Fa0</td><td>10.10.11.4/24</td><td>10.10.11.254/24</td></tr><tr><td>Laptop0</td><td>Fa0</td><td>201.1.1.1/24</td><td>201.1.1.254/24</td></tr><tr><td>公网DNS</td><td>Fa0</td><td>201.1.1.252/24</td><td>201.1.1.254/24</td></tr><tr><td>公网www</td><td>Fa0</td><td>201.1.1.253/24</td><td>201.1.1.254/24</td></tr><tr><td>公网PC</td><td>Fa0</td><td>201.1.1.2/24</td><td>201.1.1.254/24</td></tr><tr><td>PC6</td><td>Fa0</td><td>192.168.11.1/24</td><td>192.168.11.254/24</td></tr></tbody></table><p>（2）IP地址配置：</p><p>按拓扑图地址规划要求：</p><p>给各路由器配置对应的IP地址、子网掩码；</p><p>给各PC机配置对应的IP地址、子网掩码、网关。</p><p>配置命令如下：（注意：配置命令要大概说明其含义）</p><p><strong>R1  IP</strong> <strong>地址配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">R1&gt; enable#进入特权模式</span><br><span class="line">R1# configure terminal#进入全局模式</span><br><span class="line">R1(config)# interface fastEthernet 0&#x2F;0#进入fa0&#x2F;0端口</span><br><span class="line">R1(config-if)# ip address 10.10.11.254 255.255.255.0#配置IP和子网掩码</span><br><span class="line">R1(config-if)# no shutdown #启用端口</span><br><span class="line">R1(config-if)# exit#退出fa0&#x2F;0端口</span><br><span class="line">R1(config)# interface fastEthernet 1&#x2F;0#进入fa1&#x2F;0端口</span><br><span class="line">R1(config-if)# ip address 100.1.1.1 255.255.255.252 #配置IP和子网掩码</span><br><span class="line">R1(config-if)# no shutdown #启用端口</span><br><span class="line">R1(config-if)# exit#退出fa1&#x2F;0端口</span><br></pre></td></tr></table></figure><p><strong>R3 IP</strong> <strong>地址配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">R3&gt; enable#进入特权模式</span><br><span class="line">R3# configure terminal#进入全局模式</span><br><span class="line">R3(config)# interface fastEthernet 0&#x2F;0#进入fa0&#x2F;0端口</span><br><span class="line">R3(config-if)# ip address 192.168.11.254 255.255.255.0#配置IP和子网掩码</span><br><span class="line">R3(config-if)# no shutdown #启用端口</span><br><span class="line">R3(config-if)# exit#退出fa0&#x2F;0端口</span><br><span class="line">R3(config)# interface fastEthernet 1&#x2F;0#进入fa1&#x2F;0端口</span><br><span class="line">R3(config-if)# ip address 200.1.1.1 255.255.255.252 #配置IP和子网掩码</span><br><span class="line">R3(config-if)# no shutdown #启用端口</span><br><span class="line">R3(config-if)# exit#退出fa1&#x2F;0端口</span><br></pre></td></tr></table></figure><p><strong>ISP</strong> <strong>配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ISP&gt; enable#进入特权模式</span><br><span class="line">ISP# configure terminal #进入全局模式</span><br><span class="line">ISP(config)# interface fastEthernet 4&#x2F;0#进入fa4&#x2F;0端口</span><br><span class="line">ISP(config-if)# ip address 100.1.1.2 255.255.255.252#配置IP和子网掩码</span><br><span class="line">ISP (config-if)# no shutdown #启用端口</span><br><span class="line">ISP(config-if)# exit#退出fa4&#x2F;0端口</span><br><span class="line">ISP(config)# interface fastEthernet 5&#x2F;0#进入fa5&#x2F;0端口</span><br><span class="line">ISP(config-if)# ip address 200.1.1.2 255.255.255.252#配置IP和子网掩码</span><br><span class="line">ISP(config-if)# no shutdown #启用端口</span><br><span class="line">ISP(config-if)# exit#退出fa5&#x2F;0端口</span><br><span class="line">ISP(config)# interface fastEthernet 0&#x2F;0#进入fa0&#x2F;0端口</span><br><span class="line">ISP(config-if)# ip address 201.1.1.254 255.255.255.0#配置IP和子网掩码</span><br><span class="line">ISP(config-if)# no shutdown #启用端口</span><br><span class="line">ISP(config-if)# exit#退出fa0&#x2F;0端口</span><br></pre></td></tr></table></figure><p>3、在总公司和分公司边界路由器上配置默认路由，达到总公司和分公司公网地址互通，配置命令如下：（注意：配置命令要大概说明其含义）</p><p><strong>R1</strong> <strong>配置默认路由</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#ip route 0.0.0.0 0.0.0.0 100.1.1.2#配置默认路由</span><br></pre></td></tr></table></figure><p><strong>R3</strong> <strong>配置默认路由</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R3(config)#ip route 0.0.0.0 0.0.0.0 100.1.1.2#配置默认路由</span><br></pre></td></tr></table></figure><p>4、测试R1和R3的公网地址间的互通性（验证Internet互通），截图如下：（注意：说明为什么）</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage008.png" alt="image008"></p><blockquote><p>答：可以互通，因为R1配置了默认路由，全部数据包转发给了ISP的Fa4/0端口，而R3配置了默认路由，全部数据包转发给了ISP的Fa5/0端口，最终数据包在同一个路由器的两个端口上，所以可以直接通信。</p></blockquote><p>（二）路由器R1的SSH登录服务配置：</p><p>1、SSH登录要求：</p><p>在路由器R1上配置SSH登录服务，其中所有的域名、用户名、密码等皆为wtctx-YYY（YYY为姓名缩写）</p><p>2、配置命令如下：（注意：配置命令要大概说明其含义）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">R1(config)# hostname R1#配置ssh前必须修改主机名</span><br><span class="line">R1(config)# ip domain-name wtctx-qh#给路由器设置域名</span><br><span class="line">R1(config)# crypto key generate rsa#生成rsa秘钥</span><br><span class="line">R1(config)# line vty 0 15#进入vty端口，最多15人同时在线</span><br><span class="line">R1(config-line)# transport input ssh#启用SSH登录</span><br><span class="line">R1(config-line)# privilege level 15#设置用户操作等级为最高级</span><br><span class="line">R1(config-line)# login local#使用本地验证</span><br><span class="line">R1(config-line)# exit#退出到全局模式</span><br><span class="line">R1(config)# username wtctx-qh password wtctx-qh#创建用户名和密码</span><br><span class="line">R1(config)# enable secret wtctx-qh#设置密文密码</span><br></pre></td></tr></table></figure><p>3、测试PC2 SSH登录R1，截图如下：</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage012.jpg" alt="image012"></p><p>（三）交换机端口安全配置：</p><p>1、在总公司交换机上端口安全要求：</p><p>（1）f0/1端口采用静态MAC地址学习方式，指定服务器0的MAC地址，端口最大MAC地址数为？违规处理方式shutdown</p><p>（2）f0/2端口采用sticky MAC地址学习方式，端口最大MAC地址数为？违规处理方式restrict</p><p>2、相关配置命令如下：（注意：配置命令要大概说明其含义）</p><p><strong>Fa0/1</strong> <strong>端口配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; en#进入特权模式</span><br><span class="line">Switch# configure terminal#进入全局模式</span><br><span class="line">Switch(config)# interface fastEthernet 0&#x2F;1#进入Fa0&#x2F;1端口</span><br><span class="line">Switch(config-if)# shutdown#关闭端口，清空mac地址表</span><br><span class="line">Switch(config-if)# switchport mode access#端口定义为access口</span><br><span class="line">Switch(config-if)# switchport port-security#开启端口安全功能</span><br><span class="line">Switch(config-if)# switchport nonegotiate#禁用DTP</span><br><span class="line">Switch(config-if)# switchport port-security maximum 1#设置允许最大地址数为1</span><br><span class="line">Switch(config-if)# switchport port-security mac-address 0090.0C62.168A   #绑定允许接入的地址</span><br><span class="line">Switch(config-if)# switchport port-security violation shutdown   #指定违规处理行为</span><br><span class="line">Switch(config-if)# no shutdown   #启用端口</span><br></pre></td></tr></table></figure><blockquote><p>解析：端口最大mac地址数为1即可，由于Fa0/1与服务器0是直连的，绑定服务器0的mac地址即可限制其它设备接入。</p></blockquote><p><strong>Fa0/2</strong> <strong>端口配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; en#进入特权模式</span><br><span class="line">Switch# configure terminal#进入全局模式</span><br><span class="line">Switch(config)# interface fastEthernet 0&#x2F;2#进入Fa0&#x2F;1端口</span><br><span class="line">Switch(config-if)# shutdown#关闭端口，清空mac地址表</span><br><span class="line">Switch(config-if)# switchport mode access#端口定义为access口</span><br><span class="line">Switch(config-if)# switchport port-security#开启端口安全功能</span><br><span class="line">Switch(config-if)# switchport nonegotiate#禁用DTP</span><br><span class="line">Switch(config-if)# switchport port-security maximum 3#设置允许最大地址数为3</span><br><span class="line">Switch(config-if)# switchport port-security mac-address sticky#绑定允许接入的地址</span><br><span class="line">Switch(config-if)# switchport port-security violation restrict#指定违规处理行为</span><br><span class="line">Switch(config-if)# no shutdown#启用端口</span><br></pre></td></tr></table></figure><blockquote><p>解析：端口最大mac地址数为3，通过观察交换机的mac地址表可以看出，交换机一共粘贴到了三个地址，Fa0/2端口下另外一个交换机的Fa0/1号端口的mac地址，和PC1与PC5的mac地址。添加其他设备发现无法通信，表明最大数为3是正确的。</p></blockquote><p>（四）无线局域网安全配置：</p><p>在分公司无线路由器上做安全配置：</p><p>1、基础安全设置：（XX为学号最后2位）</p><p>1）修改无线路由器默认的管理密码为：wtctx</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage015.png" alt="image015"></p><p>2）修改LAN口地址：192.168.XX+1.1/24 </p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage017.png" alt="image017"></p><p>3）修改SSID：wtctx18</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage019.png" alt="image019"></p><p>4）无线安全配置：</p><p>   认证：WPA2-PSK</p><p>   加密：AES</p><p>   预共享密钥：wtctx2020</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage021.png" alt="image021"></p><p>2、进一步安全配置：</p><p>1）隐藏SSID</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage023.png" alt="image023"></p><p>2）无线mac地址过滤</p><p>  只允许图中3台无线设备laptop0、Smartphone0、Table PC0的mac地址接入，其他不允许</p><table><thead><tr><th>设备</th><th>mac地址</th></tr></thead><tbody><tr><td>Laptop0</td><td>0001.642A.4045</td></tr><tr><td>Smartphone0</td><td>0001.4205.D0AC</td></tr><tr><td>Tablet PC0</td><td>0001.C7B0.ED9E</td></tr></tbody></table><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage027.png" alt="image027"></p><p>3、测试各无线终端与PC6的连通性，截图显示如下：</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage029.png" alt="image029"></p><p>（五）GRE over IPSec VPN配置：</p><p>1、在企业总公司和分公司间配置GRE over IPSec VPN (企业总公司和分公司间参数一致)，要求：</p><p>（1）GRE tunnel两端地址分别为：1.1.1.1/24和1.1.1.2/24 ，tunnel编号为120</p><p>（2）企业总公司和分公司间运行rip协议或OSPF实现互通</p><p>（3）IPSec配置：设置IKE参数,策略优先级为1（预共享验证、DES加密、MD5验证，DH组2，预共享验证密钥为wtctx）</p><p>（4）Ipsec SA 参数设置：ESP-DES加密、ESP-MD5-HMAC验证</p><p>（5）VPN数据流acl编号为110</p><p>（6）transform-set 命名为wtctxset1，crypto map命名为wtctxmap </p><p>2、配置如下：（注意：配置命令要大概说明其含义）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#interface tunnel 120#创建虚拟tunnel端口</span><br><span class="line">R1(config-if)#ip address 1.1.1.1 255.255.255.0#定义tunnel接口的IP地址</span><br><span class="line">R1(config-if)#tunnel source fastEthernet 1&#x2F;0#定义tunnel通道的源地址</span><br><span class="line">R1(config-if)#tunnel destination 200.1.1.1#定义tunnel通道的目的地址</span><br><span class="line">R1(config)#router rip#启用rip路由协议</span><br><span class="line">R1(config-router)#version 2#定义rip v2版本</span><br><span class="line">R1(config-router)#no auto-summary#关闭自动汇总</span><br><span class="line">R1(config-router)#network 10.10.11.0#宣告自己的网段</span><br><span class="line">R1(config-router)#network 1.1.1.1#宣告自己的网段</span><br><span class="line">R1(config-router)# exit#回到全局模式</span><br><span class="line">R1(config)# crypto isakmp enable#启用IKE</span><br><span class="line">R1(config)# crypto isakmp policy 1#建立IKE策略，优先级为1</span><br><span class="line">R1(config-isakmp)# authentication pre-share#使用预共享的密码进行身份验证</span><br><span class="line">R1(config-isakmp)# encryption des#使用DES加密方式</span><br><span class="line">R1(config-isakmp)# hash md5#指定Hash算法为MD5</span><br><span class="line">R1(config-isakmp)# group 2#指定秘钥位数，group2安全性更高</span><br><span class="line">R1(config-isakmp)# exit#回到全局模式</span><br><span class="line">R1(config)#access-list 110 permit gre host 100.1.1.1 host 200.1.1.1 #定义感兴趣流量</span><br><span class="line">R1(config)# crypto isakmp key wtctx address 200.1.1.1#设置预共享秘钥和对端IP</span><br><span class="line">R1(config)#crypto ipsec transform-set wtctxset1 esp-des esp-md5-hmac #配置IPSec交换集</span><br><span class="line">R1(config)#crypto map wtctxmap 1 ipsec-isakmp#创建加密图</span><br><span class="line">R1(config-crypto-map)#set peer 200.1.1.1#标识对方路由器IP地址</span><br><span class="line">R1(config-crypto-map)#set transform-set wtctxset1#指定加密图使用的IPSec交换集</span><br><span class="line">R1(config-crypto-map)#match address 110#用ACL来定义加密的通信</span><br><span class="line">R1(config-crypto-map)#exit#回到全局模式</span><br><span class="line">R1(config)#interface fastEthernet 1&#x2F;0#进入Fa1&#x2F;0端口</span><br><span class="line">R1(config-if)#crypto map wtctxmap#应用加密图到接口</span><br><span class="line">R3(config)#interface tunnel 120#创建虚拟tunnel端口</span><br><span class="line">R3(config-if)#ip address 1.1.1.2 255.255.255.0#定义tunnel接口的IP地址</span><br><span class="line">R3(config-if)#tunnel source fastEthernet 1&#x2F;0#定义tunnel通道的源地址</span><br><span class="line">R3(config-if)#tunnel destination 100.1.1.1#定义tunnel通道的目的地址</span><br><span class="line">R3(config)#router rip#启用rip路由协议</span><br><span class="line">R3(config-router)#version 2#定义rip v2版本</span><br><span class="line">R3(config-router)#no auto-summary#关闭自动汇总</span><br><span class="line">R3(config-router)#network 192.168.11.0#宣告自己的网段</span><br><span class="line">R3(config-router)#network 1.1.1.2#宣告自己的网段</span><br><span class="line">R3(config)# crypto isakmp enable#启用IKE</span><br><span class="line">R3(config)# crypto isakmp policy 1#建立IKE策略，优先级为1</span><br><span class="line">R3(config-isakmp)# authentication pre-share#使用预共享的密码进行身份验证</span><br><span class="line">R3(config-isakmp)# encryption des#使用DES加密方式</span><br><span class="line">R3(config-isakmp)# hash md5#指定Hash算法为MD5</span><br><span class="line">R3(config-isakmp)# group 2#指定秘钥位数，group2安全性更高</span><br><span class="line">R3(config-isakmp)# exit#回到全局模式</span><br><span class="line">R3(config)#access-list 110 permit gre host 200.1.1.1 host 100.1.1.1 #定义感兴趣流量</span><br><span class="line">R3(config)# crypto isakmp key wtctx address 100.1.1.1#设置预共享秘钥和对端IP</span><br><span class="line">R3(config)#crypto ipsec transform-set wtctxset1 esp-des esp-md5-hmac #配置IPSec交换集</span><br><span class="line">R3(config)#crypto map wtctxmap 1 ipsec-isakmp#创建加密图</span><br><span class="line">R3(config-crypto-map)#set peer 100.1.1.1#标识对方路由器IP地址</span><br><span class="line">R3(config-crypto-map)#set transform-set wtctxset1#指定加密图使用的IPSec交换集</span><br><span class="line">R3(config-crypto-map)#match address 110#用ACL来定义加密的通信</span><br><span class="line">R3(config-crypto-map)#exit#回到全局模式</span><br><span class="line">R3(config)#interface fastEthernet 1&#x2F;0#进入Fa1&#x2F;0端口</span><br><span class="line">R3(config-if)#crypto map wtctxmap#应用加密图到接口</span><br></pre></td></tr></table></figure><p>3、测试：</p><p>总公司PC5和分公司PC6间以私有地址互访，截图如下：</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage034.png" alt="image034"></p><p>4、分析GRE over Ipsec VPN的数据包</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage038.png" alt="image038"></p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage036.png" alt="image036"></p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage040.png" alt="image040"></p><blockquote><p>答：可以看到入站前源地址和目的地址都是私网地址，经过路由器，从出站方向可以看到添加了GRE头部，然后添加了公网地址的头部，源地址和目的地址都为公网地址，然后经过IPsec加密，最后添加了公网地址的头部进行传送。</p></blockquote><p>（六）Easy VPN配置：</p><p>1、在R1上配置Easy VPN，配置策略要求如下：</p><p>（1）设置IKE参数,策略优先级为2（预共享验证、DES加密、MD5验证、DH组2）</p><p>（2）启动aaa，设置认证组名为wtc-a，授权组名为wtc-o，用户名和密码为wtc</p><p>（3）设置策略组名为wtcgroup、密码为wtckey，地址池为wtcpool，地址范围172.16.1.1—172.16.1.254</p><p>（4）设置 transform-set 命名为wtctxset2（ESP-DES加密、ESP-MD5-HMAC验证），动态crypto map命名为wtcdmap，静态crypto map命名为wtctxmap</p><p>2、配置命令如下：（注意：配置命令要大概说明其含义）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">R1(config)# crypto isakmp policy 2##建立IKE策略，优先级为2</span><br><span class="line">R1(config-isakmp)# authentication pre-share#使用预共享的密码进行身份验证</span><br><span class="line">R1(config-isakmp)# encryption des#使用DES加密方式</span><br><span class="line">R1(config-isakmp)# hash md5#指定Hash算法为MD5</span><br><span class="line">R1(config-isakmp)# group 2#指定秘钥位数，group2安全性更高</span><br><span class="line">R1(config)# aaa new-model#启用aaa</span><br><span class="line">R1(config)# aaa authentication login wtc-a local#认证</span><br><span class="line">R1(config)# aaa authorization network wtc-o local#授权</span><br><span class="line">R1(config)# username wtc password wtc#在交换机本地设置一个用户</span><br><span class="line">R1(config)# ip local pool wtcpool 172.16.1.1 172.16.1.254#定义地址池</span><br><span class="line">R1(config)# crypto isakmp client configuration group wtcgroup#配置用户组策略</span><br><span class="line">R1(config-isakmp-group)# key wtckey#定义密码</span><br><span class="line">R1(config-isakmp-group)# pool wtcpool#定义使用的地址池</span><br><span class="line">R1(config-isakmp-group)# exit#回到全局模式</span><br><span class="line">R1(config)# crypto ipsec transform-set wtctxset2 esp-des esp-md5-hmac  #配置IPSec交换集R1(config)# crypto dynamic-map wtcdmap 2#定义动态保密图</span><br><span class="line">R1(config-crypto-map)# set transform-set wtctxset2#设置调用的IPsec交换集</span><br><span class="line">R1(config-crypto-map)# reverse-route#路由器必须配置此功能</span><br><span class="line">R1(config-crypto-map)# exit#回到全局模式</span><br><span class="line">R1(config)# crypto map wtctxmap client authentication list wtc-a#设置认证用户列表</span><br><span class="line">R1(config)# crypto map wtctxmap isakmp authorization list wtc-o#设置授权用户列表</span><br><span class="line">R1(config)# crypto map wtctxmap client configuration address respond# VPN地址推送方式</span><br><span class="line">R1(config)# crypto map wtctxmap 2 ipsec-isakmp dynamic wtcdmap#将动态保密图映射到静态保密图</span><br><span class="line">R1(config-crypto-map)# exit#回到全局模式</span><br><span class="line">R1(config)# interface fastEthernet 1&#x2F;0#进入Fa1&#x2F;0端口</span><br><span class="line">R1(config-if)# crypto map wtctxmap#关联到Fa1&#x2F;0端口</span><br></pre></td></tr></table></figure><p>3、测试：</p><p>出差员工PC以VPN登录，能访问公总司PC，截图显示</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage043.png" alt="image043"></p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage045.png" alt="image045"></p><p>4、分析easy VPN的数据包</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage049.png" alt="image049"></p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage047.png" alt="image047"></p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage051.png" alt="image051"></p><blockquote><p>答：位于公网的电脑，登录easy VPN之后会自动获取到一个我们设置的地址池地址，和位于公司总部的电脑进行通信时，首先在公网这边的路由器ISP进站源地址是分配的地址池IP，目的地址为分公司私网地址，出站后添加了ESP头部，然后添加了公网地址头。在总公司路由器进站则是将添加了私网地址头，源地址为公网电脑登录VPN分配的地址池IP，目的地址为总公司内部的私网地址。</p></blockquote><p>（七）NAT配置：</p><p>1、在企业总公司边界路由器R1上配置静态一对多nat，实现公网PC能访问内网服务器0的web服务和ftp服务，要求：</p><p>内网服务器对应的公网地址为：202.56.110.1</p><p>2、在企业总公司边界路由器R1上配置PAT，实现内网用户访问公网WWW服务器和公网PC，要求：</p><p>（1）公网IP地址直接为私网接口地址；</p><p>（2）私网地址acl编号为1</p><p>3、配置命令如下：（注意：配置命令要大概说明其含义）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#interface fastEthernet 0&#x2F;0#进入Fa0&#x2F;0端口</span><br><span class="line">R1(config-if)#ip nat inside#定义对于NAT来说内部接口</span><br><span class="line">R1(config)#interface fastEthernet 1&#x2F;0#进入Fa1&#x2F;0端口</span><br><span class="line">R1(config-if)#ip nat outside#定义对于NAT来说外部接口</span><br><span class="line">R1(config)#ip nat inside source static tcp 10.10.11.1 80 202.56.110.1 80</span><br><span class="line">R1(config)#ip nat inside source static tcp 10.10.11.1 20 202.56.110.1 20</span><br><span class="line">R1(config)#ip nat inside source static tcp 10.10.11.1 21 202.56.110.1 21</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISP(config)#ip route 202.56.110.1 255.255.255.255 100.1.1.1#配置静态路由</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#access-list 1 permit 10.10.11.0 0.0.0.255   #acl列表</span><br><span class="line">R1(config)#ip nat inside source list 1 interface fastEthernet 1&#x2F;0 overload #定义转换源</span><br></pre></td></tr></table></figure><p>4、测试：</p><p>（1）公网PC能访问总公司内网服务器0的www服务，截图如下：</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage056.png" alt="image056"></p><p>（2）公网PC能访问总公司内网服务器0的ftp服务，截图如下：</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage058.png" alt="image058"></p><p>（3）总公司PC能访问公网服务器，截图如下：</p><p><img src="E:%5CC%E7%9B%98%E6%A1%8C%E9%9D%A2%5C%E3%80%8A%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86%E3%80%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%AE%AD%E4%BB%BB%E5%8A%A1%E4%B9%A6.files%5Cimage060.png" alt="image060"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1.  网络搭建&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;根据所给定的拓扑要求，将给定的网络设备互连，搭建物理网络。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. IP 地址规划&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据要求确定所需子网的数量，每个子网的主机数量，设计适当的编址方案，填写网络地址规划表和设备地址表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 网络设备的安全配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据任务书中指出的安全需求，完成数据网络安全配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4 数据网络安全测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安全配置后进行完全效果测试，并分析对应的数据包，理解背后的原理。&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络安全" scheme="https://imqinhao.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Java 设计模式-1</title>
    <link href="https://imqinhao.cn/2020/10/20/Design_patterns_1/"/>
    <id>https://imqinhao.cn/2020/10/20/Design_patterns_1/</id>
    <published>2020-10-20T12:40:00.000Z</published>
    <updated>2020-11-01T09:20:28.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.设计模式原则 </p><p>2.设计模式分类 </p><p>3.常用设计模式</p><p>4.工厂模式定义</p><p>5.工厂模式类图 </p><p>6.工厂模式示例 </p><p>7.工厂模式应用</p><p>8.抽象工厂模式定义 </p><p>9.抽象工厂模式类图 </p><p>10.抽象工厂模式示例 </p><p>11.抽象工厂模式应用 </p><p>12.工厂方法模式、抽象工厂模式区别</p><a id="more"></a><h1 id="什么是设计模式"><a href="#什么是设计模式" class="headerlink" title="什么是设计模式"></a>什么是设计模式</h1><p>在软件工程中，设计模式是对软件设计中普遍存在的各种问题，所提出的解决方案。</p><p>换句话说，设计模式是一套被反复使用、多数人知晓的、经过分类的、代码设计的经验的总结。使用设计模式是为了可重用代码，让代码更容易被他人理解，保证代码可靠性。</p><h1 id="设计模式原则"><a href="#设计模式原则" class="headerlink" title="设计模式原则"></a>设计模式原则</h1><h2 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h2><p>开闭原则的意思是：<code>对扩展开放，对修改封闭</code>。在程序需要进行扩展的时候，不能去修改或影响原有的代码，实现一个热插拔的效果。简言之，是为了使程序的扩展性更好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类。</p><h2 id="里氏代换原则"><a href="#里氏代换原则" class="headerlink" title="里氏代换原则"></a>里氏代换原则</h2><p>里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。里氏代换原则是继承复用的基石，只有当子类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而且子类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p><h2 id="依赖倒转原则"><a href="#依赖倒转原则" class="headerlink" title="依赖倒转原则"></a>依赖倒转原则</h2><p>这个原则是开闭原则的基础，核心内容：针对接口编程，高层模块不应该依赖底层模块，二者都应该依赖抽象而不依赖于具体。</p><h2 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h2><p>这个原则的意思是：使用多个隔离的接口，比使用单个庞大的接口要好。其目的在于降低耦合度。由此可见，其实设计模式就是从大型软件架构出发，便于升级和维护软件的设计思想。它强调低依赖、低耦合。</p><h2 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h2><p>类的职责要单一，不能将太多的职责放在一个类中。</p><p>可能有的人会觉得单一职责原则和前面的接口隔离原则很相似，其实不然。其一，单一职责原则原注重的是职责；而接口隔离原则注重对接口依赖的隔离。其二，单一职责原则主要约束的是类，其次才是接口和方法，它针对的是程序中的实现和细节；而接口隔离原则主要约束接口，主要针对抽象，针对程序整体框架的构建。</p><h2 id="最少知道原则"><a href="#最少知道原则" class="headerlink" title="最少知道原则"></a>最少知道原则</h2><p>最少知道原则也叫迪米特法则，就是说：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。</p><p>一个对象应该对其他对象保持最少的了解。类与类之间的关系越密切，耦合度越大，当一个类发生改变时，对另一个类的影响也越大。如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。所以在类的设计上，每一个类都应当尽量降低成员的访问权限。</p><h2 id="合成复用原则"><a href="#合成复用原则" class="headerlink" title="合成复用原则"></a>合成复用原则</h2><p>合成复用原则就是在一个新的对象里通过关联关系（组合关系、聚合关系）来使用一些已有的对象，使之成为新对象的一部分；新对象通过委派调用已有对象的方法达到复用功能的目的。简而言之，尽量多使用<code>组合/聚合</code>的方式，尽量少使用甚至不使用继承关系。</p><h1 id="设计模式分类"><a href="#设计模式分类" class="headerlink" title="设计模式分类"></a>设计模式分类</h1><p>通常来说设计模式分为三大类：</p><ul><li><strong>创建型模式</strong>，共 5 种：工厂模式、抽象工厂模式、单例模式、建造者模式、原型模式。</li><li><strong>结构型模式</strong>，共 7 种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。</li><li><strong>行为型模式</strong>，共 11 种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020190940.png" alt=""></p><h1 id="什么是工厂模式"><a href="#什么是工厂模式" class="headerlink" title="什么是工厂模式"></a>什么是工厂模式</h1><blockquote><p>工厂模式（Factory Pattern）的意义就跟它的名字一样，在面向对象程序设计中，工厂通常是一个用来创建其他对象的对象。工厂模式根据不同的参数来实现不同的分配方案和创建对象。</p></blockquote><p>在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个<code>共同的接口</code>来指向新创建的对象。例如用工厂来创建 <code>人</code> 这个对象，如果我们需要一个男人对象，工厂就会为我们创建一个男人；如果我们需要一个女人，工厂就会为我们生产一个女人。</p><p>工厂模式通常分为：</p><ul><li>普通工厂模式</li><li>多个工厂方法模式</li><li>静态工厂方法模式</li></ul><h1 id="普通工厂模式"><a href="#普通工厂模式" class="headerlink" title="普通工厂模式"></a>普通工厂模式</h1><p>刚刚我们说到，用工厂模式来创建人。先创建一个男人，他每天都“吃饭、睡觉、打豆豆”，然后我们再创建一个女人，她每天也“吃饭、睡觉、打豆豆”。</p><p>我们以普通工厂模式为例，在 project 目录下新建一个<code>FactoryTest.java</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020191237.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二者共同的接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建实现类 Male</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Male</span> <span class="keyword">implements</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Male can eat."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Male can sleep."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Male can beat."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建实现类 Female</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Female</span> <span class="keyword">implements</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Female can eat."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Female can sleep."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Female can beat."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建普通工厂类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanFactory</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Human <span class="title">createHuman</span><span class="params">(String gender)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( gender.equals(<span class="string">"male"</span>) )&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">new</span> Male();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>( gender.equals(<span class="string">"female"</span>))&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">new</span> Female();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"请输入正确的类型！"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工厂测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        HumanFactory factory = <span class="keyword">new</span> HumanFactory();</span><br><span class="line">        Human male = factory.createHuman(<span class="string">"male"</span>);</span><br><span class="line">        male.eat();</span><br><span class="line">        male.sleep();</span><br><span class="line">        male.beat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac FactoryTest.java</span><br><span class="line">java FactoryTest</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020193135.png" alt=""></p><h1 id="多个工厂方法模式"><a href="#多个工厂方法模式" class="headerlink" title="多个工厂方法模式"></a>多个工厂方法模式</h1><p>普通工厂模式就是上面那样子了，那么多个工厂方法模式又有什么不同呢？在普通工厂方法模式中，如果传递的字符串出错，则不能正确创建对象。多个工厂方法模式是提供多个工厂方法，分别创建对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 设计模式;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两者共同的接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实现类Male</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Male</span> <span class="keyword">implements</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Male can eat."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Male can sleep."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Male can beat."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实现类Female</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Female</span> <span class="keyword">implements</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Female can eat."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Female can sleep."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Female can beat."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//多个工厂方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanFactory</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Male <span class="title">CreateMale</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Male();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Female <span class="title">createFemale</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Female();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//工厂测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryTest2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">HumanFactory factory = <span class="keyword">new</span> HumanFactory();</span><br><span class="line">Human maleHuman = factory.CreateMale();</span><br><span class="line">maleHuman.eat();</span><br><span class="line">maleHuman.sleep();</span><br><span class="line">maleHuman.beat();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译运行-1"><a href="#编译运行-1" class="headerlink" title="编译运行"></a>编译运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac FactoryTest2.java</span><br><span class="line">java FactoryTest2</span><br></pre></td></tr></table></figure><h2 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020194538.png" alt=""></p><h1 id="静态工厂方法模式"><a href="#静态工厂方法模式" class="headerlink" title="静态工厂方法模式"></a>静态工厂方法模式</h1><p>将上面的多个工厂方法模式里的方法置为静态的，不需要创建实例，直接调用即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 设计模式;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两者共同的接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实现类Male</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Male</span> <span class="keyword">implements</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Male can eat."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Male can sleep."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Male can beat."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实现类Female</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Female</span> <span class="keyword">implements</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Female can eat."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Female can sleep."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Female can beat."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//多个工厂方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanFactory</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Male <span class="title">createMale</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> Male();</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Female <span class="title">createFemale</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> Female();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//工厂测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryTest2</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     Human male = HumanFactory.createMale();</span><br><span class="line">     male.eat();</span><br><span class="line">     male.sleep();</span><br><span class="line">     male.beat();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：凡是出现了大量的产品需要创建，并且具有共同的接口时，可以通过工厂方法模式进行创建。在以上的三种模式中，第一种如果传入的字符串有误，不能正确创建对象，第三种相对于第二种，不需要实例化工厂类，所以，大多数情况下，我们会选用第三种——静态工厂方法模式。</p><h1 id="什么是抽象工厂模式"><a href="#什么是抽象工厂模式" class="headerlink" title="什么是抽象工厂模式"></a>什么是抽象工厂模式</h1><p>抽象工厂模式（Abstract Factory Pattern）是一种软件开发设计模式。抽象工厂模式提供了一种方式，可以将一组具有同一主题的单独的工厂封装起来。如果比较抽象工厂模式和工厂模式，我们不难发现前者只是在工厂模式之上增加了一层抽象的概念。抽象工厂是一个父类工厂，可以创建其它工厂类。所以我们也叫它 “工厂的工厂”。</p><h1 id="抽象工厂模式类图"><a href="#抽象工厂模式类图" class="headerlink" title="抽象工厂模式类图"></a>抽象工厂模式类图</h1><p>“女娲娘娘”只有一个，而我们的工厂却可以有多个，因此在这里用作例子就不合适了。作为“女娲娘娘”生产出来的男人女人们，那就让我们来当一次吃货吧。（吃的东西总可以任性多来一点）</p><p>现在，假设我们有 A、B 两个厨房。每个厨房拥有的餐具和食品都不一样，但是用户搭配使用的方式，比如刀子和苹果、杯子和牛奶等等，我们假设是一致的。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020200923.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 抽象工厂模式;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象食物</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Food</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getFoodName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象餐具</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">TableWare</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getToolName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//抽象工厂</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">KitchenFactory</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Food <span class="title">getFood</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> TableWare <span class="title">getTableWare</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体食物 Apple 的定义如下</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span> <span class="keyword">implements</span> <span class="title">Food</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getFoodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"apple"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体餐具 Knife 的定义如下</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Knife</span> <span class="keyword">implements</span> <span class="title">TableWare</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getToolName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"knife"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以具体工厂 AKitchen 为例</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AKitchen</span> <span class="keyword">implements</span> <span class="title">KitchenFactory</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Food <span class="title">getFood</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Apple();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> TableWare <span class="title">getTableWare</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Knife();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//吃货要开吃了</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Foodaholic</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">(KitchenFactory kitchenFactory)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"A foodaholic is eating "</span> + kitchenFactory.getFood().getFoodName() + <span class="string">" with "</span> + kitchenFactory.getTableWare().getToolName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Foodaholic foodaholic = <span class="keyword">new</span> Foodaholic();</span><br><span class="line">KitchenFactory kitchenFactory = <span class="keyword">new</span> AKitchen();</span><br><span class="line">foodaholic.eat(kitchenFactory);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译运行-2"><a href="#编译运行-2" class="headerlink" title="编译运行"></a>编译运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac Foodaholic.java</span><br><span class="line">java Foodaholic</span><br></pre></td></tr></table></figure><h2 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020203200.png" alt=""></p><p>抽象工厂模式特别适合于这样的一种产品结构：产品分为几个系列，在每个系列中，产品的布局都是类似的，在一个系列中某个位置的产品，在另一个系列中一定有一个对应的产品。这样的产品结构是存在的，这几个系列中同一位置的产品可能是互斥的，它们是针对不同客户的解决方案，每个客户都只选择其一。</p><h1 id="工厂方法模式、抽象工厂模式区别"><a href="#工厂方法模式、抽象工厂模式区别" class="headerlink" title="工厂方法模式、抽象工厂模式区别"></a>工厂方法模式、抽象工厂模式区别</h1><p>工厂方法模式、抽象工厂模式，傻傻分不清楚。</p><p>为了解释得更清楚，先介绍两个概念：</p><ul><li><strong>产品等级结构</strong>：比如一个抽象类是食物，其子类有苹果、牛奶等等，则抽象食物与具体食物名称之间构成了一个产品等级结构。食物是抽象的父类，而具体的食物名称是其子类。</li><li><strong>产品族</strong>：在抽象工厂模式中，产品族是指由同一个工厂生产的，位于不同产品等级结构中的一组产品。如 AKitchen 生产的苹果、刀子，苹果属于食物产品等级结构中，而刀子则属于餐具产品等级结构中。而 BKitchen 可能生成另一组产品，如牛奶、杯子。</li></ul><p>因此工厂方法模式、抽象工厂模式最大的区别在于：</p><p>工厂方法模式：针对的是 <strong>一个产品等级结构</strong>。</p><p>抽象工厂模式：针对 <strong>多个产品等级结构</strong>。</p><h1 id="什么是适配器模式"><a href="#什么是适配器模式" class="headerlink" title="什么是适配器模式"></a>什么是适配器模式</h1><p>顾名思义，适配器模式（Adapter Pattern）当然是用来适配的啦。当你想使用一个已有的类，但是这个类的接口跟你的又不一样，不能拿来直接用，这个时候你就需要一个适配器来帮你了。</p><p>这就好像你兴冲冲地跑去香港，买了个港版的 iPhone6，充电器插头拿回家一看，不能用啊。这时候你多么需要买一个转接头适配器…</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020223507.png" alt=""></p><p>你去香港旅游，买的 iPhone6 的充电器插头是英标的，它是那种三脚是方形的插头。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020223608.png" alt=""></p><p>而咱们国标的插头是两只脚，即使是三只脚的插头也和英标不一样。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020223722.png" alt=""></p><p>为了方便，这里我们就假设国标插头就只是两只脚的插头吧。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020223745.png" alt=""></p><p>好的，目标明确，英标三只脚插头充电，国标两只脚插头充电。你家很富，有很多插座可以充电。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201020223805.png" alt=""></p><p>在国内的家中只能用国标接口进行充电。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 国标插头</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CnPluginInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">chargeWith2Pins</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现国标插座的充电方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CnPlugin</span> <span class="keyword">implements</span> <span class="title">CnPluginInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">chargeWith2Pins</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"charge with CnPlugin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在国内家中充电</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Home</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> CnPluginInterface cnPlugin;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Home</span><span class="params">()</span> </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Home</span><span class="params">(CnPluginInterface cnPlugin)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cnPlugin = cnPlugin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPlugin</span><span class="params">(CnPluginInterface cnPlugin)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cnPlugin = cnPlugin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 充电</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">charge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 国标充电</span></span><br><span class="line">        cnPlugin.chargeWith2Pins();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 国标测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CnTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        CnPluginInterface cnPlugin = <span class="keyword">new</span> CnPlugin();</span><br><span class="line">        Home home = <span class="keyword">new</span> Home(cnPlugin);</span><br><span class="line">        <span class="comment">// 会输出 “charge with CnPlugin”</span></span><br><span class="line">        home.charge();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而，当把 iPhone6 带回来时，因为与家里的插座不匹配，所以需要一个适配器。这个适配器必须满足以下条件：</p><blockquote><ol><li>插头必须符合国内标准的接口，否则的话还是没办法插到国内插座中。</li><li>在调用上面实现的国标接口进行充电时，提供一种机制，将这个调用转到对英标接口的调用 。</li></ol></blockquote><p>这就要求：</p><blockquote><ol><li>适配器必须实现原有的旧的接口。</li><li>适配器对象中持有对新接口的引用，当调用旧接口时，将这个调用委托给实现新接口的对象来处理，也就是在适配器对象中组合一个新接口。</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 英标插头</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EnPluginInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">chargeWith3Pins</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现英标插座的充电方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EnPlugin</span> <span class="keyword">implements</span> <span class="title">EnPluginInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">chargeWith3Pins</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"charge with EnPlugin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//适配器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PluginAdapter</span> <span class="keyword">implements</span> <span class="title">CnPluginInterface</span> </span>&#123;</span><br><span class="line">     <span class="keyword">private</span> EnPluginInterface enPlugin;</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">PluginAdapter</span><span class="params">(EnPluginInterface enPlugin)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">this</span>.enPlugin = enPlugin;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 这是重点，适配器实现了国标的插头，然后重写国标的充电方法，在国标的充电方法中调用英标的充电方法</span></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">chargeWith2Pins</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    enPlugin.chargeWith3Pins();</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 适配器测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdapterTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        EnPluginInterface enPlugin = <span class="keyword">new</span> EnPlugin();</span><br><span class="line">        Home home = <span class="keyword">new</span> Home();</span><br><span class="line">        PluginAdapter pluginAdapter = <span class="keyword">new</span> PluginAdapter(enPlugin);</span><br><span class="line">        home.setPlugin(pluginAdapter);</span><br><span class="line">        <span class="comment">// 会输出 “charge with EnPlugin”</span></span><br><span class="line">        home.charge();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="适配器模式的三个特点"><a href="#适配器模式的三个特点" class="headerlink" title="适配器模式的三个特点"></a>适配器模式的三个特点</h1><ul><li>适配器对象实现原有接口</li><li>适配器对象组合一个实现新接口的对象（这个对象也可以不实现一个接口，只是一个单纯的对象）</li><li>对适配器原有接口方法的调用被委托给新接口的实例的特定方法</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.设计模式原则 &lt;/p&gt;
&lt;p&gt;2.设计模式分类 &lt;/p&gt;
&lt;p&gt;3.常用设计模式&lt;/p&gt;
&lt;p&gt;4.工厂模式定义&lt;/p&gt;
&lt;p&gt;5.工厂模式类图 &lt;/p&gt;
&lt;p&gt;6.工厂模式示例 &lt;/p&gt;
&lt;p&gt;7.工厂模式应用&lt;/p&gt;
&lt;p&gt;8.抽象工厂模式定义 &lt;/p&gt;
&lt;p&gt;9.抽象工厂模式类图 &lt;/p&gt;
&lt;p&gt;10.抽象工厂模式示例 &lt;/p&gt;
&lt;p&gt;11.抽象工厂模式应用 &lt;/p&gt;
&lt;p&gt;12.工厂方法模式、抽象工厂模式区别&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://imqinhao.cn/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>TCP/IP简介</title>
    <link href="https://imqinhao.cn/2020/10/05/linux/"/>
    <id>https://imqinhao.cn/2020/10/05/linux/</id>
    <published>2020-10-05T05:14:14.000Z</published>
    <updated>2020-10-16T14:08:33.999Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>知识点</p><ul><li>IP 地址</li><li>域名</li><li>MAC 地址</li><li>端口号</li><li>封装和分用</li></ul><a id="more"></a><p>提到网络协议栈结构，最著名的当属 OSI 七层模型，但是 TCP/IP 协议族的结构则稍有不同，它们之间的层次结构有如图对应关系：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/1548669082626.png" alt=""></p><p>可见 TCP/IP 被分为 4 层，每层承担的任务不一样，各层的协议的工作方式也不一样，每层封装上层数据的方式也不一样：</p><ul><li>应用层：应用程序通过这一层访问网络，常见 FTP、HTTP、DNS 和 TELNET 协议；</li><li>传输层：TCP 协议和 UDP 协议；</li><li>网络层：IP 协议，ARP、RARP 协议，ICMP 协议等；</li><li>网络接口层：是 TCP/IP 协议的基层，负责数据帧的发送和接收。</li></ul><blockquote><p>TCP/IP（Transmission Control Protocol/Internet Protocol）是传输控制协议和网络协议的简称，它定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准。</p><p>TCP/IP 不是一个协议，而是一个协议族的统称，里面包括了 IP 协议、ICMP 协议、TCP 协议、以及 http、ftp、pop3 协议等。网络中的计算机都采用这套协议族进行互联。</p></blockquote><h1 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h1><p>网络上每一个节点都必须有一个独立的 IP 地址，通常使用的 IP 地址是一个 32bit 的数字，被 <code>.</code> 分成 4 组，例如，<code>255.255.255.255</code> 就是一个 IP 地址。有了 IP 地址，用户的计算机就可以发现并连接互联网中的另外一台计算机。</p><p>在 终端输入 <code>ifconfig -a</code> 命令查看自己的 IP 地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -a</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/61acdc3e0704fdf5fb97876dec817ff3-0" alt=""></p><h1 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h1><p>用 12 位数字组成的 IP 地址很难记忆，在实际应用时，用户一般不需要记住 IP 地址，互联网给每个 IP 地址起了一个别名，习惯上称作域名。</p><p>域名与计算机的 IP 地址相对应，并把这种对应关系存储在域名服务系统 DNS(Domain Name System) 中，这样用户只需记住域名就可以与指定的计算机进行通信了。</p><p>常见的域名包括 com、net 和 org 三种顶级域名后缀，除此之外每个国家还有自己国家专属的域名后缀（比如我国的域名后缀为 cn）。目前经常使用的域名诸如百度（<a href="https://www.baidu.com/" target="_blank" rel="noopener">www.baidu.com</a>）、Linux 组织（<a href="https://lwn.net/" target="_blank" rel="noopener">www.lwn.net</a>）等等。</p><p>我们可以使用命令 <code>nslookup</code> 或者 <code>ping</code> 来查看与域名相对应的 IP 地址，由于实验楼网络限制，我们可以使用 <code>ping github.com</code>（如果 <code>github</code> 也 ping 不通，那么可以使用 <code>ping labfile.oss.aliyuncs.com</code>，如果你是会员账户，那么也可以 ping 其他的域名）查看。</p><p>例如：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20201016215115.png" alt=""></p><h1 id="MAC地址"><a href="#MAC地址" class="headerlink" title="MAC地址"></a>MAC地址</h1><p>MAC（Media Access Control）地址，或称为物理地址、硬件地址，用来定义互联网中设备的位置。</p><p>在 TCP/IP 层次模型中，网络层管理 IP 地址，链路层则负责 MAC 地址。因此每个网络位置会有一个专属于它的 IP 地址，而每个主机会有一个专属于它 MAC 地址。</p><h1 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h1><p>IP 地址是用来发现和查找网络中的地址，但是不同程序如何互相通信呢？这就需要端口号来识别了。如果把 IP 地址比作一间房子，端口就是出入这间房子的门。真正的房子只有几个门，但是端口采用 16 比特的端口号标识，一个 IP 地址的端口可以有 65536（即：216）个之多！</p><p>服务器的默认程序一般都是通过人们所熟知的端口号来识别的。例如，对于每个 TCP/IP 实现来说，SMTP（简单邮件传输协议）服务器的 TCP 端口号都是 <code>25</code>，FTP（文件传输协议）服务器的 TCP 端口号都是 <code>21</code>，TFTP（简单文件传输协议）服务器的 UDP 端口号都是 <code>69</code>。任何 TCP/IP 实现所提供的服务都用众所周知的 <code>1－1023</code> 之间的端口号。这些人们所熟知的端口号由 Internet 端口号分配机构（Internet Assigned Numbers Authority，IANA）来管理。</p><p>常用协议对应端口号：</p><ul><li>SSH 22</li><li>FTP 20 和 21</li><li>Telnet 23</li><li>SMTP 25</li><li>TFTP 69</li><li>HTTP 80</li><li>SNMP 161</li><li>Ping 使用 ICMP，无具体端口号</li></ul><h1 id="封装和分用"><a href="#封装和分用" class="headerlink" title="封装和分用"></a>封装和分用</h1><p><strong>封装</strong>：当应用程序发送数据的时候，数据在协议层次当中自顶向下通过每一层，每一层都会对数据增加一些首部或尾部信息，这样的信息称之为协议数据单元（Protocol Data Unit，缩写为 PDU），在分层协议系统里，在指定的协议层上传送的数据单元，包含了该层的协议控制信息和用户信息。如下图所示：</p><ul><li>物理层（一层）PDU 指数据位（Bit）</li><li>数据链路层（二层）PDU 指数据帧（Frame）</li><li>网络层（三层）PDU 指数据包（Packet）</li><li>传输层（四层）PDU 指数据段（Segment）</li><li>第五层以上为数据（data）</li></ul><p><img src="https://dn-simplecloud.shiyanlou.com/uid/8797/1548670748600.png" alt=""></p><p><strong>分用</strong>：当主机收到一个数据帧时，数据就从协议层底向上升，通过每一层时，检查并去掉对应层次的报文首部或尾部，与封装过程正好相反。</p><h1 id="RFC"><a href="#RFC" class="headerlink" title="RFC"></a>RFC</h1><p>RFC（Request for Comment）文档是所有以太网协议的正式标准，并在其官网上面公布，由 IETF 标准协会制定。大量的 RFC 并不是正式的标准，出版的目的只是为了提供信息。RFC 的篇幅不一，从几页到几百页不等。每一种协议都用一个数字来标识，如 RFC 3720 是 iSCSI 协议的标准，数字越大意味着 RFC 的内容越新或者是对应的协议（标准）出现的比较晚。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;知识点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP 地址&lt;/li&gt;
&lt;li&gt;域名&lt;/li&gt;
&lt;li&gt;MAC 地址&lt;/li&gt;
&lt;li&gt;端口号&lt;/li&gt;
&lt;li&gt;封装和分用&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://imqinhao.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>5G网络优化</title>
    <link href="https://imqinhao.cn/2020/10/01/5G%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96/"/>
    <id>https://imqinhao.cn/2020/10/01/5G%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96/</id>
    <published>2020-10-01T02:00:00.000Z</published>
    <updated>2020-10-16T10:41:43.974Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>5G覆盖指标定义</p><p>覆盖率</p><p>覆盖优化整体流程</p><p>NR覆盖类问题及优化方案</p><a id="more"></a><h1 id="5G覆盖指标定义"><a href="#5G覆盖指标定义" class="headerlink" title="5G覆盖指标定义"></a>5G覆盖指标定义</h1><h2 id="广播信道"><a href="#广播信道" class="headerlink" title="广播信道"></a>广播信道</h2><p><font color=Fuchsia>SS参考信号接收功率(SS-RSRP) </font>:测量频段带宽上承载辅同步信号(SS) 的资源单元接收功率贡献的线性平均值;</p><p><font color=Fuchsia>SS信噪比和干扰比(SS SINR)</font>定义为”携带辅同步信号的资源单元的功率贡献的线性平均值”除以”在相同频率带宽内承载辅同步信号的资源单元的噪声和干扰功率的线性平均值”;</p><h2 id="业务信道"><a href="#业务信道" class="headerlink" title="业务信道"></a>业务信道</h2><p><font color=Fuchsia>CSI参考信号接收功率(CSI-RSRP) </font>被定义为在所配置的CSI中在所考虑的测量频率带宽内承载用于RSRP测量的CSI参考信号的资源单元的功率贡献上的线性平均值;</p><p><font color=Fuchsia>CSI信噪比和干扰比(CSI-SINR) </font>被定义为”携带CSI参考信号的资源单元的功率贡献的线性平均值”除以”携带CSI参考信号的资源单元在相同频率带宽内的参考信号的噪声和干扰功率的线性平均值”。</p><h1 id="覆盖率"><a href="#覆盖率" class="headerlink" title="覆盖率"></a>覆盖率</h1><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009080953462.png" alt=""></p><h1 id="NR和LTE的覆盖相关差异"><a href="#NR和LTE的覆盖相关差异" class="headerlink" title="NR和LTE的覆盖相关差异"></a>NR和LTE的覆盖相关差异</h1><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009081519659.png" alt=""></p><h1 id="NR覆盖优化基础"><a href="#NR覆盖优化基础" class="headerlink" title="NR覆盖优化基础"></a>NR覆盖优化基础</h1><h2 id="覆盖优化的原则"><a href="#覆盖优化的原则" class="headerlink" title="覆盖优化的原则"></a>覆盖优化的原则</h2><ol><li>先优化SS-RSRP，后优化SS-SINR</li><li>覆盖优化的两大关键任务：消除弱覆盖（保证SS-RSRP）；净化切换带、消除交叉覆盖</li><li>优先优化弱覆盖、越区覆盖、再优化重叠覆盖</li><li>优先调整天线的下倾角、方位角、天线挂高和迁站及加站，最后考虑调整RS的发射功率和波束管理相关参数以及天线权值</li></ol><h1 id="覆盖优化整体流程"><a href="#覆盖优化整体流程" class="headerlink" title="覆盖优化整体流程"></a>覆盖优化整体流程</h1><h2 id="覆盖优化的流程"><a href="#覆盖优化的流程" class="headerlink" title="覆盖优化的流程"></a>覆盖优化的流程</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009082637909.png" alt=""></p><p><kbd>数据采集</kbd>：通过不同的数据采集系统进行覆盖相关数据采集</p><p><kbd>数据分析</kbd>：结合采集结果对数据进行综合分析，确定指标情况</p><p><kbd>原因分析</kbd>：对存在覆盖问题的小区进行分析，并确定原因</p><p><kbd>方案制定</kbd>：基于覆盖问题的原因，制定覆盖优化方案</p><p><kbd>方案实施</kbd>：方案实施，并进行方案实施前后的评估</p><h2 id="数据采集"><a href="#数据采集" class="headerlink" title="数据采集"></a>数据采集</h2><p>覆盖指标的来源有哪些？</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009083312711.png" alt=""></p><h2 id="覆盖评估"><a href="#覆盖评估" class="headerlink" title="覆盖评估"></a>覆盖评估</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009083534560.png" alt=""></p><h2 id="覆盖类问题分析"><a href="#覆盖类问题分析" class="headerlink" title="覆盖类问题分析"></a>覆盖类问题分析</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009083722471.png" alt=""></p><h2 id="覆盖问题原因"><a href="#覆盖问题原因" class="headerlink" title="覆盖问题原因"></a>覆盖问题原因</h2><ol><li>故障问题</li><li>环境变化</li><li>新的需求</li><li>规划问题</li><li>施工问题</li><li>参数问题</li></ol><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009083850079.png" alt=""></p><h3 id="故障问题"><a href="#故障问题" class="headerlink" title="故障问题"></a>故障问题</h3><p>设备问题是指由于基站设备出现故障，导致无法提供服务，从而引起覆盖问题，一般表现为扫频仪或中断检测不到信号、信号弱等：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009084029375.png" alt=""></p><h3 id="规划问题"><a href="#规划问题" class="headerlink" title="规划问题"></a>规划问题</h3><p>规划问题也是影响覆盖问题的主要原因，规划偏差小的话可以通过优化解决，如果规划偏差大只能考虑新增站点，耗时耗力：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009084421397.png" alt=""></p><h3 id="施工问题"><a href="#施工问题" class="headerlink" title="施工问题"></a>施工问题</h3><p>施工问题，主要指在施工过程中没按照规划方案进行，如实际建设位置和规划位置有偏差、天馈基础参数设置和规划存在偏差等：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009084831423.png" alt=""></p><h3 id="参数问题"><a href="#参数问题" class="headerlink" title="参数问题"></a>参数问题</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009085032588.png" alt=""></p><h3 id="无线环境"><a href="#无线环境" class="headerlink" title="无线环境"></a>无线环境</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009085143805.png" alt=""></p><h3 id="新增需求"><a href="#新增需求" class="headerlink" title="新增需求"></a>新增需求</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009085424820.png" alt=""></p><h2 id="覆盖优化的方案"><a href="#覆盖优化的方案" class="headerlink" title="覆盖优化的方案"></a>覆盖优化的方案</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009085604425.png" alt=""></p><h1 id="NR覆盖类问题及优化分析"><a href="#NR覆盖类问题及优化分析" class="headerlink" title="NR覆盖类问题及优化分析"></a>NR覆盖类问题及优化分析</h1><h2 id="覆盖类问题概述"><a href="#覆盖类问题概述" class="headerlink" title="覆盖类问题概述"></a>覆盖类问题概述</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009085809348.png" alt=""></p><h2 id="弱覆盖问题分析"><a href="#弱覆盖问题分析" class="headerlink" title="弱覆盖问题分析"></a>弱覆盖问题分析</h2><p>指标定义：弱覆盖是指在连片站点中间出现的完全没有NR信号的区域</p><p>UE终端的灵敏度一般为-124dBm，考虑部分商用终端与测试终端灵敏度的差异，预留5dB余量，覆盖空洞定义为RSRP ＜ -119dBm的区域。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009090145488.png" alt=""></p><h2 id="弱覆盖原因及优化方案"><a href="#弱覆盖原因及优化方案" class="headerlink" title="弱覆盖原因及优化方案"></a>弱覆盖原因及优化方案</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009090219993.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009090355034.png" alt=""></p><h2 id="越区覆盖定义"><a href="#越区覆盖定义" class="headerlink" title="越区覆盖定义"></a>越区覆盖定义</h2><p>所谓孤岛效应就是在无线通信系统中，因为复杂的无线环境，无线信号经过山脉、建筑物、以及大气层的发射、折射，或基站安装位置过高，以及波导效应等原因,弓|起在远离本小区覆盖的区域外形成-个强场区域，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009090536376.png" alt=""></p><h2 id="越区覆盖影响"><a href="#越区覆盖影响" class="headerlink" title="越区覆盖影响"></a>越区覆盖影响</h2><p>由于这个区域超出其实际覆盖范围，往往这一-区域没有和周围小区配备邻区关系，形成孤岛，对A小区产生干扰，或在孤岛区域起呼的UE无法切换到A小区，产生掉话。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009090803666.png" alt=""></p><h2 id="越区覆盖原因及优化措施"><a href="#越区覆盖原因及优化措施" class="headerlink" title="越区覆盖原因及优化措施"></a>越区覆盖原因及优化措施</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009090849864.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009090956637.png" alt=""></p><blockquote><p><strong>临时规避措施</strong>：增加越区覆盖小区和主覆盖小区的单项邻区关系</p></blockquote><h2 id="重叠覆盖问题分析"><a href="#重叠覆盖问题分析" class="headerlink" title="重叠覆盖问题分析"></a>重叠覆盖问题分析</h2><p><font color=red><strong>强导频</strong></font>：RSRP ＞ -90dBm</p><p><font color=red><strong>过多</strong></font>：RSRP_number ≥ N，设定N=4</p><p><font color=red><strong>无足够强主导频</strong></font>：最强信号和第（N）个强信号强度的差值如果小于某一门限值D，即定义为该地点没有足够强主导频，RSRP(fist) －RSRP(N) ≤ D，设定D为-6dB</p><p><font color=red><strong>判断NR网络中的某点存在重叠覆盖的条件是</strong></font>：RSRP ＞ -90dB的小区个数大于等于4个；RSRP(fist) －RSRP(4) ≤ 6dB。当上述两个条件都满足时，即为重叠覆盖。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009091712704.png" alt=""></p><h2 id="重叠覆盖的影响及原因分析"><a href="#重叠覆盖的影响及原因分析" class="headerlink" title="重叠覆盖的影响及原因分析"></a>重叠覆盖的影响及原因分析</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009091827593.png" alt=""></p><h2 id="重叠覆盖问题优化思路"><a href="#重叠覆盖问题优化思路" class="headerlink" title="重叠覆盖问题优化思路"></a>重叠覆盖问题优化思路</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009091902716.png" alt=""></p><h2 id="覆盖不均衡"><a href="#覆盖不均衡" class="headerlink" title="覆盖不均衡"></a>覆盖不均衡</h2><p>上下行覆盖不平衡:指目标覆盖区域内，上下行对称业务出现下行覆盖良好而上行覆盖受限或上行覆盖良好而下行覆盖受限的情况：</p><blockquote><p>上下行不平衡一-般是指下行覆盖大于上行覆盖，在只有下行覆盖的区域，当用户因为检测到了基站信号，想要接入或者切换时，因为上行达不到覆盖要求，也就是手机以最大功率发射基站也收不到，就会造成接入失败或切换失败。另外如果上行覆盖是连续的，那么下行信号因为覆盖大于.上行，会对邻区造成干扰。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009092135465.png" alt=""></p><blockquote><p><font color=red>影响：上行覆盖不均衡常见表现为有信号但数据业务体验差，容易出现掉话、单通等感知类问题。</font></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009092413897.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/image-20201009092540732.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;5G覆盖指标定义&lt;/p&gt;
&lt;p&gt;覆盖率&lt;/p&gt;
&lt;p&gt;覆盖优化整体流程&lt;/p&gt;
&lt;p&gt;NR覆盖类问题及优化方案&lt;/p&gt;
    
    </summary>
    
    
      <category term="通信技术" scheme="https://imqinhao.cn/categories/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>系统信息相关命令</title>
    <link href="https://imqinhao.cn/2020/08/13/system_info/"/>
    <id>https://imqinhao.cn/2020/08/13/system_info/</id>
    <published>2020-08-13T12:14:14.000Z</published>
    <updated>2020-08-13T05:49:29.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>本节内容主要是为了方便通过远程终端维护服务器时，查看服务器上当前 <strong>系统日期和时间</strong> ／ <strong>磁盘空间占用情况</strong> ／ <strong>程序执行情况</strong></li><li>本小结学习的终端命令基本都是查询命令，通过这些命令对系统资源的使用情况有个了解</li></ul><a id="more"></a><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>时间和日期<ul><li><code>date</code></li><li><code>cal</code></li></ul></li><li>磁盘和目录空间<ul><li><code>df</code></li><li><code>du</code></li></ul></li><li>进程信息<ul><li><code>ps</code></li><li><code>top</code></li><li><code>kill</code></li></ul></li></ul><h2 id="01-时间和日期"><a href="#01-时间和日期" class="headerlink" title="01. 时间和日期"></a>01. 时间和日期</h2><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>date</td><td>查看系统时间</td></tr><tr><td>02</td><td>cal</td><td><code>calendar</code> 查看日历，<code>-y</code> 选项可以查看一年的日历</td></tr></tbody></table><h2 id="02-磁盘信息"><a href="#02-磁盘信息" class="headerlink" title="02. 磁盘信息"></a>02. 磁盘信息</h2><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>df -h</td><td><code>disk free</code> 显示磁盘剩余空间</td></tr><tr><td>02</td><td>du -h [目录名]</td><td><code>disk usage</code> 显示目录下的文件大小</td></tr></tbody></table><ul><li>选项说明</li></ul><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-h</td><td>以人性化的方式显示文件大小</td></tr></tbody></table><h2 id="03-进程信息"><a href="#03-进程信息" class="headerlink" title="03. 进程信息"></a>03. 进程信息</h2><ul><li>所谓 <strong>进程</strong>，通俗地说就是 <strong>当前正在执行的一个程序</strong></li></ul><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>ps aux</td><td><code>process status</code> 查看进程的详细状况</td></tr><tr><td>02</td><td>top</td><td>动态显示运行中的进程并且排序</td></tr><tr><td>03</td><td>kill [-9] 进程代号</td><td>终止指定代号的进程，<code>-9</code> 表示强行终止</td></tr></tbody></table><blockquote><p><code>ps</code> 默认只会显示当前用户通过终端启动的应用程序</p></blockquote><ul><li><code>ps</code> 选项说明</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>a</td><td>显示终端上的所有进程，包括其他用户的进程</td></tr><tr><td>u</td><td>显示进程的详细状态</td></tr><tr><td>x</td><td>显示没有控制终端的进程</td></tr></tbody></table><blockquote><p>提示：使用 <code>kill</code> 命令时，最好只终止由当前用户开启的进程，而不要终止 <code>root</code> 身份开启的进程，否则可能导致系统崩溃</p></blockquote><blockquote><ul><li>要退出 <code>top</code> 可以直接输入 <code>q</code></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;本节内容主要是为了方便通过远程终端维护服务器时，查看服务器上当前 &lt;strong&gt;系统日期和时间&lt;/strong&gt; ／ &lt;strong&gt;磁盘空间占用情况&lt;/strong&gt; ／ &lt;strong&gt;程序执行情况&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;本小结学习的终端命令基本都是查询命令，通过这些命令对系统资源的使用情况有个了解&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://imqinhao.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>文件和目录常用命令</title>
    <link href="https://imqinhao.cn/2020/08/13/Files_and_directories/"/>
    <id>https://imqinhao.cn/2020/08/13/Files_and_directories/</id>
    <published>2020-08-13T12:13:14.000Z</published>
    <updated>2020-08-13T05:45:27.553Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>查看目录内容</p><p>切换目录</p><p>创建和删除操作</p><p>拷贝和移动文件</p><p>查看文件内容</p><a id="more"></a><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>查看目录内容<ul><li><code>ls</code></li></ul></li><li>切换目录<ul><li><code>cd</code></li></ul></li><li>创建和删除操作<ul><li><code>touch</code></li><li><code>rm</code></li><li><code>mkdir</code></li></ul></li><li>拷贝和移动文件<ul><li><code>cp</code></li><li><code>mv</code></li></ul></li><li>查看文件内容<ul><li><code>cat</code></li><li><code>more</code></li><li><code>grep</code></li></ul></li><li>其他<ul><li><code>echo</code></li><li>重定向 <code>&gt;</code> 和 <code>&gt;&gt;</code></li><li>管道 <code>|</code></li></ul></li></ul><h2 id="01-查看目录内容"><a href="#01-查看目录内容" class="headerlink" title="01. 查看目录内容"></a>01. 查看目录内容</h2><h3 id="1-1-终端实用技巧"><a href="#1-1-终端实用技巧" class="headerlink" title="1.1 终端实用技巧"></a>1.1 终端实用技巧</h3><h4 id="1-gt-自动补全"><a href="#1-gt-自动补全" class="headerlink" title="1&gt; 自动补全"></a>1&gt; 自动补全</h4><ul><li>在敲出 <code>文件</code>／<code>目录</code>／<code>命令</code> 的前几个字母之后，按下 <code>tab</code> 键<ul><li>如果输入的没有歧义，系统会自动补全</li><li>如果还存在其他 <code>文件</code>／<code>目录</code>／<code>命令</code>，再按一下 <code>tab</code> 键，系统会提示可能存在的命令</li></ul></li></ul><h4 id="2-gt-曾经使用过的命令"><a href="#2-gt-曾经使用过的命令" class="headerlink" title="2&gt; 曾经使用过的命令"></a>2&gt; 曾经使用过的命令</h4><ul><li>按 <code>上</code>／<code>下</code> 光标键可以在曾经使用过的命令之间来回切换</li><li>如果想要退出选择，并且不想执行当前选中的命令，可以按 <code>ctrl + c</code></li></ul><h3 id="1-2-ls-命令说明"><a href="#1-2-ls-命令说明" class="headerlink" title="1.2 ls 命令说明"></a>1.2 <code>ls</code> 命令说明</h3><ul><li><code>ls</code> 是英文单词 <strong>list</strong> 的简写，其功能为列出目录的内容，是用户最常用的命令之一，类似于 <strong>DOS</strong> 下的 <code>dir</code> 命令</li></ul><h4 id="Linux-下文件和目录的特点"><a href="#Linux-下文件和目录的特点" class="headerlink" title="Linux 下文件和目录的特点"></a>Linux 下文件和目录的特点</h4><ul><li>Linux <strong>文件</strong> 或者 <strong>目录</strong> 名称最长可以有 <code>256</code> 个字符</li><li>以 <code>.</code> 开头的文件为隐藏文件，需要用 -a 参数才能显示</li><li><strong>.</strong> 代表当前目录</li><li><strong>..</strong> 代表上一级目录</li></ul><h3 id="1-3-ls-常用选项"><a href="#1-3-ls-常用选项" class="headerlink" title="1.3 ls 常用选项"></a>1.3 ls 常用选项</h3><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>显示指定目录下所有子目录与文件，包括隐藏文件</td></tr><tr><td>-l</td><td>以列表方式显示文件的详细信息</td></tr><tr><td>-h</td><td>配合 -l 以人性化的方式显示文件大小</td></tr></tbody></table><h4 id="计算机中文件大小的表示方式（科普）"><a href="#计算机中文件大小的表示方式（科普）" class="headerlink" title="计算机中文件大小的表示方式（科普）"></a>计算机中文件大小的表示方式（科普）</h4><table><thead><tr><th>单位</th><th>英文</th><th>含义</th></tr></thead><tbody><tr><td>字节</td><td>B（Byte）</td><td>在计算机中作为一个数字单元，一般为 8 位二进制数</td></tr><tr><td>千</td><td>K（Kibibyte）</td><td>1 KB = 1024 B，千字节 （1024 = 2 ** 10）</td></tr><tr><td>兆</td><td>M（Mebibyte）</td><td>1 MB = 1024 KB，百万字节</td></tr><tr><td>千兆</td><td>G（Gigabyte）</td><td>1 GB = 1024 MB，十亿字节，千兆字节</td></tr><tr><td>太</td><td>T（Terabyte）</td><td>1 TB = 1024 GB，万亿字节，太字节</td></tr><tr><td>拍</td><td>P（Petabyte）</td><td>1 PB = 1024 TB，千万亿字节，拍字节</td></tr><tr><td>艾</td><td>E（Exabyte）</td><td>1 EB = 1024 PB，百亿亿字节，艾字节</td></tr><tr><td>泽</td><td>Z（Zettabyte）</td><td>1 ZB = 1024 EB，十万亿亿字节，泽字节</td></tr><tr><td>尧</td><td>Y（Yottabyte）</td><td>1 YB = 1024 ZB，一亿亿亿字节，尧字节</td></tr></tbody></table><h3 id="1-4-ls-通配符的使用"><a href="#1-4-ls-通配符的使用" class="headerlink" title="1.4 ls 通配符的使用"></a>1.4 ls 通配符的使用</h3><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>代表任意个数个字符</td></tr><tr><td>?</td><td>代表任意一个字符，至少 1 个</td></tr><tr><td>[]</td><td>表示可以匹配字符组中的任一一个</td></tr><tr><td>[abc]</td><td>匹配 a、b、c 中的任意一个</td></tr><tr><td>[a-f]</td><td>匹配从 a 到 f 范围内的的任意一个字符</td></tr></tbody></table><h2 id="02-切换目录"><a href="#02-切换目录" class="headerlink" title="02. 切换目录"></a>02. 切换目录</h2><h3 id="2-1-cd"><a href="#2-1-cd" class="headerlink" title="2.1 cd"></a>2.1 <code>cd</code></h3><ul><li><code>cd</code> 是英文单词 <strong>change directory</strong> 的简写，其功能为更改当前的工作目录，也是用户最常用的命令之一</li></ul><blockquote><p>注意：Linux 所有的 <strong>目录</strong> 和 <strong>文件名</strong> 都是大小写敏感的</p></blockquote><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>cd</td><td>切换到当前用户的主目录(/home/用户目录)</td></tr><tr><td>cd ~</td><td>切换到当前用户的主目录(/home/用户目录)</td></tr><tr><td>cd .</td><td>保持在当前目录不变</td></tr><tr><td>cd ..</td><td>切换到上级目录</td></tr><tr><td>cd -</td><td>可以在最近两次工作目录之间来回切换</td></tr></tbody></table><h3 id="2-2-相对路径和绝对路径"><a href="#2-2-相对路径和绝对路径" class="headerlink" title="2.2 相对路径和绝对路径"></a>2.2 相对路径和绝对路径</h3><ul><li><strong>相对路径</strong> 在输入路径时，最前面不是 <strong>/</strong> 或者 <strong>~</strong>，表示相对 <strong>当前目录</strong> 所在的目录位置</li><li><strong>绝对路径</strong> 在输入路径时，最前面是 <strong>/</strong> 或者 <strong>~</strong>，表示从 <strong>根目录/家目录</strong> 开始的具体目录位置</li></ul><h2 id="03-创建和删除操作"><a href="#03-创建和删除操作" class="headerlink" title="03. 创建和删除操作"></a>03. 创建和删除操作</h2><h3 id="3-1-touch"><a href="#3-1-touch" class="headerlink" title="3.1 touch"></a>3.1 <code>touch</code></h3><ul><li>创建文件或修改文件时间<ul><li>如果文件 <strong>不存在</strong>，可以创建一个空白文件</li><li>如果文件 <strong>已经存在</strong>，可以修改文件的末次修改日期</li></ul></li></ul><h3 id="3-2-mkdir"><a href="#3-2-mkdir" class="headerlink" title="3.2 mkdir"></a>3.2 <code>mkdir</code></h3><ul><li>创建一个新的目录</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-p</td><td>可以递归创建目录</td></tr></tbody></table><blockquote><p><strong>新建目录的名称</strong> 不能与当前目录中 <strong>已有的目录或文件</strong> 同名</p></blockquote><h3 id="3-3-rm"><a href="#3-3-rm" class="headerlink" title="3.3 rm"></a>3.3 <code>rm</code></h3><ul><li>删除文件或目录</li></ul><blockquote><p>使用 <code>rm</code> 命令要小心，因为文件删除后不能恢复</p></blockquote><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>强制删除，忽略不存在的文件，无需提示</td></tr><tr><td>-r</td><td>递归地删除目录下的内容，<strong>删除文件夹</strong> 时必须加此参数</td></tr></tbody></table><h2 id="04-拷贝和移动文件"><a href="#04-拷贝和移动文件" class="headerlink" title="04. 拷贝和移动文件"></a>04. 拷贝和移动文件</h2><table><thead><tr><th>序号</th><th>命令</th><th>对应英文</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>tree [目录名]</td><td>tree</td><td>以树状图列出文件目录结构</td></tr><tr><td>02</td><td>cp 源文件 目标文件</td><td>copy</td><td>复制文件或者目录</td></tr><tr><td>03</td><td>mv 源文件 目标文件</td><td>move</td><td>移动文件或者目录／文件或者目录重命名</td></tr></tbody></table><h3 id="4-1-tree"><a href="#4-1-tree" class="headerlink" title="4.1 tree"></a>4.1 <code>tree</code></h3><ul><li><code>tree</code> 命令可以以树状图列出文件目录结构</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-d</td><td>只显示目录</td></tr></tbody></table><h3 id="4-2-cp"><a href="#4-2-cp" class="headerlink" title="4.2 cp"></a>4.2 <code>cp</code></h3><ul><li><code>cp</code> 命令的功能是将给出的 <strong>文件</strong> 或 <strong>目录</strong> 复制到另一个 <strong>文件</strong> 或 <strong>目录</strong> 中，相当于 <strong>DOS</strong> 下的 <code>copy</code> 命令</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-i</td><td>覆盖文件前提示</td></tr><tr><td>-r</td><td>若给出的源文件是目录文件，则 cp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td></tr></tbody></table><h3 id="4-3-mv"><a href="#4-3-mv" class="headerlink" title="4.3 mv"></a>4.3 <code>mv</code></h3><ul><li><code>mv</code> 命令可以用来 <strong>移动</strong> <strong>文件</strong> 或 <strong>目录</strong>，也可以给 <strong>文件或目录重命名</strong></li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-i</td><td>覆盖文件前提示</td></tr></tbody></table><h2 id="05-查看文件内容"><a href="#05-查看文件内容" class="headerlink" title="05. 查看文件内容"></a>05. 查看文件内容</h2><table><thead><tr><th>序号</th><th>命令</th><th>对应英文</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>cat 文件名</td><td>concatenate</td><td>查看文件内容、创建文件、文件合并、追加文件内容等功能</td></tr><tr><td>02</td><td>more 文件名</td><td>more</td><td>分屏显示文件内容</td></tr><tr><td>03</td><td>grep 搜索文本 文件名</td><td>grep</td><td>搜索文本文件内容</td></tr></tbody></table><h3 id="5-1-cat"><a href="#5-1-cat" class="headerlink" title="5.1 cat"></a>5.1 <code>cat</code></h3><ul><li><code>cat</code> 命令可以用来 <strong>查看文件内容</strong>、<strong>创建文件</strong>、<strong>文件合并</strong>、<strong>追加文件内容</strong> 等功能</li><li><code>cat</code> 会一次显示所有的内容，适合 <strong>查看内容较少</strong> 的文本文件</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-b</td><td>对非空输出行编号</td></tr><tr><td>-n</td><td>对输出的所有行编号</td></tr></tbody></table><blockquote><p>Linux 中还有一个 <code>nl</code> 的命令和 <code>cat -b</code> 的效果等价</p></blockquote><h3 id="5-2-more"><a href="#5-2-more" class="headerlink" title="5.2 more"></a>5.2 <code>more</code></h3><ul><li><code>more</code> 命令可以用于分屏显示文件内容，每次只显示一页内容</li><li>适合于 <strong>查看内容较多</strong>的文本文件</li></ul><p>使用 <code>more</code> 的操作键：</p><table><thead><tr><th>操作键</th><th>功能</th></tr></thead><tbody><tr><td>空格键</td><td>显示手册页的下一屏</td></tr><tr><td>Enter 键</td><td>一次滚动手册页的一行</td></tr><tr><td>b</td><td>回滚一屏</td></tr><tr><td>f</td><td>前滚一屏</td></tr><tr><td>q</td><td>退出</td></tr><tr><td>/word</td><td>搜索 <strong>word</strong> 字符串</td></tr></tbody></table><h3 id="5-3-grep"><a href="#5-3-grep" class="headerlink" title="5.3 grep"></a>5.3 <code>grep</code></h3><ul><li>Linux 系统中 <code>grep</code> 命令是一种强大的文本搜索工具</li><li><code>grep</code>允许对文本文件进行 <strong>模式</strong>查找，所谓模式查找，又被称为正则表达式，在就业班会详细讲解</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>显示匹配行及行号</td></tr><tr><td>-v</td><td>显示不包含匹配文本的所有行（相当于求反）</td></tr><tr><td>-i</td><td>忽略大小写</td></tr></tbody></table><ul><li>常用的两种模式查找</li></ul><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>^a</td><td>行首，搜寻以 <strong>a</strong> 开头的行</td></tr><tr><td>ke$</td><td>行尾，搜寻以 <strong>ke</strong> 结束的行</td></tr></tbody></table><h2 id="06-其他"><a href="#06-其他" class="headerlink" title="06. 其他"></a>06. 其他</h2><h3 id="6-1-echo-文字内容"><a href="#6-1-echo-文字内容" class="headerlink" title="6.1 echo 文字内容"></a>6.1 <code>echo 文字内容</code></h3><ul><li><code>echo</code> 会在终端中显示参数指定的文字，通常会和 <strong>重定向</strong> 联合使用</li></ul><h3 id="6-2-重定向-gt-和-gt-gt"><a href="#6-2-重定向-gt-和-gt-gt" class="headerlink" title="6.2 重定向 &gt; 和 &gt;&gt;"></a>6.2 重定向 <code>&gt;</code> 和 <code>&gt;&gt;</code></h3><ul><li>Linux 允许将命令执行结果 <strong>重定向</strong>到一个 <strong>文件</strong></li><li>将本应显示在<strong>终端上的内容</strong> <strong>输出／追加</strong> 到<strong>指定文件中</strong></li></ul><p>其中</p><ul><li><code>&gt;</code> 表示输出，会覆盖文件原有的内容</li><li><code>&gt;&gt;</code> 表示追加，会将内容追加到已有文件的末尾</li></ul><h3 id="6-3-管道"><a href="#6-3-管道" class="headerlink" title="6.3 管道 |"></a>6.3 管道 <code>|</code></h3><ul><li>Linux 允许将 <strong>一个命令的输出</strong> 可以<strong>通过管道</strong> 做为 <strong>另一个命令的输入</strong></li><li>可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里 <code>|</code> 的左右分为两端，左端塞东西（写），右端取东西（读）</li></ul><p>常用的管道命令有：</p><ul><li><code>more</code>：分屏显示内容</li><li><code>grep</code>：在命令执行结果的基础上查询指定的文本</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;查看目录内容&lt;/p&gt;
&lt;p&gt;切换目录&lt;/p&gt;
&lt;p&gt;创建和删除操作&lt;/p&gt;
&lt;p&gt;拷贝和移动文件&lt;/p&gt;
&lt;p&gt;查看文件内容&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://imqinhao.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机网络学习1</title>
    <link href="https://imqinhao.cn/2020/07/17/computer_Internet_1/"/>
    <id>https://imqinhao.cn/2020/07/17/computer_Internet_1/</id>
    <published>2020-07-17T10:25:00.000Z</published>
    <updated>2020-07-17T10:22:05.825Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>学习笔记，包含以下内容：</p><ul><li>网络、互联网（互连网）和因特网</li><li>三种交换方式</li><li>计算机网络的性能指标</li></ul><a id="more"></a><h2 id="网络、互联网（互联网）和因特网"><a href="#网络、互联网（互联网）和因特网" class="headerlink" title="网络、互联网（互联网）和因特网"></a>网络、互联网（互联网）和因特网</h2><p>网络（Network）由若干<span class='p red'>结点</span>（Node）和连接这些节点的<span class='p red'>链路</span>（Link）组成。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717162104.png" alt=""></p><p>多个网络还可以通过路由器互连起来，这样就构成了一个覆盖范围更大的网络，即互联网（或互连网）。因此，互连网是“<span class='p red'>网络中的网络</span>（Network  of  Network）”</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717162555.png" alt=""></p><p>因特网（Internet）是世界上最大的互联网络（用户数以亿计，互连的网络数以百万计）</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717162750.png" alt=""></p><h3 id="Internet与internet的区别"><a href="#Internet与internet的区别" class="headerlink" title="Internet与internet的区别"></a>Internet与internet的区别</h3><blockquote><p><kbd>internet</kbd>（互联网或互连网）是一个<kbd>通用名词</kbd>，它泛指<kbd>由多个计算机网络互连而成的网络</kbd>。在这些网络之间的<kbd>通信协议</kbd>可以是<kbd>任意</kbd>的。</p></blockquote><blockquote><p><kbd>Internet</kbd>（因特网）则是一个<kbd>专用名词</kbd>，它指当前<kbd>全球最大的、开放的、由众多网络相互连接而成的特定计算机网络</kbd>，它采用<kbd>TCP/IP协议</kbd>族作为通信的规则，其前身是美国的ARPANET。</p></blockquote><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><p><kbd>ISP</kbd>：因特网服务提供者</p><h3 id="因特网的组成"><a href="#因特网的组成" class="headerlink" title="因特网的组成"></a>因特网的组成</h3><p>① 边缘部分：由所有连接在因特网上的主机组成。</p><p>② 核心部分：由大量的网络和连接这些网络的路由器组成。</p><h2 id="电路交换、分组交换和报文交换"><a href="#电路交换、分组交换和报文交换" class="headerlink" title="电路交换、分组交换和报文交换"></a>电路交换、分组交换和报文交换</h2><h3 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h3><blockquote><p>电话交换机接通电话线的方式称为电路交换。</p></blockquote><blockquote><p>从通信资源的分配角度来看，交换（Switching）就是按照某种方式动态地分配传输线路的资源。</p></blockquote><blockquote><p>电路交换的三个步骤：</p><ol><li>建立连接（分配通信资源）</li><li>通话（一直占用通信资源）</li><li>释放连接（归还通信资源）</li></ol></blockquote><p>当使用电路交换来传送计算机数据时，其线路的传输效率往往很低。</p><h3 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180739.png" alt="image-20200717165117099"></p><h3 id="三种交换方式的对比"><a href="#三种交换方式的对比" class="headerlink" title="三种交换方式的对比"></a>三种交换方式的对比</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180740.png" alt="image-20200717165207537"></p><h2 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h2><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180741.png" alt="image-20200717165735699"></p><p>计算题：有一个待发送的数据块，大小为100MB，网卡的发送速率为100Mbps，则网卡发送完该数据块需要多长时间？</p><p>$$\frac{100MB}{100Mb/s} = \frac{MB}{Mb/s} = \frac{2^{20}·8 b }{10^{6}b/s} ≈ 8.4s$$</p><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200717180742.png" alt="image-20200717171145414"></p><blockquote><p>一条通信线路的“频带宽度”越宽，其所传输数据的“最高数据率”也越高。</p></blockquote><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><blockquote><p>吞吐量表示在单位时间内通过某个网络（或信道、接口）的数据量。</p></blockquote><blockquote><p>吞吐量被经常用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络。</p></blockquote><blockquote><p>吞吐量受<kbd>网络的带宽</kbd>或<kbd>额定速率</kbd>的限制。</p></blockquote><h3 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h3><blockquote><p>发送时延 ： $$  \frac{分组长度(b)}{发送速率(b/s)} $$ ，与网卡的发送速率、信道带宽、接口速率都有关。</p></blockquote><blockquote><p>传播时延： $$ \frac{信道长度(m)}{电磁波传播速率(m/s)} $$ </p></blockquote><blockquote><p>处理时延： 路由器接收数据后，对数据进行存储转发所消耗的时间。</p></blockquote><p>计算题： 数据块长度为100MB，信道带宽为1 Mb/s，传送距离为1000 km，计算<kbd>发送时延</kbd>和<kbd>传播时延</kbd>。</p><p>$$ 发送时延 = \frac{分组长度(b)}{发送速率(b/s)} = \frac{100 × 2^{20} × 8(b)}{10^6(b/s)} = 838.8608s $$</p><p>$$  传播时延 = \frac{信道长度(m)}{电磁波传播速率(m/s)} = \frac{1000 × 10^3(m)}{2 × 10^8(m/s)} = 0.005s $$</p><h3 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h3><p>$$  时延带宽积 = 传播时延 × 带宽 $$</p><h3 id="往返时间"><a href="#往返时间" class="headerlink" title="往返时间"></a>往返时间</h3><blockquote><p>在很多情况下，因特网上的信息不仅仅单方向传输，而是双向交互。因此，往返时间RTT（Round-Trip  Time）也是一个重要指标。</p></blockquote><h3 id="利用率"><a href="#利用率" class="headerlink" title="利用率"></a>利用率</h3><blockquote><p><kbd>信道利用率</kbd> ： 用来表示某信道有百分之几的时间是被利用的（有数据通过）。</p><p><kbd>网络利用率</kbd> ： 全网络的信道利用率的加权平均。</p></blockquote><p>根据排队论，当某信道的利用率增大时，该信道引起的时延也会迅速增加。因此，信道的利用率并非越高越好。</p><p>如果令$$ D_0 $$ 表示网络空闲时的时延，D表示网络当前的时延，那么在适当的假定条件下，可以用下面的简单公式来表示D、$$ D_0 $$ 和利用率U之间的关系：</p><p>$$ D = \frac{D_0}{1 - U}  $$</p><ul><li>当网络的利用率达到 50% 的时候，时延就要加倍。</li><li>当网络的利用率超过 50% 的时候，时延急剧增大。</li><li>当网络的利用率接近 100% 的时候，时延就趋近于无穷大。</li><li>因此，一些拥有较大主干网的ISP通常会控制他们的信道利用率不超过 50% 。如果超过了，就要准备扩容，增大线路的带宽。</li><li>也不能使信道利用率太低，这会使宝贵的通信资源被白白浪费。应该使用一些机制，可以根据情况动态调整输入到网络中的通信量，使网络利用率保持在一个合理的范围内。</li></ul><h3 id="丢包率"><a href="#丢包率" class="headerlink" title="丢包率"></a>丢包率</h3><blockquote><p>丢包率即分组丢失率，是指在一定的时间范围内，传输过程中丢失的分组数量与总分组数量的比率。</p></blockquote><blockquote><p>丢包率具体可分为接口丢失率、结点丢包率、链路丢包率、路径丢包率、网络丢包率等。</p></blockquote><blockquote><p>丢包率是网络运维人员非常关心的一个网络性能指标，但对于普通用户来说往往并不关心这个指标，因为他们通常意识不到网络丢包。</p></blockquote><blockquote><p>分组丢失主要有两种情况：</p><ul><li>分组在传输过程中出现误码，被结点丢弃</li><li>分组到达一台队列已满的分组交换机时被丢弃，在通信量较大时就可能造成网络拥塞。</li></ul></blockquote><blockquote><p>丢包率反映了网络的拥塞情况：</p><ul><li>无拥塞时路径丢包率为0</li><li>轻度拥塞时路径丢包率为1% ~ 4%</li><li>严重拥塞时路径丢包率为5% ~ 15%</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习笔记，包含以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络、互联网（互连网）和因特网&lt;/li&gt;
&lt;li&gt;三种交换方式&lt;/li&gt;
&lt;li&gt;计算机网络的性能指标&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://imqinhao.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>Python基础之变量进阶</title>
    <link href="https://imqinhao.cn/2020/07/07/Python_variable/"/>
    <id>https://imqinhao.cn/2020/07/07/Python_variable/</id>
    <published>2020-07-07T10:30:11.000Z</published>
    <updated>2020-07-07T10:54:59.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>变量的引用</li><li>可变和不可变类型</li><li>局部变量和全局变量</li></ul><a id="more"></a><h2 id="01-变量的引用"><a href="#01-变量的引用" class="headerlink" title="01. 变量的引用"></a>01. 变量的引用</h2><blockquote><ul><li>变量 和 数据 都是保存在 <strong>内存</strong> 中的</li><li>在 <code>Python</code> 中 <strong>函数 的 参数传递</strong> 以及 <strong>返回值</strong> 都是靠 <strong>引用</strong> 传递的</li></ul></blockquote><h3 id="1-1-引用的概念"><a href="#1-1-引用的概念" class="headerlink" title="1.1 引用的概念"></a>1.1 引用的概念</h3><p>在 <code>Python</code> 中</p><ul><li><strong>变量</strong> 和 <strong>数据</strong> 是分开存储的</li><li><strong>数据</strong> 保存在内存中的一个位置</li><li><strong>变量</strong> 中保存着数据在内存中的地址</li><li><strong>变量</strong> 中 <strong>记录数据的地址</strong>，就叫做 <strong>引用</strong></li><li>使用 <code>id()</code> 函数可以查看变量中保存数据所在的 <strong>内存地址</strong></li></ul><blockquote><p>注意：如果变量已经被定义，当给一个变量赋值的时候，本质上是 <strong>修改了数据的引用</strong></p><ul><li>变量 <strong>不再</strong> 对之前的数据引用</li><li>变量 <strong>改为</strong> 对新赋值的数据引用</li></ul></blockquote><h3 id="1-2-变量引用-的示例"><a href="#1-2-变量引用-的示例" class="headerlink" title="1.2 变量引用 的示例"></a>1.2 <code>变量引用</code> 的示例</h3><p>在 <code>Python</code> 中，变量的名字类似于 <strong>便签纸</strong> 贴在 <strong>数据</strong> 上</p><ul><li>定义一个整数变量 <code>a</code>，并且赋值为 <code>1</code></li></ul><table><thead><tr><th align="center">代码</th><th align="center">图示</th></tr></thead><tbody><tr><td align="center">a = 1</td><td align="center"><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183733.png" alt="004_a1tag"></td></tr></tbody></table><ul><li>将变量 <code>a</code> 赋值为 <code>2</code></li></ul><table><thead><tr><th align="center">代码</th><th align="center">图示</th></tr></thead><tbody><tr><td align="center">a = 2</td><td align="center"><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183734.png" alt="005_a2tag">)<img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183735.png" alt="005_1"></td></tr></tbody></table><ul><li>定义一个整数变量 <code>b</code>，并且将变量 <code>a</code> 的值赋值给 <code>b</code></li></ul><table><thead><tr><th align="center">代码</th><th align="center">图示</th></tr></thead><tbody><tr><td align="center">b = a</td><td align="center"><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183736.png" alt="006_ab2tag"></td></tr></tbody></table><blockquote><p>变量 <code>b</code> 是第 2 个贴在数字 <code>2</code> 上的标签</p></blockquote><h3 id="1-3-函数的参数和返回值的传递"><a href="#1-3-函数的参数和返回值的传递" class="headerlink" title="1.3 函数的参数和返回值的传递"></a>1.3 函数的参数和返回值的传递</h3><p>在 <code>Python</code> 中，函数的 <strong>实参</strong>/<strong>返回值</strong> 都是是靠 <strong>引用</strong> 来传递来的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(num)</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"%d 在函数内的内存地址是 %x"</span> % (num, id(num)))</span><br><span class="line"></span><br><span class="line">    result = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"返回值 %d 在内存中的地址是 %x"</span> % (result, id(result)))</span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  result</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">print(<span class="string">"调用函数前 内存地址是 %x"</span> % id(a))</span><br><span class="line"></span><br><span class="line">r = test(a)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"调用函数后 实参内存地址是 %x"</span> % id(a))</span><br><span class="line">print(<span class="string">"调用函数后 返回值内存地址是 %x"</span> % id(r))</span><br></pre></td></tr></table></figure><h2 id="02-可变和不可变类型"><a href="#02-可变和不可变类型" class="headerlink" title="02. 可变和不可变类型"></a>02. 可变和不可变类型</h2><ul><li><p><strong>不可变类型</strong>，内存中的数据不允许被修改：</p><ul><li>数字类型 <code>int</code>, <code>bool</code>, <code>float</code>, <code>complex</code>, <code>long(2.x)</code></li><li>字符串 <code>str</code></li><li>元组 <code>tuple</code></li></ul></li><li><p><strong>可变类型</strong>，内存中的数据可以被修改：</p><ul><li>列表 <code>list</code></li><li>字典 <code>dict</code></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">a = <span class="string">"hello"</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">a = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">demo_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">"定义列表后的内存地址 %d"</span> % id(demo_list))</span><br><span class="line"></span><br><span class="line">demo_list.append(<span class="number">999</span>)</span><br><span class="line">demo_list.pop(<span class="number">0</span>)</span><br><span class="line">demo_list.remove(<span class="number">2</span>)</span><br><span class="line">demo_list[<span class="number">0</span>] = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"修改数据后的内存地址 %d"</span> % id(demo_list))</span><br><span class="line"></span><br><span class="line">demo_dict = &#123;<span class="string">"name"</span>: <span class="string">"小明"</span>&#125;</span><br><span class="line"></span><br><span class="line">print(<span class="string">"定义字典后的内存地址 %d"</span> % id(demo_dict))</span><br><span class="line"></span><br><span class="line">demo_dict[<span class="string">"age"</span>] = <span class="number">18</span></span><br><span class="line">demo_dict.pop(<span class="string">"name"</span>)</span><br><span class="line">demo_dict[<span class="string">"name"</span>] = <span class="string">"老王"</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"修改数据后的内存地址 %d"</span> % id(demo_dict))</span><br></pre></td></tr></table></figure><blockquote><p>注意：字典的 <code>key</code> <strong>只能使用不可变类型的数据</strong></p></blockquote><p><strong>注意</strong></p><ol><li><strong>可变类型</strong>的数据变化，是通过 <strong>方法</strong> 来实现的</li><li>如果给一个可变类型的变量，赋值了一个新的数据，<strong>引用会修改</strong><ul><li>变量 <strong>不再</strong> 对之前的数据引用</li><li>变量 <strong>改为</strong> 对新赋值的数据引用</li></ul></li></ol><h3 id="哈希-hash"><a href="#哈希-hash" class="headerlink" title="哈希 (hash)"></a>哈希 <code>(hash)</code></h3><ul><li><code>Python</code> 中内置有一个名字叫做 <code>hash(o)</code> 的函数<ul><li>接收一个 <strong>不可变类型</strong> 的数据作为 <strong>参数</strong></li><li><strong>返回</strong> 结果是一个 <strong>整数</strong></li></ul></li><li><code>哈希</code> 是一种 <strong>算法</strong>，其作用就是提取数据的 <strong>特征码（指纹）</strong><ul><li><strong>相同的内容</strong> 得到 <strong>相同的结果</strong></li><li><strong>不同的内容</strong> 得到 <strong>不同的结果</strong></li></ul></li><li>在 <code>Python</code> 中，设置字典的 <strong>键值对</strong> 时，会首先对 <code>key</code> 进行 <code>hash</code> 已决定如何在内存中保存字典的数据，以方便 <strong>后续</strong> 对字典的操作：<strong>增、删、改、查</strong><ul><li>键值对的 <code>key</code> 必须是不可变类型数据</li><li>键值对的 <code>value</code> 可以是任意类型的数据</li></ul></li></ul><h2 id="03-局部变量和全局变量"><a href="#03-局部变量和全局变量" class="headerlink" title="03. 局部变量和全局变量"></a>03. 局部变量和全局变量</h2><ul><li><strong>局部变量</strong> 是在 <strong>函数内部</strong> 定义的变量，<strong>只能在函数内部使用</strong></li><li><strong>全局变量</strong> 是在 <strong>函数外部定义</strong> 的变量（没有定义在某一个函数内），<strong>所有函数</strong> 内部 <strong>都可以使用这个变量</strong></li></ul><blockquote><p>提示：在其他的开发语言中，大多 <strong>不推荐使用全局变量</strong> —— 可变范围太大，导致程序不好维护！</p></blockquote><h3 id="3-1-局部变量"><a href="#3-1-局部变量" class="headerlink" title="3.1 局部变量"></a>3.1 局部变量</h3><ul><li><strong>局部变量</strong> 是在 <strong>函数内部</strong> 定义的变量，<strong>只能在函数内部使用</strong></li><li>函数执行结束后，<strong>函数内部的局部变量，会被系统回收</strong></li><li>不同的函数，可以定义相同的名字的局部变量，但是 <strong>彼此之间</strong> 不会产生影响</li></ul><h4 id="局部变量的作用"><a href="#局部变量的作用" class="headerlink" title="局部变量的作用"></a>局部变量的作用</h4><ul><li>在函数内部使用，<strong>临时</strong> 保存 <strong>函数内部需要使用的数据</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">    num = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"修改后 %d"</span> % num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    num = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><h4 id="局部变量的生命周期"><a href="#局部变量的生命周期" class="headerlink" title="局部变量的生命周期"></a>局部变量的生命周期</h4><ul><li>所谓 <strong>生命周期</strong> 就是变量从 <strong>被创建</strong> 到 <strong>被系统回收</strong> 的过程</li><li><strong>局部变量</strong> 在 <strong>函数执行时</strong> 才会被创建</li><li><strong>函数执行结束后</strong> 局部变量 <strong>被系统回收</strong></li><li><strong>局部变量在生命周期</strong> 内，可以用来存储 <strong>函数内部临时使用到的数据</strong></li></ul><h3 id="3-2-全局变量"><a href="#3-2-全局变量" class="headerlink" title="3.2 全局变量"></a>3.2 全局变量</h3><ul><li><strong>全局变量</strong> 是在 <strong>函数外部定义</strong> 的变量，所有函数内部都可以使用这个变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个全局变量</span></span><br><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：函数执行时，<strong>需要处理变量时</strong> 会：</p><ol><li><strong>首先</strong> 查找 <strong>函数内部</strong> 是否存在 <strong>指定名称 的局部变量</strong>，<strong>如果有，直接使用</strong></li><li>如果没有，查找 <strong>函数外部</strong> 是否存在 <strong>指定名称 的全局变量</strong>，<strong>如果有，直接使用</strong></li><li>如果还没有，程序报错！</li></ol><h4 id="1-函数不能直接修改-全局变量的引用"><a href="#1-函数不能直接修改-全局变量的引用" class="headerlink" title="1) 函数不能直接修改 全局变量的引用"></a>1) 函数不能直接修改 <code>全局变量的引用</code></h4><ul><li><strong>全局变量</strong> 是在 <strong>函数外部定义</strong> 的变量（没有定义在某一个函数内），<strong>所有函数</strong> 内部 <strong>都可以使用这个变量</strong></li></ul><blockquote><p>提示：在其他的开发语言中，大多 <strong>不推荐使用全局变量</strong> —— 可变范围太大，导致程序不好维护！</p></blockquote><ul><li>在函数内部，可以 <strong>通过全局变量的引用获取对应的数据</strong></li><li>但是，<strong>不允许直接修改全局变量的引用</strong> —— 使用赋值语句修改全局变量的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo1"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 只是定义了一个局部变量，不会修改到全局变量，只是变量名相同而已</span></span><br><span class="line">    num = <span class="number">100</span></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo2"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意：只是在函数内部定义了一个局部变量而已，只是变量名相同 —— 在函数内部不能直接修改全局变量的值</p></blockquote><h4 id="2-在函数内部修改全局变量的值"><a href="#2-在函数内部修改全局变量的值" class="headerlink" title="2) 在函数内部修改全局变量的值"></a>2) 在函数内部修改全局变量的值</h4><ul><li>如果在函数中需要修改全局变量，需要使用 <code>global</code> 进行声明</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo1"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># global 关键字，告诉 Python 解释器 num 是一个全局变量</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="comment"># 只是定义了一个局部变量，不会修改到全局变量，只是变量名相同而已</span></span><br><span class="line">    num = <span class="number">100</span></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"demo2"</span> + <span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">demo1()</span><br><span class="line">demo2()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><h4 id="3-全局变量定义的位置"><a href="#3-全局变量定义的位置" class="headerlink" title="3) 全局变量定义的位置"></a>3) 全局变量定义的位置</h4><ul><li>为了保证所有的函数都能够正确使用到全局变量，应该 <strong>将全局变量定义在其他函数的上方</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"%d"</span> % a)</span><br><span class="line">    print(<span class="string">"%d"</span> % b)</span><br><span class="line">    print(<span class="string">"%d"</span> % c)</span><br><span class="line"></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line">demo()</span><br><span class="line">c = <span class="number">30</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li>由于全局变量 c，是在调用函数之后，才定义的，在执行函数时，变量还没有定义，所以程序会报错！</li></ul><p><strong>代码结构示意图如下</strong></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707183737.png" alt="001_代码结构示意图-w240"></p><h4 id="4-全局变量命名的建议"><a href="#4-全局变量命名的建议" class="headerlink" title="4) 全局变量命名的建议"></a>4) 全局变量命名的建议</h4><ul><li>为了避免局部变量和全局变量出现混淆，在定义全局变量时，有些公司会有一些开发要求，例如：</li><li>全局变量名前应该增加 <code>g_</code> 或者 <code>gl_</code> 的前缀</li></ul><blockquote><p>提示：具体的要求格式，各公司要求可能会有些差异</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;变量的引用&lt;/li&gt;
&lt;li&gt;可变和不可变类型&lt;/li&gt;
&lt;li&gt;局部变量和全局变量&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>综合应用 —— 名片管理系统</title>
    <link href="https://imqinhao.cn/2020/07/07/Python_cards_manage/"/>
    <id>https://imqinhao.cn/2020/07/07/Python_cards_manage/</id>
    <published>2020-07-07T09:20:14.000Z</published>
    <updated>2020-07-07T10:10:57.176Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>综合应用已经学习过的知识点：</p><ul><li><strong>变量</strong></li><li><strong>流程控制</strong></li><li><strong>函数</strong></li><li><strong>模块</strong></li></ul><p>开发 <strong>名片管理系统</strong></p><a id="more"></a><h2 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h2><ul><li><ol><li>程序启动，显示名片管理系统欢迎界面，并显示功能菜单</li></ol></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">**************************************************</span><br><span class="line">欢迎使用【名片管理系统】V1.0</span><br><span class="line"></span><br><span class="line">1. 新建名片</span><br><span class="line">2. 显示全部</span><br><span class="line">3. 查询名片</span><br><span class="line"></span><br><span class="line">0. 退出系统</span><br><span class="line">**************************************************</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>用户用数字选择不同的功能</li></ol></li><li><ol start="3"><li>根据功能选择，执行不同的功能</li></ol></li><li><ol start="4"><li>用户名片需要记录用户的 <strong>姓名</strong>、<strong>电话</strong>、<strong>QQ</strong>、<strong>邮件</strong></li></ol></li><li><ol start="5"><li>如果查询到指定的名片，用户可以选择 <strong>修改</strong> 或者 <strong>删除</strong> 名片</li></ol></li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>框架搭建</li><li>新增名片</li><li>显示所有名片</li><li>查询名片</li><li>查询成功后修改、删除名片</li><li>让 Python 程序能够直接运行</li></ol><h2 id="01-框架搭建"><a href="#01-框架搭建" class="headerlink" title="01. 框架搭建"></a>01. 框架搭建</h2><p><strong>目标</strong></p><ul><li>搭建名片管理系统 <strong>框架结构</strong><ol><li><strong>准备文件</strong>，确定文件名，保证能够 <strong>在需要的位置</strong> 编写代码</li><li>编写 <strong>主运行循环</strong>，实现基本的 <strong>用户输入和判断</strong></li></ol></li></ul><h3 id="1-1-文件准备"><a href="#1-1-文件准备" class="headerlink" title="1.1 文件准备"></a>1.1 文件准备</h3><ol><li>新建 <code>cards_main.py</code> 保存 <strong>主程序功能代码</strong><ul><li>程序的入口</li><li>每一次启动名片管理系统都通过 <code>main</code> 这个文件启动 </li></ul></li><li>新建 <code>cards_tools.py</code> 保存 <strong>所有名片功能函数</strong><ul><li>将对名片的 <strong>新增</strong>、<strong>查询</strong>、<strong>修改</strong>、<strong>删除</strong> 等功能封装在不同的函数中</li></ul></li></ol><h3 id="1-2-编写主运行循环"><a href="#1-2-编写主运行循环" class="headerlink" title="1.2 编写主运行循环"></a>1.2 编写主运行循环</h3><ul><li>在 <code>cards_main</code> 中添加一个 <strong>无限循环</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># TODO(小明) 显示系统菜单</span></span><br><span class="line"></span><br><span class="line">    action = input(<span class="string">"请选择操作功能："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"您选择的操作是：%s"</span> % action)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据用户输入决定后续的操作</span></span><br><span class="line">    <span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入"</span>)</span><br></pre></td></tr></table></figure><h4 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断"></a>字符串判断</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"1"</span> <span class="keyword">or</span> action == <span class="string">"2"</span> <span class="keyword">or</span> action == <span class="string">"3"</span>:</span><br></pre></td></tr></table></figure><ol><li>使用 <code>in</code> 针对 <strong>列表</strong> 判断，避免使用 <code>or</code> 拼接复杂的逻辑条件</li><li>没有使用 <code>int</code> 转换用户输入，可以避免 <strong>一旦用户输入的不是数字</strong>，导致程序运行出错</li></ol><h4 id="pass"><a href="#pass" class="headerlink" title="pass"></a>pass</h4><ul><li><code>pass</code> 就是一个空语句，不做任何事情，一般用做占位语句</li><li>是为了保持程序结构的完整性</li></ul><h4 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h4><ul><li>在开发软件时，如果 <strong>不希望程序执行后</strong> 立即退出</li><li>可以在程序中增加一个 <strong>无限循环</strong></li><li><strong>由用户来决定</strong> 退出程序的时机</li></ul><h4 id="TODO-注释"><a href="#TODO-注释" class="headerlink" title="TODO 注释"></a>TODO 注释</h4><ul><li>在 <code>#</code> 后跟上 <code>TODO</code>，用于标记需要去做的工作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TODO(作者/邮件) 显示系统菜单</span></span><br></pre></td></tr></table></figure><h3 id="1-3-在-cards-tools-中增加四个新函数"><a href="#1-3-在-cards-tools-中增加四个新函数" class="headerlink" title="1.3 在 cards_tools 中增加四个新函数"></a>1.3 在 <code>cards_tools</code> 中增加四个新函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示菜单</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新建名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：新建名片"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""搜索名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：搜索名片"</span>)</span><br></pre></td></tr></table></figure><h3 id="1-4-导入模块"><a href="#1-4-导入模块" class="headerlink" title="1.4 导入模块"></a>1.4 导入模块</h3><ul><li>在 <code>cards_main.py</code> 中使用 <code>import</code> 导入 <code>cards_tools</code> 模块</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br></pre></td></tr></table></figure><ul><li>修改 <code>while</code> 循环的代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    cards_tools.show_menu()</span><br><span class="line"></span><br><span class="line">    action = input(<span class="string">"请选择操作功能："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"您选择的操作是：%s"</span> % action)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据用户输入决定后续的操作</span></span><br><span class="line">    <span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line">            cards_tools.new_card()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">            cards_tools.show_all()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> action == <span class="string">"3"</span>:</span><br><span class="line">            cards_tools.search_card()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入："</span>)</span><br></pre></td></tr></table></figure><blockquote><p>至此：<code>cards_main</code> 中的所有代码全部开发完毕！</p></blockquote><h3 id="1-5-完成-show-menu-函数"><a href="#1-5-完成-show-menu-函数" class="headerlink" title="1.5 完成 show_menu 函数"></a>1.5 完成 <code>show_menu</code> 函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示菜单</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"欢迎使用【菜单管理系统】V1.0"</span>)</span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"1. 新建名片"</span>)</span><br><span class="line">    print(<span class="string">"2. 显示全部"</span>)</span><br><span class="line">    print(<span class="string">"3. 查询名片"</span>)</span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"0. 退出系统"</span>)</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br></pre></td></tr></table></figure><h2 id="02-保存名片数据的结构"><a href="#02-保存名片数据的结构" class="headerlink" title="02. 保存名片数据的结构"></a>02. 保存名片数据的结构</h2><p><strong>程序就是用来处理数据的，而变量就是用来存储数据的</strong></p><ul><li>使用 <strong>字典</strong> 记录 <strong>每一张名片</strong> 的详细信息</li><li>使用 <strong>列表</strong> 统一记录所有的 <strong>名片字典</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707171312.png" alt="001_名片管理系统全局列表-w500"></p><h3 id="定义名片列表变量"><a href="#定义名片列表变量" class="headerlink" title="定义名片列表变量"></a>定义名片列表变量</h3><ul><li>在 <code>cards_tools</code> 文件的顶部增加一个 <strong>列表变量</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有名片记录的列表</span></span><br><span class="line">card_list = []</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ol><li><strong>所有名片相关操作</strong>，都需要使用这个列表，所以应该 <strong>定义在程序的顶部</strong></li><li><strong>程序刚运行时，没有数据</strong>，所以是 <strong>空列表</strong></li></ol><h2 id="03-新增名片"><a href="#03-新增名片" class="headerlink" title="03. 新增名片"></a>03. 新增名片</h2><h3 id="3-1-功能分析"><a href="#3-1-功能分析" class="headerlink" title="3.1 功能分析"></a>3.1 功能分析</h3><ol><li>提示用户依次输入名片信息</li><li>将名片信息保存到一个字典</li><li>将字典添加到名片列表</li><li>提示名片添加完成</li></ol><h3 id="3-2-实现-new-card-方法"><a href="#3-2-实现-new-card-方法" class="headerlink" title="3.2 实现 new_card 方法"></a>3.2 实现 new_card 方法</h3><ul><li>根据步骤实现代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新建名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：新建名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 提示用户输入名片信息</span></span><br><span class="line">    name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    phone = input(<span class="string">"请输入电话："</span>)</span><br><span class="line">    qq = input(<span class="string">"请输入 QQ 号码："</span>)</span><br><span class="line">    email = input(<span class="string">"请输入邮箱："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 将用户信息保存到一个字典</span></span><br><span class="line">    card_dict = &#123;<span class="string">"name"</span>: name,</span><br><span class="line">                 <span class="string">"phone"</span>: phone,</span><br><span class="line">                 <span class="string">"qq"</span>: qq,</span><br><span class="line">                 <span class="string">"email"</span>: email&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 将用户字典添加到名片列表</span></span><br><span class="line">    card_list.append(card_dict)</span><br><span class="line"></span><br><span class="line">    print(card_list)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 4. 提示添加成功信息</span></span><br><span class="line">    print(<span class="string">"成功添加 %s 的名片"</span> % card_dict[<span class="string">"name"</span>])</span><br></pre></td></tr></table></figure><blockquote><p>技巧：在 <code>PyCharm</code> 中，可以使用 <code>SHIFT + F6</code> 统一修改变量名</p></blockquote><h2 id="04-显示所有名片"><a href="#04-显示所有名片" class="headerlink" title="04. 显示所有名片"></a>04. 显示所有名片</h2><h3 id="4-1-功能分析"><a href="#4-1-功能分析" class="headerlink" title="4.1 功能分析"></a>4.1 功能分析</h3><ul><li>循环遍历名片列表，顺序显示每一个字典的信息</li></ul><h3 id="4-2-基础代码实现"><a href="#4-2-基础代码实现" class="headerlink" title="4.2 基础代码实现"></a>4.2 基础代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        print(card_dict)</span><br></pre></td></tr></table></figure><ul><li>显示效果不好！</li></ul><h3 id="4-3-增加标题和使用-t-显示"><a href="#4-3-增加标题和使用-t-显示" class="headerlink" title="4.3 增加标题和使用 \t 显示"></a>4.3 增加标题和使用 <code>\t</code> 显示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印表头</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> [<span class="string">"姓名"</span>, <span class="string">"电话"</span>, <span class="string">"QQ"</span>, <span class="string">"邮箱"</span>]:</span><br><span class="line">        print(name, end=<span class="string">"\t\t"</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印分隔线</span></span><br><span class="line">    print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s\t\t%s\t\t%s\t\t%s"</span> % (card_dict[<span class="string">"name"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"email"</span>]))</span><br></pre></td></tr></table></figure><h3 id="4-4-增加没有名片记录判断"><a href="#4-4-增加没有名片记录判断" class="headerlink" title="4.4 增加没有名片记录判断"></a>4.4 增加没有名片记录判断</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 判断是否有名片记录</span></span><br><span class="line">    <span class="keyword">if</span> len(card_list) == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"提示：没有任何名片记录"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li>在函数中使用 <code>return</code> 表示返回</li><li>如果在 <code>return</code> 后没有跟任何内容，只是表示该函数执行到此就不再执行后续的代码</li></ul><h2 id="05-查询名片"><a href="#05-查询名片" class="headerlink" title="05. 查询名片"></a>05. 查询名片</h2><h3 id="5-1-功能分析"><a href="#5-1-功能分析" class="headerlink" title="5.1 功能分析"></a>5.1 功能分析</h3><ol><li>提示用户要搜索的姓名</li><li>根据用户输入的姓名遍历列表</li><li>搜索到指定的名片后，再执行后续的操作</li></ol><h3 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h3><ul><li>查询功能实现</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""搜索名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：搜索名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 提示要搜索的姓名</span></span><br><span class="line">    find_name = input(<span class="string">"请输入要搜索的姓名："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 遍历字典</span></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> card_dict[<span class="string">"name"</span>] == find_name:</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"姓名\t\t\t电话\t\t\tQQ\t\t\t邮箱"</span>)</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">40</span>)</span><br><span class="line">            </span><br><span class="line">            print(<span class="string">"%s\t\t\t%s\t\t\t%s\t\t\t%s"</span> % (</span><br><span class="line">                card_dict[<span class="string">"name"</span>],</span><br><span class="line">                card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                card_dict[<span class="string">"email"</span>]))</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">40</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># TODO(小明) 针对找到的字典进行后续操作：修改/删除</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"没有找到 %s"</span> % find_name)</span><br></pre></td></tr></table></figure><ul><li>增加名片操作函数：<strong>修改</strong>/<strong>删除</strong>/<strong>返回主菜单</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_card</span><span class="params">(find_dict)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""操作搜索到的名片字典</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param find_dict:找到的名片字典</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(find_dict)</span><br><span class="line"></span><br><span class="line">    action_str = input(<span class="string">"请选择要执行的操作 "</span></span><br><span class="line">                       <span class="string">"[1] 修改 [2] 删除 [0] 返回上级菜单"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line">        print(<span class="string">"修改"</span>)</span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">        print(<span class="string">"删除"</span>)</span><br></pre></td></tr></table></figure><h2 id="06-修改和删除"><a href="#06-修改和删除" class="headerlink" title="06. 修改和删除"></a>06. 修改和删除</h2><h3 id="6-1-查询成功后删除名片"><a href="#6-1-查询成功后删除名片" class="headerlink" title="6.1 查询成功后删除名片"></a>6.1 查询成功后删除名片</h3><ul><li>由于找到的字典记录已经在列表中保存</li><li>要删除名片记录，只需要把列表中对应的字典删除即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">    card_list.remove(find_dict)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"删除成功"</span>)</span><br></pre></td></tr></table></figure><h3 id="6-2-修改名片"><a href="#6-2-修改名片" class="headerlink" title="6.2 修改名片"></a>6.2 修改名片</h3><ul><li>由于找到的字典记录已经在列表中保存</li><li>要修改名片记录，只需要把列表中对应的字典中每一个键值对的数据修改即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line"></span><br><span class="line">    find_dict[<span class="string">"name"</span>] = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    find_dict[<span class="string">"phone"</span>] = input(<span class="string">"请输入电话："</span>)</span><br><span class="line">    find_dict[<span class="string">"qq"</span>] = input(<span class="string">"请输入QQ："</span>)</span><br><span class="line">    find_dict[<span class="string">"email"</span>] = input(<span class="string">"请输入邮件："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"%s 的名片修改成功"</span> % find_dict[<span class="string">"name"</span>])</span><br></pre></td></tr></table></figure><h4 id="修改名片细化"><a href="#修改名片细化" class="headerlink" title="修改名片细化"></a>修改名片细化</h4><ul><li><strong>如果用户在使用时，某些名片内容并不想修改</strong>，应该如何做呢？—— 既然系统提供的 <code>input</code> 函数不能满足需求，那么就新定义一个函数 <code>input_card_info</code> 对系统的 <code>input</code> 函数进行扩展</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_card_info</span><span class="params">(dict_value, tip_message)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""输入名片信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param dict_value: 字典原有值</span></span><br><span class="line"><span class="string">    :param tip_message: 输入提示信息</span></span><br><span class="line"><span class="string">    :return: 如果输入，返回输入内容，否则返回字典原有值</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 1. 提示用户输入内容</span></span><br><span class="line">    result_str = input(tip_message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 针对用户的输入进行判断，如果用户输入了内容，直接返回结果</span></span><br><span class="line">    <span class="keyword">if</span> len(result_str) &gt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result_str</span><br><span class="line">    <span class="comment"># 3. 如果用户没有输入内容，返回 `字典中原有的值`</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict_value</span><br></pre></td></tr></table></figure><h2 id="07-LINUX-上的-Shebang-符号"><a href="#07-LINUX-上的-Shebang-符号" class="headerlink" title="07. LINUX 上的 Shebang 符号(#!)"></a>07. LINUX 上的 <code>Shebang</code> 符号(<code>#!</code>)</h2><ul><li><code>#!</code>这个符号叫做 <code>Shebang</code> 或者 <code>Sha-bang</code></li><li><code>Shebang</code> 通常在 <code>Unix</code> 系统脚本的中 <strong>第一行开头</strong> 使用</li><li>指明 <strong>执行这个脚本文件</strong> 的 <strong>解释程序</strong></li></ul><h3 id="使用-Shebang-的步骤"><a href="#使用-Shebang-的步骤" class="headerlink" title="使用 Shebang 的步骤"></a>使用 Shebang 的步骤</h3><ul><li><ol><li>使用 <code>which</code> 查询 <code>python3</code> 解释器所在路径</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> python3</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>修改要运行的 <strong>主 python 文件</strong>，在第一行增加以下内容</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br></pre></td></tr></table></figure><ul><li><ol start="3"><li>修改 <strong>主 python 文件</strong> 的文件权限，增加执行权限</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x cards_main.py</span><br></pre></td></tr></table></figure><ul><li><ol start="4"><li>在需要时执行程序即可</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cards_main.py</span><br></pre></td></tr></table></figure><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><h3 id="cards-tools代码"><a href="#cards-tools代码" class="headerlink" title="cards_tools代码"></a>cards_tools代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 记录所有的名片字典</span></span><br><span class="line">card_list = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''显示菜单'''</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"欢迎使用【名片管理系统】 V1.0"</span>)</span><br><span class="line">    print()</span><br><span class="line">    print(<span class="string">"1. 新建名片"</span>)</span><br><span class="line">    print(<span class="string">"2. 显示全部"</span>)</span><br><span class="line">    print(<span class="string">"3. 查询名片"</span>)</span><br><span class="line">    print()</span><br><span class="line">    print(<span class="string">"0. 退出系统"</span>)</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新增名片"""</span></span><br><span class="line">    <span class="comment"># 1.提示用户输入名片的详细信息</span></span><br><span class="line">    name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    phone = input(<span class="string">"请输入手机号："</span>)</span><br><span class="line">    qq = input(<span class="string">"请输入QQ号："</span>)</span><br><span class="line">    email = input(<span class="string">"请输入邮箱："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用用户输入的信息建立一个名片字典</span></span><br><span class="line">    card_dict = &#123;<span class="string">"name"</span>: name,</span><br><span class="line">                 <span class="string">"phone"</span>: phone,</span><br><span class="line">                 <span class="string">"qq"</span>: qq,</span><br><span class="line">                 <span class="string">"email"</span>: email&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将名片字典添加到列表中</span></span><br><span class="line">    card_list.append(card_dict)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提示用户新增成功</span></span><br><span class="line">    print(<span class="string">"添加 &#123;&#125; 的名片成功！"</span>.format(name))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示所有名片"""</span></span><br><span class="line">    <span class="comment"># 显示功能</span></span><br><span class="line">    print(<span class="string">"显示所有名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否存在名片记录</span></span><br><span class="line">    <span class="keyword">if</span> len(card_list) == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"当前没有任何的名片记录，请使用新增功能添加名片！"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 打印表头</span></span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> [<span class="string">"姓名"</span>, <span class="string">"电话"</span>, <span class="string">"QQ"</span>, <span class="string">"邮箱"</span>]:</span><br><span class="line">            print(<span class="string">"&#123;:15&#125;"</span>.format(name), end=<span class="string">" "</span>)</span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印分隔线</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line">        print(<span class="string">"&#123;:15&#125;&#123;:15&#125;&#123;:15&#125;&#123;:15&#125;"</span>.format(card_dict[<span class="string">"name"</span>],</span><br><span class="line">                                            card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                                            card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                                            card_dict[<span class="string">"email"</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""搜索名片"""</span></span><br><span class="line">    <span class="comment"># 显示功能</span></span><br><span class="line">    print(<span class="string">"搜索名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用户输入要搜索的姓名</span></span><br><span class="line">    find_name = input(<span class="string">"请输入要搜索的姓名："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历名片列表</span></span><br><span class="line">    <span class="keyword">for</span> user_info <span class="keyword">in</span> card_list:</span><br><span class="line">        <span class="keyword">if</span> user_info[<span class="string">"name"</span>] == find_name:</span><br><span class="line">            <span class="comment"># 打印表头</span></span><br><span class="line">            <span class="keyword">for</span> name <span class="keyword">in</span> [<span class="string">"姓名"</span>, <span class="string">"电话"</span>, <span class="string">"QQ"</span>, <span class="string">"邮箱"</span>]:</span><br><span class="line">                print(<span class="string">"&#123;:20&#125;"</span>.format(name), end=<span class="string">" "</span>)</span><br><span class="line">            print()</span><br><span class="line">            <span class="comment"># 打印分隔线</span></span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="comment"># 打印名片信息</span></span><br><span class="line">            print(<span class="string">"&#123;:20&#125;&#123;:20&#125;&#123;:20&#125;&#123;:20&#125;"</span>.format(user_info[<span class="string">"name"</span>],</span><br><span class="line">                                                user_info[<span class="string">"phone"</span>],</span><br><span class="line">                                                user_info[<span class="string">"qq"</span>],</span><br><span class="line">                                                user_info[<span class="string">"email"</span>]))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 针对找到的名片记录执行修改和删除的操作</span></span><br><span class="line">            deal_card(user_info)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"抱歉，没有找到&#123;&#125;的名片"</span>.format(find_name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_card</span><span class="params">(find_dict)</span>:</span></span><br><span class="line">    <span class="string">"""处理查找到的名片</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param find_dict: 查找到的名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    action_str = input(<span class="string">"请选择要执行的操作： "</span></span><br><span class="line">                       <span class="string">"[1]  修改  /  [2]  删除  /  [0]  返回上级菜单"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> action_str == <span class="string">"1"</span>:</span><br><span class="line">        find_dict[<span class="string">"name"</span>] = input_card_info(find_dict[<span class="string">"name"</span>], <span class="string">"姓名[回车不修改]："</span>)</span><br><span class="line">        find_dict[<span class="string">"phone"</span>] = input_card_info(find_dict[<span class="string">"phone"</span>], <span class="string">"电话[回车不修改]："</span>)</span><br><span class="line">        find_dict[<span class="string">"qq"</span>] = input_card_info(find_dict[<span class="string">"qq"</span>], <span class="string">"QQ[回车不修改]："</span>)</span><br><span class="line">        find_dict[<span class="string">"email"</span>] = input_card_info(find_dict[<span class="string">"email"</span>], <span class="string">"邮箱[回车不修改]："</span>)</span><br><span class="line">        print(<span class="string">"修改&#123;&#125;的名片成功！"</span>.format(find_dict[<span class="string">"name"</span>]))</span><br><span class="line">    <span class="keyword">elif</span> action_str == <span class="string">"2"</span>:</span><br><span class="line">        card_list.remove(find_dict)</span><br><span class="line">        print(<span class="string">"删除&#123;&#125;的名片成功！"</span>.format(find_dict[<span class="string">"name"</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_card_info</span><span class="params">(dict_value, tip_message)</span>:</span></span><br><span class="line">    <span class="string">"""输入名片信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param dict_value: 字典原有数值</span></span><br><span class="line"><span class="string">    :param tip_message: 用户输入提示信息</span></span><br><span class="line"><span class="string">    :return: 如果用户输入了内容，就返回内容，如果没有输入内容，则用字典中原有的值</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 提示用户输入内容</span></span><br><span class="line">    result_str = input(tip_message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 针对用户的输入进行判断，如果用户输入了内容，直接返回结果</span></span><br><span class="line">    <span class="keyword">if</span> len(result_str) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> result_str</span><br><span class="line">    <span class="comment"># 如果用户没有输入内容，返回“字典中原有的值”</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> dict_value</span><br></pre></td></tr></table></figure><h3 id="cards-main代码"><a href="#cards-main代码" class="headerlink" title="cards_main代码"></a>cards_main代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 由用户决定退出程序的时机</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示系统功能</span></span><br><span class="line">    cards_tools.show_menu()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 没有使用int转换用户输入，可以避免一旦用户输入的不是数字，导致程序运行出错</span></span><br><span class="line">    action_str = input(<span class="string">"请选择您希望执行的操作："</span>)</span><br><span class="line">    print(<span class="string">"您选择的操作是【&#123;&#125;】"</span>.format(action_str))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1,2,3对名片进行操作</span></span><br><span class="line">    <span class="comment"># 使用in针对列表判断，避免使用or拼接复杂的逻辑条件</span></span><br><span class="line">    <span class="keyword">if</span> action_str <span class="keyword">in</span> [<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>]:</span><br><span class="line">        <span class="comment"># 新增名片</span></span><br><span class="line">        <span class="keyword">if</span> action_str == <span class="string">"1"</span>:</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            cards_tools.new_card()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 显示全部</span></span><br><span class="line">        <span class="keyword">if</span> action_str == <span class="string">"2"</span>:</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            cards_tools.show_all()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 查询名片</span></span><br><span class="line">        <span class="keyword">if</span> action_str == <span class="string">"3"</span>:</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">            cards_tools.search_card()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果在开发程序的时候，不希望立刻编写分支内部的代码</span></span><br><span class="line">        <span class="comment"># 可以使用pass关键字，表示一个占位符，能够保证程序的代码结构正确</span></span><br><span class="line">        <span class="comment"># 程序运行时，pass关键字不会执行任何的操作</span></span><br><span class="line">        <span class="comment"># pass</span></span><br><span class="line">    <span class="comment"># 0表示退出系统</span></span><br><span class="line">    <span class="keyword">elif</span> action_str == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 其他内容输入错误，需要提示用户</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"您输入的不正确，请重新选择"</span>)</span><br></pre></td></tr></table></figure><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200707181035.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;综合应用已经学习过的知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流程控制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模块&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发 &lt;strong&gt;名片管理系统&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL压缩包版安装方法</title>
    <link href="https://imqinhao.cn/2020/06/13/mysql-install/"/>
    <id>https://imqinhao.cn/2020/06/13/mysql-install/</id>
    <published>2020-06-13T04:00:00.000Z</published>
    <updated>2020-06-13T03:58:52.577Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>MySQL虽然提供了msi的安装包方式，但是最新版的会默认安装在C盘，而压缩版的我们只需要将文件夹放在自己想放的位置，配置即可使用。接下来我们介绍一下MySQL压缩包安装方式。</p><a id="more"></a><h2 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h2><p>首先我们到MySQL官网下载<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">MySQL的压缩包</a>，MySQL提供了压缩包和安装包两种方式，两种方式的区别是压缩包解压之后配置一下就可以使用，而<kbd>.msi</kbd>的安装包安装较为繁琐，故我们介绍压缩包的方式。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613101840.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102214.png" alt=""></p><h2 id="解压压缩包"><a href="#解压压缩包" class="headerlink" title="解压压缩包"></a>解压压缩包</h2><p>解压之后我们会得到下图所示的文件及文件夹</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102143.png" alt=""></p><h2 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h2><h3 id="以管理员身份运行cmd"><a href="#以管理员身份运行cmd" class="headerlink" title="以管理员身份运行cmd"></a>以管理员身份运行<kbd>cmd</kbd></h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102404.png" alt=""></p><h3 id="进入到解压根目录-bin目录下"><a href="#进入到解压根目录-bin目录下" class="headerlink" title="进入到解压根目录/bin目录下"></a>进入到解压根目录/bin目录下</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102633.png" alt=""></p><h3 id="创建配置文件my-ini"><a href="#创建配置文件my-ini" class="headerlink" title="创建配置文件my.ini"></a>创建配置文件my.ini</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613115839.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613102927.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 设置mysql的安装目录  </span><br><span class="line">basedir&#x3D;D:\\mysql-8.0.20-winx64</span><br><span class="line"># 设置mysql数据库的数据的存放目录  </span><br><span class="line">datadir&#x3D;D:\\mysql-8.0.20-winx64\\data</span><br></pre></td></tr></table></figure><div class="note success"><p><strong>basedir和datadir设置时需要注意的是如果使用“\”请使用双“\”来分割目录，如果不使用这种可以使用单“/”</strong></p></div><h3 id="将my-ini剪切到bin目录下"><a href="#将my-ini剪切到bin目录下" class="headerlink" title="将my.ini剪切到bin目录下"></a>将my.ini剪切到bin目录下</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103046.png" alt=""></p><h3 id="新建data文件夹"><a href="#新建data文件夹" class="headerlink" title="新建data文件夹"></a>新建data文件夹</h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103557.png" alt=""></p><h3 id="初始化MySQL数据目录"><a href="#初始化MySQL数据目录" class="headerlink" title="初始化MySQL数据目录"></a>初始化MySQL数据目录</h3><p>执行命令<kbd>mysqld --initialize</kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103303.png" alt=""></p><p>运行完之后就会发现在我们新建的data文件夹生成了很多文件</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103432.png" alt=""></p><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>如果出现了下面的提示，说明没有安装VC++2015运行库，MySQL运行需要这个运行库，可以去微软官网下载。没有出现报错则跳过该步骤。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103812.png" alt=""></p><p>进入微软官网搜索并下载</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613103926.png" alt=""></p><h3 id="获取初始化数据库随机密码"><a href="#获取初始化数据库随机密码" class="headerlink" title="获取初始化数据库随机密码"></a>获取初始化数据库随机密码</h3><p>执行完上一步之后，在data目录下生的文件有一个.err文件，这里面有初始化的密码。我们编辑打开此文件，找到密码。该文件命名规则是【电脑用户名.err】如下图</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613104100.png" alt=""></p><p>找到我们的随机密码</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613104246.png" alt=""></p><h3 id="安装MySQL服务"><a href="#安装MySQL服务" class="headerlink" title="安装MySQL服务"></a>安装MySQL服务</h3><p>执行命令<kbd>mysqld --install mysql</kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613104649.png" alt=""></p><h3 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h3><p>执行命令<kbd>net  start  mysql </kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613113631.png" alt=""></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p><kbd>此电脑</kbd>右键—&gt;<kbd>属性</kbd>—&gt;<kbd>高级系统设置</kbd>—&gt;<kbd>环境变量</kbd></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114009.png" alt=""></p><p>找到<kbd>PATH</kbd>变量，推荐配置在用户变量。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114042.png" alt=""></p><p>将MySQL文件夹的bin目录的路径复制，点击右侧新建，添加到环境变。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114137.png" alt=""></p><div class="note success"><p>配置完成后记得点击确定，有两个地方需要点击确定。</p></div><h2 id="MySQL连接"><a href="#MySQL连接" class="headerlink" title="MySQL连接"></a>MySQL连接</h2><h3 id="登录连接MySQL"><a href="#登录连接MySQL" class="headerlink" title="登录连接MySQL"></a>登录连接MySQL</h3><p>输入<kbd>mysql  -u  root  -p</kbd>，输入我们刚刚获取到的随机密码。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114457.png" alt=""></p><p>出现下面的提示又电脑的路径变成了<kbd>mysql> </kbd>表示我们连接数据库成功。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200613114553.png" alt=""></p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>输入<kbd>ALTER USER 'root'@'localhost' IDENTIFIED BY '密码';</kbd></p><div class="note success"><p>修改密码成功会提示<kbd>Query OK</p></div><h3 id="退出重新登录"><a href="#退出重新登录" class="headerlink" title="退出重新登录"></a>退出重新登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL虽然提供了msi的安装包方式，但是最新版的会默认安装在C盘，而压缩版的我们只需要将文件夹放在自己想放的位置，配置即可使用。接下来我们介绍一下MySQL压缩包安装方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://imqinhao.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>无法访问蓝奏云的解决方法</title>
    <link href="https://imqinhao.cn/2020/06/11/lanzous/"/>
    <id>https://imqinhao.cn/2020/06/11/lanzous/</id>
    <published>2020-06-11T12:20:11.000Z</published>
    <updated>2020-06-12T11:58:20.616Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>介绍一下打开蓝奏云链接时提示我们网页不存在的解决方法</p><a id="more"></a><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>将蓝奏云链接的www改成pan，然后删掉lanzous后面的s。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>更改DNS为114.114.114.114 和 114.114.115.115</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍一下打开蓝奏云链接时提示我们网页不存在的解决方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="小技巧" scheme="https://imqinhao.cn/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>政府工作报告词云示例</title>
    <link href="https://imqinhao.cn/2020/06/01/Python-5/"/>
    <id>https://imqinhao.cn/2020/06/01/Python-5/</id>
    <published>2020-06-01T05:14:20.000Z</published>
    <updated>2020-06-05T12:59:39.011Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>政府工作报告词云小练习</p><p>使用库：</p><p><kbd>jieba库</kbd></p><p><kbd>wordcloud库</kbd></p><a id="more"></a><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread</span><br><span class="line">mask = imread(<span class="string">"chinamap.png"</span>)</span><br><span class="line">f = open(<span class="string">"新时代中国特色社会主义.txt"</span>,<span class="string">"r"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">t = f.read()</span><br><span class="line">f.close()</span><br><span class="line">ls = jieba.lcut(t)</span><br><span class="line">txt = <span class="string">" "</span>.join(ls)</span><br><span class="line">w = wordcloud.WordCloud(width=<span class="number">1000</span>,height=<span class="number">700</span>,background_color=<span class="string">"white"</span>,font_path=<span class="string">"msyh.ttc"</span>,mask=mask)</span><br><span class="line">w.generate(txt)</span><br><span class="line">w.to_file(<span class="string">"wordclouddemo3.png"</span>)</span><br></pre></td></tr></table></figure><h2 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200601131058.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;政府工作报告词云小练习&lt;/p&gt;
&lt;p&gt;使用库：&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;jieba库&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;wordcloud库&lt;/kbd&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>华为应用开发学习笔记</title>
    <link href="https://imqinhao.cn/2020/05/29/huawei-exam-application/"/>
    <id>https://imqinhao.cn/2020/05/29/huawei-exam-application/</id>
    <published>2020-05-29T12:13:14.000Z</published>
    <updated>2020-06-01T05:18:01.052Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>华为应用开发学习笔记</p><a id="more"></a><h2 id="解压命令"><a href="#解压命令" class="headerlink" title="解压命令"></a>解压命令</h2><p><kbd>.tar</kbd> 用 <kbd>tar -xvf </kbd>解压</p><p><kbd>.gz</kbd> 用 <kbd>gzip  -d</kbd> 或者 <kbd>gunzip</kbd> 解压</p><p><kbd>.tar.gz</kbd> 和 <kbd>.tgz</kbd> 用 <kbd>tar  -xzf</kbd> 解压</p><p><kbd>.bz2</kbd> 用 <kbd>bzip2  -d</kbd> 或者用 <kbd>bunzip2</kbd> 解压</p><p><kbd>.tar.bz2</kbd>  用 <kbd>tar  -xjf</kbd> 解压</p><p><kbd>.Z</kbd>  用 <kbd>uncompress</kbd> 解压</p><p><kbd>.tar.Z</kbd> 用 <kbd>tar  -xZf</kbd> 解压</p><p><kbd>.tar.xz</kbd> 用 <kbd>jxvf</kbd> 解压</p><p><kbd>.rar</kbd> 用 <kbd>unrar  e </kbd> 解压</p><p><kbd>.zip</kbd> 用 <kbd>unzip</kbd> 解压</p><br><p>使用<kbd>rpmbuild</kbd>命令将源码打包成rpm包。</p><br><p>公共镜像：常见的标准操作系统镜像。</p><p>私有镜像：个人镜像，仅用户自己可见。</p><p>共享镜像：由其他用户共享的私有镜像。</p><p>市场镜像：提供预装操作系统、应用环境和各类软件的优质第三方镜像。</p><br><h2 id="Linux安装软件方式"><a href="#Linux安装软件方式" class="headerlink" title="Linux安装软件方式"></a>Linux安装软件方式</h2><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><blockquote><ul><li>可以自定义安装目录和一些配置文件</li><li>需要事先调整编译参数</li></ul></blockquote><h3 id="yum安装软件"><a href="#yum安装软件" class="headerlink" title="yum安装软件"></a>yum安装软件</h3><blockquote><ul><li>全自动安装，自动安装依赖</li><li>缺乏自主性，软件的功能和存放的位置均已设置好</li></ul></blockquote><h3 id="RPM安装"><a href="#RPM安装" class="headerlink" title="RPM安装"></a>RPM安装</h3><blockquote><ul><li>自主制作的RPM包能够实现全自动安装，且可自动以安装路径等配置</li><li>需提前识别依赖并手动安装</li></ul></blockquote><h2 id="数据库配置文件"><a href="#数据库配置文件" class="headerlink" title="数据库配置文件"></a>数据库配置文件</h2><p><kbd>props.ora</kbd> ：<kbd>Oracle</kbd></p><p><kbd>props.pg</kbd> ： <kbd>PostgreSQL</kbd></p><p><kbd>Props.fb</kbd> ： <kbd>FireBirdSQL</kbd></p><p><kbd>Props.gb</kbd> ： <kbd>GuassDB</kbd></p><p><kbd>Props.percona</kbd> ： <kbd>percona</kbd></p><h2 id="华为云服务中的鲲鹏云手机服务的特性"><a href="#华为云服务中的鲲鹏云手机服务的特性" class="headerlink" title="华为云服务中的鲲鹏云手机服务的特性"></a>华为云服务中的鲲鹏云手机服务的特性</h2><blockquote><ul><li>原生指令兼容性</li><li>32/64位应用全兼容</li><li>ARM原生指令兼容性</li><li>Monbox双OS共内核架构</li><li>单台服务器超200路并发</li><li>性能较模拟器提升10倍以上</li><li>自研芯片及硬件底座</li><li>华为鲲鹏916/920芯片</li><li>自研高性能GPU</li></ul></blockquote><p>华为云鲲鹏云手机结合华为在操作系统、虚拟化以及容器等方面技术深厚积累，构建高密MonBox仿真软件架构，相比同等性能x86服务器构造方案，性能提升高达10倍以上，并完美兼容32位与64位的应用。</p><h2 id="华为云服务器应用场景"><a href="#华为云服务器应用场景" class="headerlink" title="华为云服务器应用场景"></a>华为云服务器应用场景</h2><p><kbd>计算加速型</kbd>  ： AI训练、推理</p><p><kbd>内存密集型KM1</kbd>  ：Redis、Cassandra内存数据库</p><p><kbd>存储密集型KI1 </kbd>：分布式缓存数据库、大数据</p><p><kbd>通用计算型KC1</kbd> ：建站、电商、游戏、视频、大数据、HPC等</p><p><kbd>通用型KS1</kbd> ：大数据管理节点、NameNode、HPC等</p><p><kbd>存储型KD1</kbd> ：大数据数据节点、DataNode、Kafka等</p><br><div class="note success"><p><strong>openEuler1.0是一款开源操作系统，支持鲲鹏、至强及其他多种处理器，能充分释放计算芯片的潜能</strong></p></div><br><h2 id="iSula特点"><a href="#iSula特点" class="headerlink" title="iSula特点"></a>iSula特点</h2><p>iSula 通用容器引擎（iSulad）是一种新的容器解决方案，具有以下特点：</p><ul><li>快速灵活&amp;轻量级</li><li>可信&amp;安全启动</li><li>升级不中断业务</li><li>增强安全性和调测特性</li></ul><h2 id="iSula部署模式"><a href="#iSula部署模式" class="headerlink" title="iSula部署模式"></a>iSula部署模式</h2><blockquote><p>iSula 通用容器引擎（iSulad）是一种新的容器解决方案，提供统一的架构设计来满足CT和IT领域的不同需求。相比 Golang 编写的 Docker，轻量级容器具有轻、灵、巧、快的特点，不受硬件规格和架构的限制，底噪开销更小，可应用领域更为广泛。openEuler 1.0 中提供容器运行的基础平台iSula。</p></blockquote><p>容器根据部署模型可以分成三种模型：<kbd>应用容器</kbd>、<kbd>安全容器</kbd>、<kbd>系统容器</kbd>。</p><h3 id="应用容器"><a href="#应用容器" class="headerlink" title="应用容器"></a>应用容器</h3><p>应用最广泛的容器形态，容器中仅运行客户定义的应用程序。openEuler 1.0 集成 moby 18.09 版本，并在版本基础上进行了 bugfix 和稳</p><p>定性增强。</p><h3 id="安全容器"><a href="#安全容器" class="headerlink" title="安全容器"></a>安全容器</h3><p>本质上是虚拟机，但是接口封装为容器接口；着重容器的隔离性缺陷。openEuler 1.0 集成 kata-container1.7 版本，在社区版本的基础</p><p>上，进行了稳定性和可靠性加固，增加了异构计算支持，更适于生产环境的 Host CGroup 配置与 DPDK/SPDK 高性能网络、存储支持。</p><h3 id="系统容器"><a href="#系统容器" class="headerlink" title="系统容器"></a>系统容器</h3><p>本质上是容器，但是使用方式和虚拟机相同；着重解决虚拟机的厚重问题。iSula 容器平台支持创建系统容器，并能支持在系统容器内动</p><p>态调整设备、运行资源，且提供更优秀的 user namespace 隔离。</p><br><p>华为鲲鹏920处理器内置了3大加速引擎：<kbd>ssl加速引擎</kbd>、<kbd>加解密加速引擎</kbd>、<kbd>压缩解压缩加速引擎</kbd>。</p><br><h2 id="华为计算服务适用场景"><a href="#华为计算服务适用场景" class="headerlink" title="华为计算服务适用场景"></a>华为计算服务适用场景</h2><p><kbd>高性能计算型</kbd>：可适用于基因工程、游戏动画、生物制药的计算和存储系统；渲染农场、动漫影视基地等公共渲染平台，以及影视等渲染</p><p>平台；高性能前端集群、Web 服务器、高性能科学和工程应用、广告服务、视频编码和分布式分析等等</p><p><kbd>计算加速型</kbd> ： AI训练、推理</p><p><kbd>内存密集型KM1</kbd> ：Redis、Cassandra内存数据库</p><p><kbd>存储密集型KI1</kbd>：分布式缓存数据库、大数据</p><p><kbd>通用计算型KC1</kbd>：建站、电商、游戏、视频、大数据、HPC等</p><p><kbd>通用型KS1</kbd>：大数据管理节点、NameNode、HPC等</p><p><kbd>存储型KD1</kbd>：大数据数据节点、DataNode、Kafka等</p><h2 id="TPCC衡量标准"><a href="#TPCC衡量标准" class="headerlink" title="TPCC衡量标准"></a>TPCC衡量标准</h2><p><kbd>tpmC（NewOrders）</kbd>:每分钟处理的订单个数</p><p><kbd>tpmTOTAL（TPS）</kbd>：每分钟处理的总数</p><h2 id="华为云通过的国际认证"><a href="#华为云通过的国际认证" class="headerlink" title="华为云通过的国际认证"></a>华为云通过的国际认证</h2><p>近日，全球权威标准机构BSI（英国标准协会）和CSA（云安全联盟）宣布，华为云顺利通过<kbd>ISO 27001</kbd>&amp; <kbd>ISO  27017</kbd>&amp;<kbd>ISO  27018</kbd>&amp;<kbd>CSA STAR</kbd>四个安全复审和认证。</p><h2 id="容灾指标"><a href="#容灾指标" class="headerlink" title="容灾指标"></a>容灾指标</h2><p><kbd>业界领先</kbd>：跨AZ RPO=0，RTO&lt; 30分钟，确保数据零丢失，业务快速恢复。</p><p><kbd>最高等级</kbd>：快速构建云上两地三中心，同城双中心可达Tier5~Tier6容灾等级。</p><p><kbd>专属安全</kbd>：物理隔离，满足安全合规要求，相比客户自建容灾中心免基础设施运维。</p><h2 id="云计算的特征"><a href="#云计算的特征" class="headerlink" title="云计算的特征"></a>云计算的特征</h2><p>1.<kbd>按需自助服务</kbd>，消费者不需要或很少需要云服务提供商的协助，就可以单方面按需获取云端的计算资源。</p><p>2.<kbd>广泛的网络接入</kbd>，消费者可以随时随地使用云终端设备接入网络并使用云端的计算资源。常见的云终端设备包括手机、平板、笔记本电</p><p>脑、PDA掌上电脑和台式机等。</p><p>3.<kbd>资源池化</kbd>，云端计算资源需要被池化，以便通过多租户形式共享给多个消费者，也只有池化才能根据消费者的需求动态分配或再分配各</p><p>种物理的和虚拟的资源。消费者通常不知道自己正在使用的计算资源的确切位置，但是在自助申请时允许指定大概的区域范围（比如在哪</p><p>个国家、哪个省或者哪个数据中心）。</p><p>4.<kbd>快速弹性伸缩</kbd>。消费者能方便、快捷地按需获取和释放计算资源，也就是说，需要时能快速获取资源从而扩展计算能力，不需要时能迅</p><p>速释放资源，以便降低计算能，从而减少资源的使用费用。对于消费者来说，云端的计算资源是无限的，可以随时申请并获取任何数量的</p><p>计算资源。但是我我们一定要消除一个误解，那就是一个实际的云计算系统不一定是投资巨大的工程，也不一定要购买成千上万台计算</p><p>机，也不一定具备超大规模的运算能力。其实一台计算机就可以组建一个最小的云端，云端建设方案务必采用可伸缩性策略，刚开始时采</p><p>用几台计算机，然后根据用户数量规模来增减计算资源。</p><p>5.<kbd>可计量服务</kbd>，消费者使用云端计算资源是要付费的，付费的计量方法有很多，比如根据某类资源（如存储、CPU、内存、网络带宽等）</p><p>的使用量和时间长短计费，也可以按照每使用一次来计费。但不管如何计费，对消费者来说，价码要清楚，计量方法要明确，而云服务提</p><p>供商需要监视和控制资源的使用情况，并及时输出各种资源的使用报表，做到供/需双方费用结清清楚楚、明明白白。</p><h2 id="云计算的四种部署模型"><a href="#云计算的四种部署模型" class="headerlink" title="云计算的四种部署模型"></a>云计算的四种部署模型</h2><h3 id="私有云"><a href="#私有云" class="headerlink" title="私有云"></a>私有云</h3><p>云端资源只给一个单位组织内的用户使用，这是私有云的核心特征。而云端的所有权、日程管理和操作的主体到底属于谁并没有严格的规</p><p>定，可能是本单位，也可能是第三方机构，还可能是二者的联合。云端可能位于本单位内部，也可能托管在其他地方。</p><h3 id="社区云"><a href="#社区云" class="headerlink" title="社区云"></a>社区云</h3><p>云端资源专门给固定的几个单位内的用户使用，而这些单位对云端具有相同的诉求（如安全要求、云端使命、规章制度、合规性要求</p><p>等）。云端的所有权、日常管理的操作的主体可能是本社区内的一个或多个单位，也可能是社区外的第三方机构，还可能是二者的联合。</p><p>云端可能部署在本地，也可能部署与他处。</p><h3 id="公共云"><a href="#公共云" class="headerlink" title="公共云"></a>公共云</h3><p>云端资源开发给社会公众使用。云端的所有权、日常管理和操作的主体可以是一个商业组织、学术机构、政府部门或者它们其中的几个联</p><p>合。云端可能部署在本地，也可能部署于其他地方，比如中山市民公共云的云端可能就建在中山，也可能建在深圳。</p><h3 id="混合云"><a href="#混合云" class="headerlink" title="混合云"></a>混合云</h3><p>混合云由两个或两个以上不同类型的云（私有云、社区云、公共云）组成，它们各自独立，但用标准的或专有的技术将它们组合起点，而</p><p>这些技术能实现云之间的数据和应用程序的平滑流转。由多个相同类型的云组合在一起，混合云属于多云的一种。私有云和公共云构成的</p><p>混合云是目前最流行的——当私有云资源短暂性需求过大（称为云爆发，Cloud Bursting）时，自动租赁公共云资源来平抑私有云资源</p><p>的需求峰值。例如，网店在节假日期间点击量巨大，这时就会临时使用公共云资源的应急。</p><h2 id="云计算的3种服务模式"><a href="#云计算的3种服务模式" class="headerlink" title="云计算的3种服务模式"></a>云计算的3种服务模式</h2><h3 id="SaaS"><a href="#SaaS" class="headerlink" title="SaaS"></a>SaaS</h3><p><kbd>软件即服务（Software as a Service，SaaS）</kbd>,云服务提供商把IT系通中的应用软件层作为服务租出去，消费者不用自己安装应用软件，直</p><p>接使用即可，这进一步降低了云服务消费者的技术门槛。</p><h3 id="PaaS"><a href="#PaaS" class="headerlink" title="PaaS"></a>PaaS</h3><p><kbd>平台即服务（Platform as a Service，PaaS）</kbd>。云服务提供商把IT系统中的平台软件层作为服务租出去，消费者自己开发或者安装程序，</p><p>并运行程序。</p><h3 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h3><p><kbd>基础设施及服务（Infrastructure as a Service，IaaS）</kbd>。云服务提供商把IT系统的基础设施层作为服务租出去，由消费者自己安装操作系</p><p>统、中间件、数据库和应用程序。</p><h2 id="云硬盘的类型"><a href="#云硬盘的类型" class="headerlink" title="云硬盘的类型"></a>云硬盘的类型</h2><h3 id="普通IO"><a href="#普通IO" class="headerlink" title="普通IO"></a>普通IO</h3><p>该类型云硬盘的<kbd>最大IOPS为2200</kbd>，适用于<kbd>大容量</kbd>、<kbd>读写速率中等</kbd>、<kbd>事务性处理较少</kbd>的应用场景，例如企业的日常办公应用或者小型测试</p><p>等</p><h3 id="高速高IO"><a href="#高速高IO" class="headerlink" title="高速高IO"></a>高速高IO</h3><p>该类型云硬盘的<kbd>最大IOPS可达5000</kbd>，<kbd>最低读写时延为1 ms</kbd>，<kbd>适用于主流的高性能、高可靠应用场景</kbd>，例如企业应用、大型开发测试以及</p><p>Web服务器日志等。</p><h3 id="超高IO"><a href="#超高IO" class="headerlink" title="超高IO"></a>超高IO</h3><p>该类型云硬盘的<kbd>最大IOPS可达33000</kbd>，<kbd>最低读写时延为1 ms</kbd>，<kbd>适用于超高IO、超大带宽的读写密集型应用场景</kbd>，例如高性能计算应用场</p><p>景，用来部署分布式文件系统，或者I/O密集型应用场景，用来部署各类NoSQL/关系型数据库。</p><h3 id="超高IO-时延优化"><a href="#超高IO-时延优化" class="headerlink" title="超高IO (时延优化)"></a>超高IO (时延优化)</h3><p>该类型的云硬盘提供<kbd>低至1 ms的读写时延和高达1 GB/s的吞吐量</kbd>，可运行企业核心业务，如SAP HANA。</p><h2 id="docker-ps-a显示标题含义"><a href="#docker-ps-a显示标题含义" class="headerlink" title="docker ps -a显示标题含义"></a>docker ps -a显示标题含义</h2><p><kbd>CONTAINER ID</kbd>：容器的唯一表示ID。</p><p><kbd>IMAGE</kbd>：创建容器时使用的镜像。</p><p><kbd>COMMAND</kbd>：容器最后运行的命令。</p><p><kbd>CREATED</kbd>：创建容器的时间。</p><p><kbd>STATUS</kbd>：容器状态。</p><p><kbd>PORT</kbd>：:对外开放的端口。</p><br><p><strong>CPU性能和网络带宽都会影响HPC性能</strong></p><br><p><kbd>–mcpu=tsv110</kbd>是<kbd>GNU9编译器</kbd>对鲲鹏架构进行指定优化的参数。</p><br><h2 id="RPM常用命令"><a href="#RPM常用命令" class="headerlink" title="RPM常用命令"></a>RPM常用命令</h2><p><kbd>安装软件</kbd>：执行<kbd>rpm -ivh rpm包名</kbd>，如： #rpm -ivh apache-1.3.6.i386.rpm</p><p><kbd>升级软件</kbd>：执行<kbd>rpm -Uvh rpm包名</kbd>。</p><p><kbd>反安装</kbd>：执行<kbd>rpm -e rpm包名</kbd>。</p><p><kbd>查询软件包的详细信息</kbd>：执行<kbd>rpm -qpi rpm包名</kbd>。</p><p><kbd>查询某个文件是属于那个rpm包</kbd>：执行<kbd>rpm -qf rpm包名</kbd>。</p><p><kbd>查该软件包会向系统里面写入哪些文件</kbd>：执行 <kbd>rpm -qpl rpm包名</kbd>。</p><h2 id="TaiShan服务器适用场景"><a href="#TaiShan服务器适用场景" class="headerlink" title="TaiShan服务器适用场景"></a>TaiShan服务器适用场景</h2><blockquote><ul><li>TaiShan 5280：存储型服务器</li><li>TaiShan 2280：均衡型服务器</li><li>TaiShan X6000：高密型服务器</li><li>TaiShan 2480： 2U4路高性能型</li></ul></blockquote><h2 id="设置CPU的亲和性"><a href="#设置CPU的亲和性" class="headerlink" title="设置CPU的亲和性"></a>设置CPU的亲和性</h2><ul><li><kbd>echo cpuMask>/proc/irq/smp affinity- list</kbd></li><li><kbd>numactl命令</kbd></li><li><kbd>C语言的sched setaffinity函数</kbd></li></ul><br><p><strong>在从x86平台向鲲鹏处理器迁移软件时，技术分析阶段需要完成以下哪些活动?</strong></p><ul><li>软件栈分析（应用软件、OS、数据库、中间件组件等）</li><li>编程语言/代码、依赖库分析</li><li>准备调试编译环境（准备测试样机服务器/OpenLab线上服务器）</li><li>成立项目组</li><li>制定迁移计划</li><li>协调相关人力/物料资源</li></ul><p><strong>主要活动为</strong>：</p><ul><li>软件栈分析、制定迁移替换策略</li><li>申请线上资源/测试样机上架上电</li><li>安装OS/编译器/JDK/其他工具软件</li></ul><h2 id="GNU"><a href="#GNU" class="headerlink" title="GNU"></a>GNU</h2><p>1984年有Richard Stallman发起并创建，意在创造一个自由使用、自由学习和修改、自由分发、自由创建衍生版软件的环境。</p><p>GNU目标是编写大量兼容于Unix系统的自由软件</p><h2 id="GPL"><a href="#GPL" class="headerlink" title="GPL"></a>GPL</h2><ul><li>通用性公开许可证，开源协议</li><li>自由软件的通用许可证</li><li>允许用户任意复制、传递、修改及再发布</li><li>基于自由软件修改再次发布的软件，仍需遵循GPL</li></ul><h2 id="LGPL"><a href="#LGPL" class="headerlink" title="LGPL"></a>LGPL</h2><ul><li>相对于GPL较为宽松，允许不公开全部源代码</li><li>为基于Linux平台开发商业软件提供了更多空间</li></ul><h2 id="OpenEuler的技术特性"><a href="#OpenEuler的技术特性" class="headerlink" title="OpenEuler的技术特性"></a>OpenEuler的技术特性</h2><p><kbd>系统安装</kbd>：openEuler 1.0 改进了安装程序 Anaconda，并做了个性化定制和修改，方便用户安装。</p><p><kbd>定制/剪裁</kbd>：openEuler 1.0 提供优化的 kiwi 工具对系统进行个性化的自定义修改。</p><p><kbd>文件系统</kbd>：openEuler 1.0 中使用的默认文件系统是ext4，兼容ext3/2文件系统。openEuler 1.0 支持高性能日志文件系统XFS。</p><p><kbd>系统管理</kbd>：openEuler 1.0 使用 systemd 进行系统和服务的管理，systemd 与 SysV 和 Linux 标准的 init 脚本兼容。</p><p><kbd>系统安全</kbd>：openEuler 1.0 提供多重安全手段，包括身份识别与认证、安全协议、强制访问控制、完整性保护、安全审计等安全机制，保</p><p>障操作系统的安全性，为各类上层应用提供安全基础。</p><p><kbd>系统调测</kbd>：openEuler 1.0 支持Perf性能调测工具和blktrace块设备I/O跟踪工具。</p><p><kbd>编译器</kbd>：openEuler 1.0 基于原生GCC进行了Bug修复、特性增强；同时openEuler 1.0提供Huawei Open JDK支持，相比较Open JDK，</p><p>Huawei Open JDK作了优化、稳定性增强、安全增强等。</p><p><kbd>内核</kbd>：openEuler 1.0 采用 kernel 版本 4.19。Linux Kernel 4.19 是一个 LTS 版本，提供长期支持并持续更新版本，以保障用户的 </p><p>Linux 操作系统安全、可靠。</p><h2 id="PostgreSQL常用命令"><a href="#PostgreSQL常用命令" class="headerlink" title="PostgreSQL常用命令"></a>PostgreSQL常用命令</h2><p>登陆数据库：/home/pgsql/bin/psql -U postgres</p><p>初始化数据库： /home/pgsql/bin/initdb -D pgsql/</p><p>启动数据库： /home/pgsql/bin/pg_ctl -D pgsql/ -l logfile start</p><h2 id="BenchmarkSQL配置文件参数"><a href="#BenchmarkSQL配置文件参数" class="headerlink" title="BenchmarkSQL配置文件参数"></a>BenchmarkSQL配置文件参数</h2><p><kbd>warehouse</kbd>：指定仓库数量。</p><p><kbd>loadWorkers</kbd>：指定装载数据的并发数。</p><p><kbd>Terminals</kbd>：指定并发用户数。</p><p><kbd>runMins</kbd>：指定测试时间。</p><p><kbd>runTxnsPerTerminal</kbd>：指定每个Terminal运行的事务数量，runMins必须等于0。</p><p><kbd>limitTxnsPerMin</kbd>：指定每分钟总事务数。</p><p><kbd>terminalWarehouseFixed</kbd>：指定每个终端是否绑定固定warehouse。</p><h2 id="HCS-Online主打应用场景"><a href="#HCS-Online主打应用场景" class="headerlink" title="HCS  Online主打应用场景"></a>HCS  Online主打应用场景</h2><ul><li><p>行业云场景</p></li><li><p>HCSO+HPC场景</p></li><li><p>HCSO+灾备场景</p></li><li><p>智能大数据场景</p></li><li><p>多级混合云场景</p></li></ul><h2 id="鲲鹏处理器优点"><a href="#鲲鹏处理器优点" class="headerlink" title="鲲鹏处理器优点"></a>鲲鹏处理器优点</h2><ul><li>采用ARM架构，同样功能性能占用的芯片面积小、功耗低、集成度更高，更多的硬件CPU核具备更好的并发性能。</li><li>支持16位、32位、64位多种指令集，能很好的兼容从IoT、终端到云端的各类应用场景。</li><li>大量使用寄存器，大多数数据操作都在寄存器中完成，指令执行速度更快。</li><li>采用RISC指令集，指令长度固定，寻址方式灵活简单，执行效率高。</li></ul><h2 id="HiBench"><a href="#HiBench" class="headerlink" title="HiBench"></a>HiBench</h2><p>开源的大数据基准测试套件。</p><p>用于<kbd>评估大数据框架的速度，吞吐量和系统资源利用率</kbd>。</p><p>支持的框架：hadoopbench、sparkbench、stormbench、flinkbench、gearpumpbench。</p><p>支持的开源版本组件：Hadoop、Spark、Storm、Kafka、Flink。</p><p>目前使用较多的版本：HiBench-7.0。</p><p>共计19个测试方向，可分为6种测试类别。</p><h2 id="软件迁移过程"><a href="#软件迁移过程" class="headerlink" title="软件迁移过程"></a>软件迁移过程</h2><p><kbd>技术分析</kbd>-&gt;<kbd>编译迁移</kbd>-&gt;<kbd>功能验证</kbd>-&gt;<kbd>性能调优</kbd>-&gt;<kbd>规模商用</kbd></p><h2 id="容灾"><a href="#容灾" class="headerlink" title="容灾"></a>容灾</h2><p>容灾系统是指在相隔较远的异地，建立两套或多套功能相同的IT系统，互相之间可以进行健康状态监视和功能切换，当一处系统因意外</p><p>（如火灾、地震等）停止工作时，整个应用系统可以切换到另一处，使得该系统功能可以继续正常工作。容灾技术是系统的高可用性技术</p><p>的一个组成部分，容灾系统恢复功能。</p><h3 id="数据库容灾"><a href="#数据库容灾" class="headerlink" title="数据库容灾"></a>数据库容灾</h3><div class="note success"><p>数据库容灾，即在异地部署一个一模一样的数据库，一个数据库所处的地理位置发生自然灾害了导致当前数据库发生灾难，另一个数据库会立马顶替工作。</p></div><h3 id="冷备容灾"><a href="#冷备容灾" class="headerlink" title="冷备容灾"></a>冷备容灾</h3><div class="note success"><p>每天备份一次数据库，保存在磁带或光盘上。</p></div><h3 id="热备容灾"><a href="#热备容灾" class="headerlink" title="热备容灾"></a>热备容灾</h3><div class="note success"><p>建立数据库灾备中心，与主库实时进行数据同步，同时应用系统保持文件实时同步，保证引用系统版本最新。</p></div><h3 id="应用双活"><a href="#应用双活" class="headerlink" title="应用双活"></a>应用双活</h3><div class="note success"><p>双活容灾即灾备系统中使主生产端数据库和备机端数据库同时在线运行，处于可读可查询的状态的技术。</p></div><h2 id="SHARE78容灾备份标准等级"><a href="#SHARE78容灾备份标准等级" class="headerlink" title="SHARE78容灾备份标准等级"></a>SHARE78容灾备份标准等级</h2><p><strong>真正的容灾必须满足三个要素</strong></p><ol><li>系统中的部件</li><li>数据都具有冗余性，即一个系统发生故障</li><li>容灾系统要追求全部的数据复制，也称为容灾的”3R”（Redundance、Remote、Replication）</li></ol><blockquote><p>​      从简单的仅在本地进行磁带备份，到将备份的磁带存储在异地，再到建立应用系统实时切换的异地备份系统，恢复时间也可以从</p><p>几天到小时级到分钟级、秒级或零数据丢失等。目前针对这七个层次，都有相应的容灾方案，所以，用户在选择容灾方案时应重点区</p><p>分它们各自的特点和适用范围，结合自己对容灾系统的要求判断选择哪个层次的方案。</p></blockquote><h3 id="零级-无异地备份"><a href="#零级-无异地备份" class="headerlink" title="零级 无异地备份"></a>零级 无异地备份</h3><blockquote><p>零级容灾方案数据仅在本地进行备份，没有在异地备份数据，未制定灾难恢复计划。这种方式是成本低的灾难恢复解决方案，但不具</p><p>备真正灾难恢复能力。</p><p>特点：是用户投资较少，技术实现简单。</p><p>缺点：是一旦本地发生毁灭性灾难，将丢失全部的本地备份数据，业务无法恢复。</p></blockquote><h3 id="一级-实现异地备份"><a href="#一级-实现异地备份" class="headerlink" title="一级 实现异地备份"></a>一级 实现异地备份</h3><blockquote><p>进行本地数据备份，然后将备份介质送往异地存放。异地未建容灾备份中心，没有灾难恢复计划。</p><p>该方案成本较低，运用本地备份管理软件，可以在本地发生毁灭性灾难后，恢复从异地运送过来的备份数据到本地，进行业务恢复，</p><p>但难以管理。</p></blockquote><h3 id="二级-热备份站点备份"><a href="#二级-热备份站点备份" class="headerlink" title="二级 热备份站点备份"></a>二级 热备份站点备份</h3><blockquote><p>将关键数据进行备份并存放到异地，制定有相应灾难恢复计划，具有热备份能力的站点灾难恢复。一旦发生灾难，利用热备份主机系</p><p>统将数据恢复。</p><p>该容灾方案由于备份介质是采用交通运输方式送往异地，异地热备中心保存的数据是上一次备份的数据，可能会有几天甚至几周的数</p><p>据丢失。这对于关键数据的容灾是不能容忍的。</p></blockquote><h3 id="三级-在线数据恢复"><a href="#三级-在线数据恢复" class="headerlink" title="三级 在线数据恢复"></a><strong>三级 在线数据恢复</strong></h3><blockquote><p>通过网络将关键数据进行备份并存放至异地，制定有相应灾难恢复计划，有备份中心，并配备部分数据处理系统及网络通信系统。特</p><p>点：用电子数据传输取代交通工具传输备份数据，从而提高了灾难恢复的速度。</p><p>该方案由于备份站点要保持持续运行，对网络的要求较高，因此成本相应有所增加。利用异地的备份管理软件将通过网络传送到异地</p><p>的数据备份到主机系统。一旦灾难发生，需要的关键数据通过网络可迅速恢复，通过网络切换，关键应用恢复时间可降低到天（数量</p><p>1）或小时级。</p></blockquote><h3 id="四级-定时数据备份"><a href="#四级-定时数据备份" class="headerlink" title="四级 定时数据备份"></a><strong>四级 定时数据备份</strong></h3><blockquote><p>该方案是在第三级容灾方案的基础上，利用备份管理软件自动通过通信网络将部分关键数据定时备份至异地，并制定相应的灾难恢复</p><p>计划。一旦灾难发生，利用备份中心已有资源及异地备份数据恢复关键业务系统运行。</p><p>该方案由于对备份管理软件设备和网络设备的要求较高，因此投入成本也会增加。但由于该级别备份的特点，业务恢复时间和数据的</p><p>丢失量还不能满足关键行业对关键数据容灾的要求。</p></blockquote><h3 id="五级-实时数据备份"><a href="#五级-实时数据备份" class="headerlink" title="五级 实时数据备份"></a><strong>五级 实时数据备份</strong></h3><blockquote><p>在前面几个级别的基础上使用了硬件的镜像技术和软件的数据复制技术，可以实现在应用站点与备份站点的数据都被更新。数据在两</p><p>个站点之间相互镜像，由远程异步提交来同步，因为关键应用使用了双重在线存储，所以在灾难发生时，仅仅很小部分的数据被丢</p><p>失，恢复的时间被降低到了分钟级或秒级。</p><p>由于对存储系统和数据复制软件的要求较高，所需成本也大大增加。该方案由于既能保证不影响当前交易的进行，又能实时复制交易</p><p>产生的数据到异地，所以这一层次的方案是目前应用较常见的一类产品容灾解决方案。</p></blockquote><h3 id="六级-零数据丢失"><a href="#六级-零数据丢失" class="headerlink" title="六级 零数据丢失"></a><strong>六级 零数据丢失</strong></h3><blockquote><p>该方案是灾难恢复中较昂贵的方式，也是速度较快的恢复方式，它是灾难恢复的级别中的佼佼者，利用专用的存储网络将关键数据同</p><p>步镜像至备份中心，数据不仅在本地进行确认，而且需要在异地（备份）进行确认。</p><p>因为，数据是镜像地写到两个站点，所以灾难发生时异地容灾系统保留了全部的数据，实现零数据丢失。要求实现远程实时备份，数</p><p>据零丢失；备份中心具备与生产中心一致的处理能力，可实现业务的实时无缝切换，即业务接管。</p></blockquote><h2 id="鲲鹏通用计算型KC1"><a href="#鲲鹏通用计算型KC1" class="headerlink" title="鲲鹏通用计算型KC1"></a>鲲鹏通用计算型KC1</h2><blockquote><ul><li>CPU:MEM  =  1:2/1:4</li><li>最高30G内网带宽</li><li>400万PPS</li></ul></blockquote><br><div class="note success"><p>Tai Shan5280存储型服务器支持RAID 0/1/10/1E/5/50/6/60</p></div><br>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;华为应用开发学习笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="华为认证" scheme="https://imqinhao.cn/categories/%E5%8D%8E%E4%B8%BA%E8%AE%A4%E8%AF%81/"/>
    
    
  </entry>
  
  <entry>
    <title>Python实现《三国演义》人物出场次数统计</title>
    <link href="https://imqinhao.cn/2020/05/25/Python-4/"/>
    <id>https://imqinhao.cn/2020/05/25/Python-4/</id>
    <published>2020-05-25T03:11:11.000Z</published>
    <updated>2020-05-25T03:54:04.147Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用Python的第三方库jieba库实现《三国演义》人物出场次数Top20统计。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">txt = open(<span class="string">"ThreeKingdoms.txt"</span>,<span class="string">"r"</span>, encoding=<span class="string">"gb18030"</span>).read()</span><br><span class="line">exclude = &#123;<span class="string">"将军"</span>,<span class="string">"却说"</span>,<span class="string">"二人"</span>,<span class="string">"不可"</span>,<span class="string">"不能"</span>,<span class="string">"如此"</span>,<span class="string">"荆州"</span>,<span class="string">"商议"</span>,<span class="string">"如何"</span>,<span class="string">"主公"</span>,\</span><br><span class="line">           <span class="string">"军士"</span>,<span class="string">"左右"</span>,<span class="string">"军马"</span>,<span class="string">"引兵"</span>,<span class="string">"次日"</span>,<span class="string">"大喜"</span>,<span class="string">"天下"</span>,<span class="string">"东吴"</span>,<span class="string">"于是"</span>,<span class="string">"今日"</span>,\</span><br><span class="line">           <span class="string">"不敢"</span>,<span class="string">"魏兵"</span>,<span class="string">"陛下"</span>,<span class="string">"人马"</span>,<span class="string">"都督"</span>,<span class="string">"一人"</span>,<span class="string">"不知"</span>,<span class="string">"汉中"</span>,<span class="string">"众将"</span>,<span class="string">"只见"</span>,\</span><br><span class="line">           <span class="string">"后主"</span>,<span class="string">"蜀兵"</span>,<span class="string">"大叫"</span>,<span class="string">"上马"</span>,<span class="string">"先主"</span>,<span class="string">"太守"</span>,<span class="string">"此人"</span>,<span class="string">"天子"</span>,<span class="string">"后人"</span>,<span class="string">"背后"</span>,\</span><br><span class="line">           <span class="string">"城中"</span>,<span class="string">"何不"</span>,<span class="string">"一面"</span>,<span class="string">"忽报"</span>,<span class="string">"大军"</span>,<span class="string">"先生"</span>,<span class="string">"何故"</span>,<span class="string">"夫人"</span>,<span class="string">"先锋"</span>,<span class="string">"然后"</span>,\</span><br><span class="line">           <span class="string">"不如"</span>,<span class="string">"赶来"</span>,<span class="string">"原来"</span>,<span class="string">"令人"</span>,<span class="string">"江东"</span>,<span class="string">"正是"</span>,<span class="string">"徐州"</span>,<span class="string">"忽然"</span>,<span class="string">"下马"</span>,<span class="string">"喊声"</span>,\</span><br><span class="line">           <span class="string">"成都"</span>,<span class="string">"因此"</span>,<span class="string">"未知"</span>,<span class="string">"百姓"</span>,<span class="string">"大败"</span>,<span class="string">"大事"</span>,<span class="string">"一军"</span>,<span class="string">"之后"</span>,<span class="string">"不见"</span>,<span class="string">"接应"</span>,\</span><br><span class="line">           <span class="string">"起兵"</span>,<span class="string">"引军"</span>,<span class="string">"军中"</span>,<span class="string">"可以"</span>,<span class="string">"进兵"</span>,<span class="string">"大怒"</span>,<span class="string">"大惊"</span>,<span class="string">"心中"</span>,<span class="string">"以为"</span>,<span class="string">"不得"</span>,\</span><br><span class="line">           <span class="string">"下文"</span>,<span class="string">"粮草"</span>,<span class="string">"追赶"</span>,<span class="string">"分付"</span>,<span class="string">"一声"</span>,<span class="string">"分解"</span></span><br><span class="line">           &#125;</span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> len(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"诸葛亮"</span> <span class="keyword">or</span> word == <span class="string">"孔明曰"</span>:</span><br><span class="line">        rword = <span class="string">"孔明"</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"关公"</span> <span class="keyword">or</span> word == <span class="string">"云长"</span>:</span><br><span class="line">        rword = <span class="string">"关羽"</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"玄德"</span> <span class="keyword">or</span> word == <span class="string">"玄德曰"</span>:</span><br><span class="line">        rword = <span class="string">"刘备"</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">"孟德"</span> <span class="keyword">or</span> word == <span class="string">"丞相"</span>:</span><br><span class="line">        rword = <span class="string">"曹操"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rword = word</span><br><span class="line">    counts[rword] = counts.get(rword,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> exclude:</span><br><span class="line">    <span class="keyword">del</span> counts[word]</span><br><span class="line">items = list(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    word,count = items[i]</span><br><span class="line">    print(<span class="string">"&#123;0:&lt;12&#125;&#123;1:&lt;4&#125;"</span>.format(word,count))</span><br></pre></td></tr></table></figure><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200525114839.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Python的第三方库jieba库实现《三国演义》人物出场次数Top20统计。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>七段数码管带时间倒计时效果</title>
    <link href="https://imqinhao.cn/2020/05/24/Python-3/"/>
    <id>https://imqinhao.cn/2020/05/24/Python-3/</id>
    <published>2020-05-24T03:11:11.000Z</published>
    <updated>2020-05-25T03:57:42.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>带刷新时间的时间倒计时效果，使用随机数生成随机色，实现不同数字间的颜色变化。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLine</span><span class="params">(draw)</span>:</span></span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">70</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawDigit</span><span class="params">(digit,color)</span>:</span></span><br><span class="line">    turtle.pencolor(color)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.fd(<span class="number">-70</span>)</span><br><span class="line">    time.sleep(<span class="number">0.8</span>)</span><br><span class="line">    turtle.clear()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomColor</span><span class="params">()</span>:</span></span><br><span class="line">    num1 = random.random()</span><br><span class="line">    num2 = random.random()</span><br><span class="line">    num3 = random.random()</span><br><span class="line">    <span class="keyword">return</span> num1,num2,num3</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.setup(<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">-25</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    turtle.speed(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">        drawDigit(<span class="number">10</span>-i,randomColor())</span><br><span class="line">        <span class="comment"># randomColor()</span></span><br><span class="line">    turtle.write(<span class="string">"浩浩❤元元"</span>,font=(<span class="string">"Arial"</span>,<span class="number">55</span>,<span class="string">"normal"</span>),align=<span class="string">"center"</span>)</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;带刷新时间的时间倒计时效果，使用随机数生成随机色，实现不同数字间的颜色变化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>白嫖天翼云盘4T空间和1年会员</title>
    <link href="https://imqinhao.cn/2020/05/23/free-get-189vip/"/>
    <id>https://imqinhao.cn/2020/05/23/free-get-189vip/</id>
    <published>2020-05-23T04:00:00.000Z</published>
    <updated>2020-05-23T04:17:26.712Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>天翼云盘是中国电信推出的云存储服务，通过天翼云盘可多终端上传和下载、管理和分享文件。天翼网盘免费提供30G个人云空间、30G家庭云空间，单文件最大为2G。订购会员可以获得4T空间，且上传文件无大小限制。接下来我们来免费撸1年的黄金VIP会员和4T云存储空间。</p><a id="more"></a><h2 id="下载客户端"><a href="#下载客户端" class="headerlink" title="下载客户端"></a>下载客户端</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523120118.png" alt="安卓版下载"></p><h2 id="注册天翼网盘账号"><a href="#注册天翼网盘账号" class="headerlink" title="注册天翼网盘账号"></a>注册天翼网盘账号</h2><p>打开APP，点击<kbd>短信验证码登录</kbd>，勾选<kbd>登录即同意服务协议和隐私协议</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/26d2fd87bf99a5fa9070b75448b910b.jpg" alt=""></p><p>此时会跳转到<kbd>短信验证码登录</kbd>界面，<kbd>输入手机号</kbd>，点击<kbd>获取验证码</kbd>，将收到的验证码输入到验证码输入栏，点击<kbd>登录</kbd>即可注册登录成功。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/516134a47a66e7470b1287b77536964.jpg" alt=""></p><h2 id="获得三个月黄金会员"><a href="#获得三个月黄金会员" class="headerlink" title="获得三个月黄金会员"></a>获得三个月黄金会员</h2><p>进入软件首页，点击<kbd>活动</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/3656609eb88d907dccdaa2da9132e2c.jpg" alt=""></p><p>找到<kbd>家庭云免费赠送三个云黄金会员</kbd>活动。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/166468859c7e643be42facc03fc0713.jpg" alt=""></p><p>完成两个任务即可领取天翼网盘黄金会员。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115644.jpg" alt=""></p><h2 id="获得4T空间加1年黄金会员"><a href="#获得4T空间加1年黄金会员" class="headerlink" title="获得4T空间加1年黄金会员"></a>获得4T空间加1年黄金会员</h2><p>找到活动<kbd>1年教师尊享会员免费领</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115708.jpg" alt=""></p><p>点击<kbd>立即认证领取</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115736.jpg" alt=""></p><p>认证界面填写自己的<kbd>姓名</kbd>、<kbd>学校</kbd>、<kbd>身份证号码</kbd>，然后上传相关的资格证即可领取高达4T的云空间和1年的黄金会员。</p><div class="note success"><p>其实上面的姓名、学校、身份证号码可以随便乱填，资格证上传一张表情包都是可以通过的。</p></div><h2 id="查看会员是否到账"><a href="#查看会员是否到账" class="headerlink" title="查看会员是否到账"></a>查看会员是否到账</h2><p>退出APP，重新进入APP，然后查看会员和空间是否到账。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115802.jpg" alt=""></p><h2 id="领取更多空间"><a href="#领取更多空间" class="headerlink" title="领取更多空间"></a>领取更多空间</h2><p><kbd>每日签到</kbd>可以增大云空间容量。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200523115822.jpg" alt=""></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p><red>活动截止到6月30日结束，大家赶紧行动起来。不限速，不限速，不限速，重要的事情说三遍，大家且行且珍惜。</red></p><br><p>如果想获取更多内容欢迎关注我的公众号！</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/weixin.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;天翼云盘是中国电信推出的云存储服务，通过天翼云盘可多终端上传和下载、管理和分享文件。天翼网盘免费提供30G个人云空间、30G家庭云空间，单文件最大为2G。订购会员可以获得4T空间，且上传文件无大小限制。接下来我们来免费撸1年的黄金VIP会员和4T云存储空间。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小技巧" scheme="https://imqinhao.cn/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>七段数码管绘制系统时间</title>
    <link href="https://imqinhao.cn/2020/05/20/python-2/"/>
    <id>https://imqinhao.cn/2020/05/20/python-2/</id>
    <published>2020-05-20T12:13:14.000Z</published>
    <updated>2020-05-24T01:28:55.665Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Python代码利用turtle（海龟绘图）实现七段数码管的显示，绘制当前的系统日期。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SevennDigitsDrawV1.py</span></span><br><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawGap</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawLine</span><span class="params">(draw)</span>:</span></span><br><span class="line">    DrawGap()</span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">40</span>)</span><br><span class="line">    DrawGap()</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawDigits</span><span class="params">(digits)</span>:</span></span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    DrawLine(<span class="literal">True</span>) <span class="keyword">if</span> digits <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> DrawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DrawDate</span><span class="params">(date)</span>:</span></span><br><span class="line">    turtle.pencolor(<span class="string">"red"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> date:</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">"-"</span>:</span><br><span class="line">            turtle.write(<span class="string">'年'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">"green"</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">"="</span>:</span><br><span class="line">            turtle.write(<span class="string">'月'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">"blue"</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">"+"</span>:</span><br><span class="line">            turtle.write(<span class="string">'日'</span>,font=(<span class="string">"Arial"</span>,<span class="number">18</span>,<span class="string">"normal"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            DrawDigits(eval(i))</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    turtle.setup(<span class="number">800</span>,<span class="number">300</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">-300</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    DrawDate(time.strftime(<span class="string">"%Y-%m=%d+"</span>,time.gmtime()))</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line">    </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200524092806.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python代码利用turtle（海龟绘图）实现七段数码管的显示，绘制当前的系统日期。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>网页禁止审查元素和F12</title>
    <link href="https://imqinhao.cn/2020/05/19/not-allow-F12/"/>
    <id>https://imqinhao.cn/2020/05/19/not-allow-F12/</id>
    <published>2020-05-19T14:25:11.000Z</published>
    <updated>2020-05-19T14:28:00.147Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>很多时候我们不想要自己的博客被其他人审查元素，防止其他人扒下自己的网页，获取网站内资源的真实链接，都会选择使用禁止浏览器右键查看元素或F12审查元素。</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">123</span>) &#123;</span><br><span class="line">    alert(<span class="string">"F12被禁用"</span>);</span><br><span class="line">    event.keyCode=<span class="number">0</span>;</span><br><span class="line">    event.returnValue=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">    <span class="built_in">window</span>.event.keyCode = <span class="number">505</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.event &amp;&amp; <span class="built_in">window</span>.event.keyCode == <span class="number">8</span>) &#123;</span><br><span class="line">    alert(str+<span class="string">"\n请使用Del键进行字符的删除操作！"</span>);</span><br><span class="line">    <span class="built_in">window</span>.event.returnValue=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  document.onkeydown = function()&#123;</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">      if(window.event &amp;&amp; window.event.keyCode == 123) &#123;</span></span><br><span class="line"><span class="string">          window.location="</span>about:blank<span class="string">"; //将当前窗口跳转置空白页</span></span><br><span class="line"><span class="string">          event.keyCode=0;</span></span><br><span class="line"><span class="string">          event.returnValue=false;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      if(window.event &amp;&amp; window.event.keyCode == 13) &#123;</span></span><br><span class="line"><span class="string">          window.event.keyCode = 505;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      if(window.event &amp;&amp; window.event.keyCode == 8) &#123;</span></span><br><span class="line"><span class="string">          alert(str+"</span>\n请使用Del键进行字符的删除操作！<span class="string">");</span></span><br><span class="line"><span class="string">          window.event.returnValue=false;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多时候我们不想要自己的博客被其他人审查元素，防止其他人扒下自己的网页，获取网站内资源的真实链接，都会选择使用禁止浏览器右键查看元素或F12审查元素。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小技巧" scheme="https://imqinhao.cn/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>解决pip异常:No module named &#39;pip&#39;</title>
    <link href="https://imqinhao.cn/2020/05/19/No-module-named-pip/"/>
    <id>https://imqinhao.cn/2020/05/19/No-module-named-pip/</id>
    <published>2020-05-19T13:10:00.000Z</published>
    <updated>2020-05-19T13:14:37.534Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>学习Python过程中，pip安装模块的时候提示我有新版本更新，更新之后不知道为什么就无法使用pip命令了，一直提示<kbd>ModuleNotFoundError: No module named 'pip'</kbd>。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;e:\python\lib\runpy.py&quot;, line 193, in _run_module_as_main</span><br><span class="line">    return _run_code(code, main_globals, None,</span><br><span class="line">  File &quot;e:\python\lib\runpy.py&quot;, line 86, in _run_code</span><br><span class="line">    exec(code, run_globals)</span><br><span class="line">  File &quot;E:\python\Scripts\pip.exe\__main__.py&quot;, line 5, in &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named &#39;pip&#39;</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python -m ensurepip</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519210256.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519210329.png" alt=""></p><div class="note success"><p>至此，pip命令修复完成，又可以正常使用了</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习Python过程中，pip安装模块的时候提示我有新版本更新，更新之后不知道为什么就无法使用pip命令了，一直提示&lt;kbd&gt;ModuleNotFoundError: No module named &#39;pip&#39;&lt;/kbd&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>非华为电脑使用多屏协同</title>
    <link href="https://imqinhao.cn/2020/05/19/huawei-PCManager/"/>
    <id>https://imqinhao.cn/2020/05/19/huawei-PCManager/</id>
    <published>2020-05-19T03:42:14.000Z</published>
    <updated>2020-05-19T04:10:09.386Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>绕过华为对非华为电脑管家的限制，一键安装PCManager（不需要改BOIS）</p><p>PCManager管理功能，启动、关闭、服务控制等。</p><p>提供极客模式。</p><a id="more"></a><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>具有多屏协同功能的华为或荣耀手机</p>            </div> <div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>一台带蓝牙和无线网卡的win 10电脑</p>            </div><h2 id="安装华为的电脑管家"><a href="#安装华为的电脑管家" class="headerlink" title="安装华为的电脑管家"></a>安装华为的电脑管家</h2><p>华为电脑管家的安装包大家可以关注我的微信公众号，回复“多屏协同”即可获取安装包及安装工具下载地址。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/weixin.jpg" alt=""></p><h3 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h3><p>解压之后会得到下图的文件。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200518202819.png" alt=""></p><h3 id="启动安装工具"><a href="#启动安装工具" class="headerlink" title="启动安装工具"></a>启动安装工具</h3><ol><li>将之前安装的电脑管家完全卸载，删除<kbd>C:\Program Files\Huawei\PCManager</kbd>目录所有文件。</li><li>重启电脑。</li><li><kbd>PCManagerMgr.exe</kbd>右键，以<kbd>管理员身份运行</kbd>。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519100611.png" alt=""></p><h3 id="卸载之前的版本"><a href="#卸载之前的版本" class="headerlink" title="卸载之前的版本"></a>卸载之前的版本</h3><div class="note success"><p>如果之前安装过旧版本请执行此步骤，没有安装过请跳过</p></div><p>点击<kbd>卸载</kbd>，会弹出华为电脑管家的卸载界面，点击<kbd>我要卸载</kbd>，等待卸载完成，出现<kbd>电脑管家已卸载</kbd>，点击<kbd>完成</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519101314.png" alt=""></p><h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><div class="note success"><p>卸载完成后需要重启电脑，然后再次打开工具。</p></div><h3 id="获取口令"><a href="#获取口令" class="headerlink" title="获取口令"></a>获取口令</h3><p>关注<kbd>汉客儿</kbd>的微信公众号，回复关键字<kbd>口令</kbd>，将获取到的口令复制到下图方框位置。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519101920.png" alt=""></p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>复制口令后，点击<kbd>安装</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102200.png" alt=""></p><p>点击<kbd>安装</kbd>后会出现<kbd>正在安装hw电脑管家...</kbd>，等待弹出华为电脑管家的安装界面。<red>注意：系统必须是win10的，我这里由于安装过了，用虚拟机展示的界面。</red></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102314.png" alt=""></p><p>点击<kbd>立即安装</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102434.png" alt=""></p><p>安装完成后会到工具，看到<kbd>当前管家已经xx，尽情享受吧</kbd>，此时软件已经安装完成。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519102713.png" alt=""></p><h3 id="检查服务是否运行"><a href="#检查服务是否运行" class="headerlink" title="检查服务是否运行"></a>检查服务是否运行</h3><p>检查上图中右边的服务是否是<kbd>运行中</kbd>的状态，如果是<kbd>未运行</kbd>则点击后面的<kbd>运行</kbd>按钮。</p><h2 id="连接手机"><a href="#连接手机" class="headerlink" title="连接手机"></a>连接手机</h2><p>点击左侧<kbd>我的手机</kbd>，然后点击<kbd>立即连接</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519110854.png" alt=""></p><p>选择<kbd>扫码连接</kbd>，手机打开<kbd>华为浏览器</kbd>，扫码后点击<kbd>连接</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519111026.png" alt=""></p><p>点击<kbd>连接</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/5382a561154e1d7697f13ce372a3516.jpg" alt=""></p><p>点击<kbd>允许</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519111423.png" alt=""></p><p>连接成功之后会出现手机的型号以及存储空间信息。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519113119.png" alt=""></p><h2 id="多屏协同"><a href="#多屏协同" class="headerlink" title="多屏协同"></a>多屏协同</h2><p>点击<kbd>多屏协同</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519113243.png" alt=""></p><p>此时就可以使用<kbd>多屏协同</kbd>功能啦。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20200519113426.png" alt=""></p><div class="note success"><p>建议电脑和手机处于5GHz频带的wifi可提升流畅度。</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;绕过华为对非华为电脑管家的限制，一键安装PCManager（不需要改BOIS）&lt;/p&gt;
&lt;p&gt;PCManager管理功能，启动、关闭、服务控制等。&lt;/p&gt;
&lt;p&gt;提供极客模式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件破解" scheme="https://imqinhao.cn/categories/%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    
    
  </entry>
  
</feed>
