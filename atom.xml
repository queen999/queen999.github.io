<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>覃浩的博客</title>
  
  <subtitle>覃浩的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://imqinhao.cn/"/>
  <updated>2021-07-11T03:52:33.556Z</updated>
  <id>https://imqinhao.cn/</id>
  
  <author>
    <name>覃浩</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDBC - SQL注入问题</title>
    <link href="https://imqinhao.cn/2021/07/10/JDBC_SQL_injection/"/>
    <id>https://imqinhao.cn/2021/07/10/JDBC_SQL_injection/</id>
    <published>2021-07-10T04:50:11.000Z</published>
    <updated>2021-07-11T03:52:33.556Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用Statement创建的对象会有SQL注入风险，使用preparedStatement代替即可解决。</p><a id="more"></a><h2 id="创建JDBCUtils类"><a href="#创建JDBCUtils类" class="headerlink" title="创建JDBCUtils类"></a><center><font color = "#3ee30e">创建JDBCUtils类</font></center></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.imqinhao.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.创建Properties集合类</span></span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            <span class="comment">// 获取src路径下的文件的方式 ---&gt; ClassLoader类加载器</span></span><br><span class="line">            ClassLoader classLoader = JDBCUtils<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()</span>;</span><br><span class="line">            URL resource = classLoader.getResource(<span class="string">"env.properties"</span>);</span><br><span class="line">            String path = resource.getPath();</span><br><span class="line">            <span class="comment">// 2.加载文件</span></span><br><span class="line">            properties.load(<span class="keyword">new</span> FileReader(path));</span><br><span class="line">            <span class="comment">// 3.获取数据，赋值</span></span><br><span class="line">            url = properties.getProperty(<span class="string">"url"</span>);</span><br><span class="line">            user = properties.getProperty(<span class="string">"user"</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">"password"</span>);</span><br><span class="line">            driver = properties.getProperty(<span class="string">"driver"</span>);</span><br><span class="line">            Class.forName(url);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 获取连接对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 关闭资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 关闭sql执行对象</span></span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 关闭连接对象</span></span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 关闭资源（重载）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写主要代码"><a href="#编写主要代码" class="headerlink" title="编写主要代码"></a><center><font color = "#3ee30e">编写主要代码</font></center></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.imqinhao.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.imqinhao.util.JDBCUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo10</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> isSuccess = <span class="keyword">new</span> JDBCDemo10().login();</span><br><span class="line">        <span class="keyword">new</span> JDBCDemo10().isSuccess(isSuccess);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 用户登录</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.print(<span class="string">"请输入用户名："</span>);</span><br><span class="line">        String username = scanner.nextLine();</span><br><span class="line">        System.out.print(<span class="string">"请输入密码："</span>);</span><br><span class="line">        String password = scanner.nextLine();</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接对象</span></span><br><span class="line">            connection = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.定义sql语句</span></span><br><span class="line">            String sql = <span class="string">"select * from user where username = '"</span> + username + <span class="string">"'and password = '"</span> + password + <span class="string">"'"</span>;</span><br><span class="line">            <span class="comment">// 3.获取sql执行对象</span></span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            resultSet = statement.executeQuery(sql);</span><br><span class="line"><span class="comment">//            if(resultSet.next()) &#123;</span></span><br><span class="line"><span class="comment">//                return true;</span></span><br><span class="line"><span class="comment">//            &#125; else &#123;</span></span><br><span class="line"><span class="comment">//                return false;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">            <span class="keyword">return</span> resultSet.next();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JDBCUtils.close(resultSet, statement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 判断登录是否成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">isSuccess</span><span class="params">(<span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(b) &#123;</span><br><span class="line">            System.out.println(<span class="string">"登录成功！"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"账号或密码错误！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a><center><font color = "#3ee30e">运行结果</font></center></h2><blockquote><p>请输入用户名：qinhao</p><p>请输入密码：lareina520</p><p>登录成功！</p></blockquote><h2 id="SQL注入问题"><a href="#SQL注入问题" class="headerlink" title="SQL注入问题"></a><center><font color = "#3ee30e">SQL注入问题</font></center></h2><blockquote><p>请输入用户名：gjlkahgka</p><p>请输入密码：a’ or ‘a’ = ‘a</p><p>登录成功！</p></blockquote><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a><center><font color = "#3ee30e">解决方案</font></center></h2><p>解决方案是使用<kbd>preparedStatement</kbd>代替<kbd>Statement</kbd>。</p><h2 id="修改后的代码"><a href="#修改后的代码" class="headerlink" title="修改后的代码"></a><center><font color = "#3ee30e">修改后的代码</font></center></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.imqinhao.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.imqinhao.util.JDBCUtils;</span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.protocol.Resultset;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo11</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">boolean</span> isSuccess = <span class="keyword">new</span> JDBCDemo11().login(username, password);</span><br><span class="line">        <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">            System.out.println(<span class="string">"登录成功！"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"用户名或密码错误！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.print(<span class="string">"请输入用户名："</span>);</span><br><span class="line">        String username = scanner.nextLine();</span><br><span class="line">        System.out.print(<span class="string">"请输入密码："</span>);</span><br><span class="line">        String password = scanner.nextLine();</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultset = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接对象</span></span><br><span class="line">            connection = JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.定义sql</span></span><br><span class="line">            String sql = <span class="string">"select * from user where username = ? and password = ?"</span>;</span><br><span class="line">            <span class="comment">// 3.获取sql执行对象</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 4.给sql赋值</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, username);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, password);</span><br><span class="line">            <span class="comment">// 5.执行sql</span></span><br><span class="line">            resultset = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">// 6.处理结果</span></span><br><span class="line">            <span class="keyword">return</span> resultset.next();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JDBCUtils.close(resultset, preparedStatement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a><center><font color = "#3ee30e">运行结果</font></center></h2><blockquote><p>请输入用户名：gjlkahgka</p><p>请输入密码：a’ or ‘a’ = ‘a</p><p>用户名或密码错误！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Statement创建的对象会有SQL注入风险，使用preparedStatement代替即可解决。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://imqinhao.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL中忘记了root用户的密码解决方法</title>
    <link href="https://imqinhao.cn/2021/07/08/mysql_forget_root_password/"/>
    <id>https://imqinhao.cn/2021/07/08/mysql_forget_root_password/</id>
    <published>2021-07-08T04:50:11.000Z</published>
    <updated>2021-07-09T07:25:24.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>MySQL中忘记了root用户的密码解决方法</p><a id="more"></a><h2 id="停止MySQL服务"><a href="#停止MySQL服务" class="headerlink" title="停止MySQL服务"></a><center><font color="#33ee33" size="7px">停止MySQL服务</font></center></h2><h3 id="以管理员身份运行cmd命令行"><a href="#以管理员身份运行cmd命令行" class="headerlink" title="以管理员身份运行cmd命令行"></a><center><font color="#ee33ee" size="6px">以管理员身份运行cmd命令行</font></center></h3><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210709150135.png" alt=""></p><h3 id="停止MySQL服务-1"><a href="#停止MySQL服务-1" class="headerlink" title="停止MySQL服务"></a><center><font color="#ee33ee" size="6px">停止MySQL服务</font></center></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210709150740.png" alt=""></p><h2 id="使用无验证方式启动MySQL服务"><a href="#使用无验证方式启动MySQL服务" class="headerlink" title="使用无验证方式启动MySQL服务"></a><center><font color="#33ee33" size="7px">使用无验证方式启动MySQL服务</font></center></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --skip-grant-tables</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210709150950.png" alt=""></p><blockquote><p>此时光标闪烁，不要关闭cmd窗口，新打开一个cmd窗口。</p></blockquote><h2 id="打开新的cmd窗口"><a href="#打开新的cmd窗口" class="headerlink" title="打开新的cmd窗口"></a><center><font color="#33ee33" size="7px">打开新的cmd窗口</font></center></h2><h3 id="登录数据库"><a href="#登录数据库" class="headerlink" title="登录数据库"></a><center><font color="#ee33ee" size="6px">登录数据库</font></center></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a><center><font color="#ee33ee" size="6px">修改密码</font></center></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> mysql;</span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(<span class="string">"新的密码"</span>) <span class="keyword">where</span> <span class="keyword">user</span> = <span class="string">"root"</span>;</span><br></pre></td></tr></table></figure><h2 id="关掉两个cmd窗口"><a href="#关掉两个cmd窗口" class="headerlink" title="关掉两个cmd窗口"></a><center><font color="#33ee33" size="7px">关掉两个cmd窗口</font></center></h2><p>将两个cmd窗口全部关掉，特别是执行了<kbd>mysqld --skip-grant-tables</kbd>命令的cmd窗口。</p><h2 id="打开任务管理器"><a href="#打开任务管理器" class="headerlink" title="打开任务管理器"></a><center><font color="#33ee33" size="7px">打开任务管理器</font></center></h2><p>找到<kbd>mysql.exe</kbd>的进程，将其强制结束。</p><h2 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a><center><font color="#33ee33" size="7px">启动MySQL服务</font></center></h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210709151335.png" alt=""></p><h2 id="使用新密码登录数据库"><a href="#使用新密码登录数据库" class="headerlink" title="使用新密码登录数据库"></a><center><font color="#33ee33" size="7px">使用新密码登录数据库</font></center></h2><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210709151549.png" alt=""></p><blockquote><p>登录成功！！！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL中忘记了root用户的密码解决方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://imqinhao.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL DQL语句-1</title>
    <link href="https://imqinhao.cn/2021/07/07/mysql_dql_1/"/>
    <id>https://imqinhao.cn/2021/07/07/mysql_dql_1/</id>
    <published>2021-07-07T04:50:11.000Z</published>
    <updated>2021-07-07T05:40:35.409Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li>语法</li><li>基础查询<ol><li>多个字段的查询</li><li>去除重复</li><li>计算列</li><li>起别名</li></ol></li></ol><a id="more"></a><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student3 (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,<span class="comment">-- 编号</span></span><br><span class="line"><span class="keyword">NAME</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>), <span class="comment">-- 姓名</span></span><br><span class="line">age <span class="built_in">INT</span>, <span class="comment">-- 年龄</span></span><br><span class="line">sex <span class="built_in">VARCHAR</span>(<span class="number">5</span>),<span class="comment">-- 性别</span></span><br><span class="line">address <span class="built_in">VARCHAR</span>(<span class="number">100</span>),<span class="comment">-- 地址</span></span><br><span class="line">math <span class="built_in">INT</span>, <span class="comment">-- 数学</span></span><br><span class="line">english <span class="built_in">INT</span> <span class="comment">-- 英语</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> </span><br><span class="line">student3(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) </span><br><span class="line"><span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="string">'马云'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'杭州'</span>,<span class="number">66</span>,<span class="number">78</span>),</span><br><span class="line"> (<span class="number">2</span>,<span class="string">'马化腾'</span>,<span class="number">45</span>,<span class="string">'男'</span>,<span class="string">'深圳'</span>,<span class="number">98</span>,<span class="number">87</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">'马景涛'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">56</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">'柳岩'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'湖南'</span>,<span class="number">76</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">'柳青'</span>,<span class="number">20</span>,<span class="string">'男'</span>,<span class="string">'湖南'</span>,<span class="number">86</span>,<span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">'刘德华'</span>,<span class="number">57</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">'马德'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">'德玛西亚'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'南京'</span>,<span class="number">56</span>,<span class="number">65</span>);</span><br></pre></td></tr></table></figure><h2 id="查看所有数据"><a href="#查看所有数据" class="headerlink" title="查看所有数据"></a>查看所有数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707131243.png" alt=""></p><h2 id="查询年龄和姓名"><a href="#查询年龄和姓名" class="headerlink" title="查询年龄和姓名"></a>查询年龄和姓名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 姓名 和 年龄</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">NAME</span>,<span class="comment">-- 姓名</span></span><br><span class="line">age <span class="comment"># 年龄</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">student3;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707131413.png" alt=""></p><h2 id="查询所有的地址"><a href="#查询所有的地址" class="headerlink" title="查询所有的地址"></a>查询所有的地址</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有的地址</span></span><br><span class="line"><span class="keyword">SELECT</span> address <span class="keyword">FROM</span> student3;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707131511.png" alt=""></p><h2 id="去除重复的结果集"><a href="#去除重复的结果集" class="headerlink" title="去除重复的结果集"></a>去除重复的结果集</h2><blockquote><p>使用distinct关键字去除重复的结果集。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> address <span class="keyword">FROM</span> student3;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707131655.png" alt=""></p><h2 id="计算英语和数学的分数之和"><a href="#计算英语和数学的分数之和" class="headerlink" title="计算英语和数学的分数之和"></a>计算英语和数学的分数之和</h2><h3 id="无null参与运算"><a href="#无null参与运算" class="headerlink" title="无null参与运算"></a>无null参与运算</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span>,math,english,math + english <span class="keyword">FROM</span> student3;</span><br></pre></td></tr></table></figure><h3 id="有null参与运算"><a href="#有null参与运算" class="headerlink" title="有null参与运算"></a>有null参与运算</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span>,math,english,math + <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) <span class="keyword">FROM</span> student3;</span><br></pre></td></tr></table></figure><blockquote><p>如果有null参与的运算，计算结果都为null</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707131942.png" alt=""></p><h2 id="起别名"><a href="#起别名" class="headerlink" title="起别名"></a>起别名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span> 姓名,math 数学,english 英语, math+<span class="keyword">IFNULL</span>(english,<span class="number">0</span>) <span class="keyword">AS</span> 总分 <span class="keyword">FROM</span> student3;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707131917.png" alt=""></p><h2 id="查询年龄大于20岁的人"><a href="#查询年龄大于20岁的人" class="headerlink" title="查询年龄大于20岁的人"></a>查询年龄大于20岁的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄大于20</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age &gt; <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132034.png" alt=""></p><h2 id="查询年龄大于等于20的人"><a href="#查询年龄大于等于20的人" class="headerlink" title="查询年龄大于等于20的人"></a>查询年龄大于等于20的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄大于等于20</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age &gt;= <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132130.png" alt=""></p><h2 id="查询年龄等于20的人"><a href="#查询年龄等于20的人" class="headerlink" title="查询年龄等于20的人"></a>查询年龄等于20的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄等于20</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132213.png" alt=""></p><h2 id="查询年龄不等于20的人"><a href="#查询年龄不等于20的人" class="headerlink" title="查询年龄不等于20的人"></a>查询年龄不等于20的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄不等于20</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age &lt;&gt; <span class="number">20</span>;<span class="comment"># 方式1</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age != <span class="number">20</span>;<span class="comment"># 方式2</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132317.png" alt=""></p><h2 id="查询年龄大于等于20小于等于30的人"><a href="#查询年龄大于等于20小于等于30的人" class="headerlink" title="查询年龄大于等于20小于等于30的人"></a>查询年龄大于等于20小于等于30的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄大于等于20 小于等于30</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age &gt;= <span class="number">20</span> &amp;&amp; age &lt;= <span class="number">30</span>;<span class="comment"># 方式1</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age &gt;= <span class="number">20</span> <span class="keyword">AND</span> age &lt;= <span class="number">30</span>;<span class="comment"># 方式2</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age <span class="keyword">BETWEEN</span> <span class="number">20</span> <span class="keyword">AND</span> <span class="number">30</span>;<span class="comment"># 方式3，推荐</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132357.png" alt=""></p><h2 id="查询年龄为22岁，18岁，25岁的人"><a href="#查询年龄为22岁，18岁，25岁的人" class="headerlink" title="查询年龄为22岁，18岁，25岁的人"></a>查询年龄为22岁，18岁，25岁的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄22岁，18岁，25岁的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age = <span class="number">22</span> <span class="keyword">OR</span> age = <span class="number">18</span> <span class="keyword">OR</span> age = <span class="number">25</span>;<span class="comment"># 方式1</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> age <span class="keyword">IN</span> (<span class="number">22</span>,<span class="number">18</span>,<span class="number">25</span>);<span class="comment"># 方式2</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132532.png" alt=""></p><h2 id="查询英语成绩为null的人"><a href="#查询英语成绩为null的人" class="headerlink" title="查询英语成绩为null的人"></a>查询英语成绩为null的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询英语成绩为null</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132610.png" alt=""></p><h2 id="查询英语成绩不为null的人"><a href="#查询英语成绩不为null的人" class="headerlink" title="查询英语成绩不为null的人"></a>查询英语成绩不为null的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询英语成绩不为null</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132729.png" alt=""></p><h2 id="查询姓马的有哪些"><a href="#查询姓马的有哪些" class="headerlink" title="查询姓马的有哪些"></a>查询姓马的有哪些</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询姓马的有哪些</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> <span class="keyword">NAME</span> <span class="keyword">LIKE</span> <span class="string">"马%"</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132828.png" alt=""></p><h2 id="查询姓名第二个字是化的人"><a href="#查询姓名第二个字是化的人" class="headerlink" title="查询姓名第二个字是化的人"></a>查询姓名第二个字是化的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询姓名第二个字是化的人</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> <span class="keyword">NAME</span> <span class="keyword">LIKE</span> <span class="string">"_化%"</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132901.png" alt=""></p><h2 id="查询姓名是三个字的人"><a href="#查询姓名是三个字的人" class="headerlink" title="查询姓名是三个字的人"></a>查询姓名是三个字的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询姓名是三个字的人</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> <span class="keyword">NAME</span> <span class="keyword">LIKE</span> <span class="string">"___"</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707132936.png" alt=""></p><h2 id="查询姓名中包含德的人"><a href="#查询姓名中包含德的人" class="headerlink" title="查询姓名中包含德的人"></a>查询姓名中包含德的人</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询姓名中包含德的人</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student3 <span class="keyword">WHERE</span> <span class="keyword">NAME</span> <span class="keyword">LIKE</span> <span class="string">"%德%"</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210707133017.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;li&gt;基础查询&lt;ol&gt;
&lt;li&gt;多个字段的查询&lt;/li&gt;
&lt;li&gt;去除重复&lt;/li&gt;
&lt;li&gt;计算列&lt;/li&gt;
&lt;li&gt;起别名&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://imqinhao.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL 8解决timestamp类型插入数据不自动添加时间戳</title>
    <link href="https://imqinhao.cn/2021/07/06/mysql_question_1/"/>
    <id>https://imqinhao.cn/2021/07/06/mysql_question_1/</id>
    <published>2021-07-06T04:50:11.000Z</published>
    <updated>2021-07-06T09:29:55.336Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>解决MySQL  8创建表使用timestamp类型插入数据不自动添加时间戳的问题。</p><a id="more"></a><p>今天，创建表的时候使用以下语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student(</span><br><span class="line">id int,</span><br><span class="line">    stu_name varchar(32),</span><br><span class="line">    age int,</span><br><span class="line">    score double(4,1),</span><br><span class="line">    birthday date,</span><br><span class="line">    insert_time timestamp</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>创建成功之后我们尝试插入数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO student(id,stu_name,age) VALUES(1,&quot;宋祖儿&quot;,23);</span><br></pre></td></tr></table></figure><p>接下来我们查询以下<kbd>student</kbd>表中的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from student;</span><br></pre></td></tr></table></figure><p>我们惊奇的发现，结果竟然是这样：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210706172015.png" alt=""></p><p>为什么我们的<kbd>insert_time</kbd>设置的是<kbd>timestamp</kbd>类型，但是却没有自动添加时间戳呢？</p><blockquote><p>原来是因为timestamp的默认中没有CURRENT_TIMESTAMP选项。</p></blockquote><p>那么我们如何解决呢？</p><blockquote><p>那么我想到的方法就是在创建表的时候直接指定不就好了吗，说干就干。</p></blockquote><p>接下来我们先删除表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE student;</span><br></pre></td></tr></table></figure><p>紧接着，我们重新来创建表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student(</span><br><span class="line">id int,</span><br><span class="line">    stu_name varchar(32),</span><br><span class="line">    age int,</span><br><span class="line">    score double(4,1),</span><br><span class="line">    birthday date,</span><br><span class="line">    insert_time timestamp(0) DEFAULT CURRENT_TIMESTAMP(0);</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>我们先检查一下表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC student;</span><br></pre></td></tr></table></figure><p>可以看到：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210706172603.png" alt=""></p><p>这次应该就没问题了，那么我们来插入一条数据看看：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210706172713.png" alt=""></p><p>ok，完美解决！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决MySQL  8创建表使用timestamp类型插入数据不自动添加时间戳的问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://imqinhao.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Java - 判断方法的正确重载</title>
    <link href="https://imqinhao.cn/2021/06/24/OverLoad_1/"/>
    <id>https://imqinhao.cn/2021/06/24/OverLoad_1/</id>
    <published>2021-06-24T12:40:00.000Z</published>
    <updated>2021-06-24T13:46:44.636Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>判断哪些方法是重载关系</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;&#125;<span class="comment">// 正确重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;&#125;<span class="comment">// 正确重载</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;&#125;<span class="comment">// 代码报错：和第8行冲突</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">int</span> b)</span></span>&#123;&#125;<span class="comment">// 正确重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span></span>&#123;&#125;<span class="comment">// 代码报错：和第6行冲突</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">double</span> d)</span></span>&#123;&#125;<span class="comment">// 代码报错：和第5行冲突</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OPEN</span><span class="params">()</span></span>&#123;&#125;<span class="comment">// 代码正确不会报错，但是并不是有效重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;&#125;<span class="comment">// 代码报错：和第3行冲突</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;判断哪些方法是重载关系&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://imqinhao.cn/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机内存数值存储方式</title>
    <link href="https://imqinhao.cn/2021/05/22/memory_save_number/"/>
    <id>https://imqinhao.cn/2021/05/22/memory_save_number/</id>
    <published>2021-05-22T09:02:14.000Z</published>
    <updated>2021-05-26T10:38:11.078Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>计算机内存数值存储方式：</p><ol><li>原码</li><li>反码</li><li>补码</li><li>补码的意义</li><li>数值溢出</li></ol><a id="more"></a><h2 id="计算机内存数值存储方式"><a href="#计算机内存数值存储方式" class="headerlink" title="计算机内存数值存储方式"></a><center><font color="#00ff00" size="7px">计算机内存数值存储方式</font></center></h2><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a><center><font color="#ee00e1" size="6px">原码</font></center></h3><p>一个数的原码(原始的二进制码)有如下特点：</p><blockquote><ol><li>最高位做为符号位，0表示正,为1表示负</li><li>其它数值部分就是数值本身绝对值的二进制数</li><li>负数的原码是在其绝对值的基础上，最高位变为1</li></ol></blockquote><p>下面数值以1字节的大小描述：</p><table><thead><tr><th><strong>十进制数</strong></th><th><strong>原码</strong></th></tr></thead><tbody><tr><td>+15</td><td>0000 1111</td></tr><tr><td>-15</td><td>1000 1111</td></tr><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>1000 0000</td></tr></tbody></table><blockquote><p>原码表示法简单易懂，与带符号数本身转换方便，只要符号还原即可，但当两个正数相减或不同符号数相加时，必须比较两个数哪个绝对值大，才能决定谁减谁，才能确定结果是正还是负，所以原码不便于加减运算。</p></blockquote><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a><center><font color="#ee00e1" size="6px">反码</font></center></h3><ul><li>对于正数，反码与原码相同</li><li>对于负数，符号位不变，其它部分取反(1变0,0变1)</li></ul><table><thead><tr><th>十进制数</th><th>反码</th></tr></thead><tbody><tr><td>+15</td><td>0000  1111</td></tr><tr><td>-15</td><td>1111  0000</td></tr><tr><td>+0</td><td>0000  0000</td></tr><tr><td>-0</td><td>1111  1111</td></tr></tbody></table><blockquote><p>反码运算也不方便，通常用来作为求补码的中间过渡。</p></blockquote><h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a><center><font color="#ee00e1" size="6px">补码</font></center></h3><p><strong><font color="red">在计算机系统中，数值一律用补码来存储。</font></strong></p><p>补码特点：</p><blockquote><ol><li>对于正数，原码、反码、补码相同</li><li>对于负数，其补码为它的反码加1</li><li>补码符号位不动，其他位求反，最后整个数加1，得到原码 </li></ol></blockquote><table><thead><tr><th><strong>十进制数</strong></th><th><strong>补码</strong></th></tr></thead><tbody><tr><td>+15</td><td>0000 1111</td></tr><tr><td>-15</td><td>1111 0001</td></tr><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>0000 0000</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>  a = <span class="number">-15</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%x\n"</span>, a);</span><br><span class="line"><span class="comment">//结果为 fffffff1</span></span><br><span class="line"><span class="comment">//fffffff1对应的二进制：1111 1111 1111 1111 1111 1111 1111 0001</span></span><br><span class="line"><span class="comment">//符号位不变，其它取反：1000 0000 0000 0000 0000 0000 0000 1110</span></span><br><span class="line"><span class="comment">//上面加1：1000 0000 0000 0000 0000 0000 0000 1111  最高位1代表负数，就是-15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="补码的意义"><a href="#补码的意义" class="headerlink" title="补码的意义"></a><center><font color="#ee00e1" size="6px">补码的意义</font></center></h3><p>示例1：用8位二进制数分别表示+0和-0</p><table><thead><tr><th><strong>十进制数</strong></th><th><strong>原码</strong></th></tr></thead><tbody><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>1000 0000</td></tr></tbody></table><table><thead><tr><th><strong>十进制数</strong></th><th><strong>反码</strong></th></tr></thead><tbody><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>1111 1111</td></tr></tbody></table><p>不管以原码方式存储，还是以反码方式存储，0也有两种表示形式。为什么同样一个0有两种不同的表示方法呢？</p><p>但是如果以补码方式存储，补码统一了零的编码：</p><table><thead><tr><th><strong>十进制数</strong></th><th><strong>补码</strong></th></tr></thead><tbody><tr><td>+0</td><td>0000 0000</td></tr><tr><td>-0</td><td>10000 0000由于只用8位描述，最高位1丢弃，变为0000 0000</td></tr></tbody></table><p>示例2：计算9-6的结果</p><p>以原码方式相加：</p><table><thead><tr><th><strong>十进制数</strong></th><th><strong>原码</strong></th></tr></thead><tbody><tr><td>9</td><td>0000 1001</td></tr><tr><td>-6</td><td>1000 0110</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526155047.png" alt=""></p><div class="note success"><p>结果为-15，不正确。</p></div><p>以补码方式相加：</p><table><thead><tr><th><strong>十进制数</strong></th><th><strong>补码</strong></th></tr></thead><tbody><tr><td>9</td><td>0000 1001</td></tr><tr><td>-6</td><td>1111 1010</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526155104.png" alt=""></p><div class="note success"><p>最高位的1溢出</p></div><p><strong>在计算机系统中，数值一律用补码来存储</strong>，主要原因是：</p><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>统一了零的编码</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>将符号位和其它位统一处理</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>将减法运算转变为加法运算</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>两个用补码表示的数相加时，如果最高位(符号位)有进位，则进位被舍弃</p>            </div><h3 id="数值溢出"><a href="#数值溢出" class="headerlink" title="数值溢出"></a><center><font color="#ee00e1" size="6px">数值溢出</font></center></h3><div class="note success"><p>当超过一个数据类型能够存放最大的范围时，数值会溢出。</p></div><p>有符号位最高位溢出的区别：符号位溢出会导致数的正负发生改变，但最高位的溢出会导致最高位丢失。</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>取值范围</strong></th></tr></thead><tbody><tr><td>char</td><td>1字节</td><td>-128到 127(-27  ~ 27-1)</td></tr><tr><td>unsigned char</td><td>1字节</td><td>0 到 255(0 ~ 28-1)</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line"><span class="comment">//符号位溢出会导致数的正负发生改变</span></span><br><span class="line">ch = <span class="number">0x7f</span> + <span class="number">2</span>; <span class="comment">//127+2</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ch);</span><br><span class="line"><span class="comment">//0111 1111</span></span><br><span class="line"><span class="comment">//+2后 1000 0001，这是负数补码，其原码为 1111 1111，结果为-127</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//最高位的溢出会导致最高位丢失</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ch2;</span><br><span class="line">ch2 = <span class="number">0xff</span>+<span class="number">1</span>; <span class="comment">//255+1</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%u\n"</span>, ch2);</span><br><span class="line"><span class="comment">//  1111 1111</span></span><br><span class="line"><span class="comment">//+1后 10000 0000， char只有8位最高位的溢出，结果为0000 0000，十进制为0</span></span><br><span class="line"></span><br><span class="line">ch2 = <span class="number">0xff</span> + <span class="number">2</span>; <span class="comment">//255+1</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%u\n"</span>, ch2);</span><br><span class="line"><span class="comment">//  1111 1111</span></span><br><span class="line"><span class="comment">//+1后 10000 0001， char只有8位最高位的溢出，结果为0000 0001，十进制为1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;计算机内存数值存储方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原码&lt;/li&gt;
&lt;li&gt;反码&lt;/li&gt;
&lt;li&gt;补码&lt;/li&gt;
&lt;li&gt;补码的意义&lt;/li&gt;
&lt;li&gt;数值溢出&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>进制</title>
    <link href="https://imqinhao.cn/2021/05/21/Base/"/>
    <id>https://imqinhao.cn/2021/05/21/Base/</id>
    <published>2021-05-21T08:02:14.000Z</published>
    <updated>2021-05-26T10:37:57.896Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>进制</p><ol><li>二进制</li><li>八进制</li><li>十六进制</li><li>C语言如何表示相应进制数</li></ol><a id="more"></a><h2 id="进制"><a href="#进制" class="headerlink" title="进制"></a><center><font color="#ff00e0" size="7px">进制</font></center></h2><p>进制也就是进位制，是人们规定的一种进位方法。 对于任何一种进制—X进制，就表示某一位置上的数运算时是逢X进一位。 十进制是逢十进一，十六进制是逢十六进一，二进制就是逢二进一，以此类推，x进制就是逢x进位。</p><table><thead><tr><th><strong>十进制</strong></th><th><strong>二进制</strong></th><th><strong>八进制</strong></th><th><strong>十六进制</strong></th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td>2</td><td>10</td><td>2</td><td>2</td></tr><tr><td>3</td><td>11</td><td>3</td><td>3</td></tr><tr><td>4</td><td>100</td><td>4</td><td>4</td></tr><tr><td>5</td><td>101</td><td>5</td><td>5</td></tr><tr><td>6</td><td>110</td><td>6</td><td>6</td></tr><tr><td>7</td><td>111</td><td>7</td><td>7</td></tr><tr><td>8</td><td>1000</td><td>10</td><td>8</td></tr><tr><td>9</td><td>1001</td><td>11</td><td>9</td></tr><tr><td>10</td><td>1010</td><td>12</td><td>A</td></tr><tr><td>11</td><td>1011</td><td>13</td><td>B</td></tr><tr><td>12</td><td>1100</td><td>14</td><td>C</td></tr><tr><td>13</td><td>1101</td><td>15</td><td>D</td></tr><tr><td>14</td><td>1110</td><td>16</td><td>E</td></tr><tr><td>15</td><td>1111</td><td>17</td><td>F</td></tr><tr><td>16</td><td>10000</td><td>20</td><td>10</td></tr></tbody></table><h3 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a><center><font color="#00ffa0" size="6px">二进制</font></center></h3><p>二进制是计算技术中广泛采用的一种数制。二进制数据是用0和1两个数码来表示的数。它的基数为2，进位规则是“<kbd>逢二进一</kbd>”，借位规则是“<kbd>借一当二</kbd>”。</p><br><p>当前的计算机系统使用的基本上是二进制系统，<font color="red">数据在计算机中主要是以补码的形式存储的。</font></p><table><thead><tr><th><strong>术语</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>bit(比特)</td><td>一个二进制代表一位，一个位只能表示0或1两种状态。数据传输是习惯以“位”（bit）为单位。</td></tr><tr><td>Byte(字节)</td><td>一个字节为8个二进制，称为8位，计算机中存储的最小单位是字节。数据存储是习惯以“字节”（Byte）为单位。</td></tr><tr><td>WORD(双字节)</td><td>2个字节，16位</td></tr><tr><td>DWORD</td><td>两个WORD，4个字节，32位</td></tr><tr><td>1b</td><td>1bit，1位</td></tr><tr><td>1B</td><td>1Byte,1字节，8位</td></tr><tr><td>1k，1K</td><td>1024</td></tr><tr><td>1M(1兆)</td><td>1024k, 1024*1024</td></tr><tr><td>1G</td><td>1024M</td></tr><tr><td>1T</td><td>1024G</td></tr><tr><td>1Kb(千位)</td><td>1024bit,1024位</td></tr><tr><td>1KB(千字节)</td><td>1024Byte，1024字节</td></tr><tr><td>1Mb(兆位)</td><td>1024Kb = 1024 * 1024bit</td></tr><tr><td>1MB(兆字节)</td><td>1024KB = 1024 * 1024Byte</td></tr></tbody></table><h4 id="十进制转化二进制的方法"><a href="#十进制转化二进制的方法" class="headerlink" title="十进制转化二进制的方法"></a><center><font color="#00f0ff" size="5px">十进制转化二进制的方法</font></center></h4><p>用十进制数除以2，分别取余数和商数，商数为0的时候，将余数倒着数就是转化后的结果。 </p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526182225.png" alt=""></p><br><h4 id="十进制的小数转换成二进制"><a href="#十进制的小数转换成二进制" class="headerlink" title="十进制的小数转换成二进制"></a><center><font color="#00f0ff" size="5px">十进制的小数转换成二进制</font></center></h4><p>小数部分和2相乘，取整数，不足1取0，每次相乘都是小数部分，顺序看取整后的数就是转化后的结果。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526182301.png" alt=""></p><br><h3 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a><center><font color="#00ffa0" size="6px">八进制</font></center></h3><p>八进制，Octal，缩写OCT或O，一种以8为基数的计数法，采用0，1，2，3，4，5，6，7八个数字，逢八进1。一些编程语言中常常以数字0开始表明该数字是八进制。</p> <br><p>八进制的数和二进制数可以按位对应（<font color="red">八进制一位对应二进制三位</font>），因此常应用在计算机语言中。</p><br><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526182409.png" alt=""></p><br><h4 id="十进制转化八进制的方法"><a href="#十进制转化八进制的方法" class="headerlink" title="十进制转化八进制的方法"></a><center><font color="#00f0ff" size="5px">十进制转化八进制的方法</font></center></h4><p>用十进制数除以8，分别取余数和商数，商数为0的时候，将余数倒着数就是转化后的结果。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526182441.png" alt=""></p><br><h3 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a><center><font color="#00ffa0" size="6px">十六进制</font></center></h3><p>十六进制（英文名称：Hexadecimal），同我们日常生活中的表示法不一样，它由0-9，A-F组成，<font color="red">字母不区分大小写</font>。与10进制的对应关系是：0-9对应0-9，A-F对应10-15。</p> <br><p>十六进制的数和二进制数可以按位对应（<font color="red">十六进制一位对应二进制四位</font>），因此常应用在计算机语言中。</p><br><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526182618.png" alt=""></p><br><h4 id="十进制转化十六进制的方法"><a href="#十进制转化十六进制的方法" class="headerlink" title="十进制转化十六进制的方法"></a><center><font color="#00f0ff" size="5px">十进制转化十六进制的方法</font></center></h4><p>用十进制数除以16，分别取余数和商数，商数为0的时候，将余数倒着数就是转化后的结果。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210526182638.png" alt=""></p><br><h3 id="C语言如何表示相应进制数"><a href="#C语言如何表示相应进制数" class="headerlink" title="C语言如何表示相应进制数"></a><center><font color="#00ffa0" size="6px">C语言如何表示相应进制数</font></center></h3><table><thead><tr><th>十进制</th><th>以正常数字1-9开头，如123</th></tr></thead><tbody><tr><td>八进制</td><td>以数字0开头，如0123</td></tr><tr><td>十六进制</td><td>以0x开头，如0x123</td></tr><tr><td>二进制</td><td>C语言不能直接书写二进制数</td></tr></tbody></table> <br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>;<span class="comment">//十进制方式赋值</span></span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0123</span>;<span class="comment">//八进制方式赋值， 以数字0开头</span></span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0xABC</span>;<span class="comment">//十六进制方式赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果在printf中输出一个十进制数那么用%d，八进制用%o，十六进制是%x</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"十进制：%d\n"</span>,a );</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"八进制：%o\n"</span>, b);<span class="comment">//%o,为字母o,不是数字</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"十六进制：%x\n"</span>, c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;进制&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二进制&lt;/li&gt;
&lt;li&gt;八进制&lt;/li&gt;
&lt;li&gt;十六进制&lt;/li&gt;
&lt;li&gt;C语言如何表示相应进制数&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>时间复杂度和空间复杂度</title>
    <link href="https://imqinhao.cn/2021/05/20/Algorithm_1/"/>
    <id>https://imqinhao.cn/2021/05/20/Algorithm_1/</id>
    <published>2021-05-20T09:02:14.000Z</published>
    <updated>2021-05-22T01:15:41.409Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>算法效率的度量方式</p><p>算法时间复杂度</p><p>推导大O阶方法</p><p>线性阶</p><p>平方阶</p><p>函数调用的时间复杂度分析</p><a id="more"></a><h2 id="时间复杂度和空间复杂度"><a href="#时间复杂度和空间复杂度" class="headerlink" title="时间复杂度和空间复杂度"></a><center><font color="#ee44ff" size="6px">时间复杂度和空间复杂度</font></center></h2><h3 id="算法效率的度量方式"><a href="#算法效率的度量方式" class="headerlink" title="算法效率的度量方式"></a><center><font color="green" size="5px">算法效率的度量方式</font></center></h3><p><kbd>事后统计方法</kbd>：这种方法主要是通过设计好的测试程序和数据，利用计算机计时器对不同的算法编制的程序的运行时间进行比较，从而确定算法效率的高低。</p><p><kbd>事前分析估算方法</kbd>：在计算机程序编写前，依据统计方法对算法进行估算。</p><blockquote><p>经过总结，我们发现一个高级语言编写的程序在计算机上运行时所消耗的时间取决于下列因素：</p><ol><li>算法采用的策略，方案</li><li>编译产生的代码质量</li><li>问题的输入规模</li><li>机器执行指令的速度</li></ol></blockquote><p>由此可见，抛开这些与计算机硬件，软件有关的因素，一个程序的运行时间依赖于算法的好坏和问题的输入规模。（所谓的问题输入规模是指输入量的多少）</p><h4 id="不同算法运行时间比较"><a href="#不同算法运行时间比较" class="headerlink" title="不同算法运行时间比较"></a><center><font color="#3300ee">不同算法运行时间比较</font></center></h4><p>第一种算法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> begin_time = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100000000</span>; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end_time = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"sum = "</span> + sum);</span><br><span class="line">        System.out.println(<span class="string">"运行时间："</span> + (end_time-begin_time));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210522091454.png" alt=""></p><p>第二种算法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum;</span><br><span class="line">        <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">        sum = (<span class="number">1</span> + <span class="number">1000000000</span>) * <span class="number">100000000</span> / <span class="number">2</span> ;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"sum = "</span> + sum);</span><br><span class="line">        System.out.println(<span class="string">"运行时间："</span> + (end - begin));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210522091531.png" alt=""></p><blockquote><p>第一种算法执行了1 + (n + 1) + n = 2n + 2次。</p><p>第二种算法，是1 + 1 = 2次</p></blockquote><p>如果我们把循环看作一个整体，忽略头尾判断的开销，那么这两个算法其实就是n和1的差距。</p><p>我们研究算法的复杂度，侧重的是研究算法随着输入规模扩大增长量的一个抽象，而不是精确地定位需要执行多少次，因为如果这样的话，我们就又得考虑回编译器优化等问题。</p><h4 id="函数的渐进增长"><a href="#函数的渐进增长" class="headerlink" title="函数的渐进增长"></a><center><font color="#3300ee">函数的渐进增长</font></center></h4><p>函数的渐进增长：给定两个函数<kbd>f(n)</kbd>和<kbd>g(n)</kbd>，如果存在一个整数 N ，使得对于所有的<kbd>n > N</kbd>，f(n) 总是比 g(n) 大，那么，我们说 f(n) 的增长渐进快于 g(n) 。</p><blockquote><p>与最高次项相乘的常数并不重要，也可以忽略。</p></blockquote><p>判断一个算法的效率时，函数中的常数和其他次要项常常可以忽略，而更应该关注主项（最高项）的阶数。</p><p><font color="red">注意：判断一个算法好不好，我们只通过少量的数据是不能做出准确判断的，很容易以偏概全。</font></p><h3 id="算法时间复杂度"><a href="#算法时间复杂度" class="headerlink" title="算法时间复杂度"></a><center><font color="green" size="5px">算法时间复杂度</font></center></h3><p>算法时间复杂度的定义：在进行算法分析时，语句总的执行次数<kbd>T(n)</kbd>是关于问题规模<kbd>n</kbd>的函数，进而分析<kbd>T(n)</kbd>随<kbd>n</kbd>的变化情况而确定<kbd>T(n)</kbd>的数量级。算法的时间复杂度，也就是算法的时间量度，记作：<kbd>T(n) = O(f(n))</kbd>。它表示问题规模<kbd>n</kbd>的增大，算法执行时间的增长率和<kbd>f(n)</kbd>的增长率相同，称作<u>算法的渐进时间复杂度</u>，简称为时间复杂度。其中<kbd>f(n)</kbd>是问题规模<kbd>n</kbd>的某个函数。</p><p>用大写<font color="red">O()</font>来体现算法时间复杂度的记法，我们称之为<font color="red">大O记法</font>。</p><p>一般情况下，随着输入规模 n 的增大，T(n) 增长最慢的算法为<font color="red">最优算法</font>。</p><h3 id="推导大O阶方法"><a href="#推导大O阶方法" class="headerlink" title="推导大O阶方法"></a><center><font color="green" size="5px">推导大O阶方法</font></center></h3><p>如何分析一个算法的时间复杂度呢？即如何推导大O阶呢？</p><ul><li>用常数1取代运行时间中的所有加法常数</li><li>在修改后的运行次数函数中，只保留最高阶项。</li><li>如果最高阶项存在且不是1，则去掉与这个项相乘的常数。</li><li>得到的足后结果就是大O阶。</li></ul><h3 id="线性阶"><a href="#线性阶" class="headerlink" title="线性阶"></a><center><font color="green" size="5px">线性阶</font></center></h3><p>一般含有非嵌套循环涉及线性阶，线性阶就是随着问题的规模n的扩大，对应计算次数呈直线增长。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">100</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"sum  = "</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这段代码，他的循环的时间复杂度为O(n)，因为循环体中的代码需要执行n次。</p><h3 id="平方阶"><a href="#平方阶" class="headerlink" title="平方阶"></a><center><font color="green" size="5px">平方阶</font></ceneter></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">100</span>;j ++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">"I love lareina!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> n等于100， 也就是说外层循环每执行一次，内层循环就执行100次，那总共程序想要从这两个循环出来，需要执行100*100次，也就是n的平方。所以这段代码的时间复杂度为O(n^2)。</p><p><font color="red">循环的时间复杂度等于循环体的复杂度乘以该循环运行的次数。</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i;j &lt; <span class="number">100</span>;j ++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">"I love lareina!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于当 i = 0 时，内循环执行了 n 次，当 i = 1时，内循环则执行 n - 1 次，当 i = n - 1时，内循环执行1次，所以总的执行次数应该是：<br>$$<br>-n + (n-1)+(n-2)+…+1 = \frac{n(n + 1)}{2}<br>$$<br>即：<br>$$<br>\frac{n(n+1)}{2}=\frac{n^2}{2}+\frac{n}{2}<br>$$<br>用推导大O的攻略，第一条忽略，因为没有常数相加。第二条只保留最高项，所以n/2这项去掉。第三条，去除与最高项相乘的常数，最终得O(n^2)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            i *= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由2^n = n得到：<br>$$<br>x = log_2n<br>$$<br>所以这个循环的时间复杂度为O(logn)。</p><h3 id="函数调用的时间复杂度分析"><a href="#函数调用的时间复杂度分析" class="headerlink" title="函数调用的时间复杂度分析"></a><center><font color="green" size="5px">函数调用的时间复杂度分析</font></center></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo7</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        System.out.println(n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">520</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            function(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function函数的时间复杂度是O(1)，所以整体的时间复杂度就是循环的次数O(n)。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 算法与数据结构;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function</span><span class="params">(<span class="keyword">int</span> count)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = count;i &lt;= <span class="number">520</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">520</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            function(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function内部的循环次数随count的增加（接近n）而减少，所以根据推导大O阶方法可得出算法的时间复杂度为O(n^2)。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;算法效率的度量方式&lt;/p&gt;
&lt;p&gt;算法时间复杂度&lt;/p&gt;
&lt;p&gt;推导大O阶方法&lt;/p&gt;
&lt;p&gt;线性阶&lt;/p&gt;
&lt;p&gt;平方阶&lt;/p&gt;
&lt;p&gt;函数调用的时间复杂度分析&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法基础" scheme="https://imqinhao.cn/categories/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>程序设计与C语言-1</title>
    <link href="https://imqinhao.cn/2021/05/20/C_Programming_1/"/>
    <id>https://imqinhao.cn/2021/05/20/C_Programming_1/</id>
    <published>2021-05-20T03:02:14.000Z</published>
    <updated>2021-05-22T01:09:13.495Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>什么是程序？什么是程序设计？</p><p>为什么需要计算机语言？高级语言的特点？</p><p>正确理解各名词及其含义</p><a id="more"></a><h2 id="什么是程序？什么是程序设计？"><a href="#什么是程序？什么是程序设计？" class="headerlink" title="什么是程序？什么是程序设计？"></a><center><font size = "5px" color="green">什么是程序？什么是程序设计？</font></center></h2><p>所谓程序，就是一组计算机能够识别和执行的指令。</p><p>程序设计是指从确定任务到得到结果，写出文档的全过程。一般需要经历以下几个工作阶段：</p><ol><li>问题分析 </li><li>设计算法 </li><li>编写程序 </li><li>对源程序进行编辑，编译和连接 </li><li>运行程序，分析结果 </li><li>编写程序文档</li></ol><h2 id="为什么需要计算机语言？高级语言的特点？"><a href="#为什么需要计算机语言？高级语言的特点？" class="headerlink" title="为什么需要计算机语言？高级语言的特点？"></a><center><font size = "5px" color="green">为什么需要计算机语言？高级语言的特点？</font></center></h2><p>人与计算机交流信息，需要解决语言问题。需要一种计算机和人都能识别的语言，即计算机语言。</p><p>高级语言的特点：</p><ol><li>功能强大</li><li>不依赖于具体机器</li><li>与具体机器距离较远</li><li>可移植性好</li></ol><h2 id="正确理解以下名次及其含义"><a href="#正确理解以下名次及其含义" class="headerlink" title="正确理解以下名次及其含义"></a><center><font size = "5px" color="green">正确理解以下名次及其含义</font></center></h2><p><font size = "3px" color="#ee33ff"><strong>（1） 源程序 目标程序 可执行程序</strong></font></p><p><kbd>源程序</kbd>：程序可以用高级语言或汇编语言编写，用高级语言或汇编语言编写的程序称为源程序。Ｃ语言源程序的扩展名为“．ｃ”。源程序不能直接在计算机上执行，需要用“编译程序”将源程序编译为二进制形式的代码。 </p><p><kbd>目标程序</kbd>：源程序经过“编译程序”编译所得到的二进制代码称为目标程序。目标程序的扩展名为“．ｏｂｊ”。目标代码尽管已经是机器指令，但是还不能运行，因为目标程序还没有解决函数调用问题，需要将各个目标程序与库函数连接，才能形成完整的可执行程序。</p><p><kbd>可执行文件</kbd>：把所有的编译后得到的目标模块连接装配起来，再与函数库相连接成一个整体，生成一个可供计算机执行的目标程序，称为可执行程序。</p><p><font size = "3px" color="#ee33ff"><strong>(2)  程序编辑  程序编译  程序连接</strong></font></p><p><kbd>程序编辑</kbd>：通过键盘想计算机输入程序，如发现有错误，要及时改正。最后将此源程序以文件形式存放在自己指定的文件夹内，文件以<kbd>.c</kbd>作为后缀，生成源程序文件。</p><p><kbd>程序编译</kbd>：先用C编译系统提供的“预处理器”对程序中的预处理指令进行编译预处理。由预处理得到的信息与程序其他部分一起，组成一个完整的，可以用来进行正式编译的源程序，然后由编译系统对该程序进行编译。编译的作用首先对源程序进行检查，判断有无语法方面的错误，无语法错误之后编译程序自动把源程序转换为二进制形式的目标程序。</p><p><kbd>程序连接</kbd>：把所有的编译后得到的目标模块连接装配起来，再与函数库相连接成一个整体，生成一个可供计算机执行的目标程序，称为可执行程序。即使一个程序只包含一个源程序文件，编译后得到的目标程序也不能直接运行，也要经过连接阶段，因为要与函数库进行连接，才能生成可执行文件。</p><p><font size = "3px" color="#ee33ff"><strong>(3) 程序  程序模块  程序文件</strong></font></p><p><font size = "5px" color="green">编写程序输出以下信息：</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*************************</span><br><span class="line">Very  Good!</span><br><span class="line">*************************</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*************************\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Very  Good!\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*************************\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font size = "5px" color="green">编写一个程序，输入a,b,c三个值，输出其中最大值。</font></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c, <span class="built_in">max</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"><span class="keyword">if</span>(a &gt; b &amp;&amp; a &gt; c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">max</span> = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b &gt; a &amp;&amp; b &gt; c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">max</span> = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c &gt; a &amp;&amp; c &gt; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">max</span> = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"max = %d\n"</span>, <span class="built_in">max</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;什么是程序？什么是程序设计？&lt;/p&gt;
&lt;p&gt;为什么需要计算机语言？高级语言的特点？&lt;/p&gt;
&lt;p&gt;正确理解各名词及其含义&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>CPU内部结构与寄存器</title>
    <link href="https://imqinhao.cn/2021/05/14/CPU_Register/"/>
    <id>https://imqinhao.cn/2021/05/14/CPU_Register/</id>
    <published>2021-05-14T10:02:14.000Z</published>
    <updated>2021-05-14T10:48:44.524Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>64位和32位系统区别</p><p>寄存器名称</p><p>寄存器、缓存、内存三者关系</p><a id="more"></a><h2 id="64位和32位系统区别"><a href="#64位和32位系统区别" class="headerlink" title="64位和32位系统区别"></a><center><font color="#55ee0f" size="6px">64位和32位系统区别</font></center></h2><ul><li>寄存器是CPU内部最基本的存储单元。</li><li>CPU对外是通过总线（地址、控制、数据）来和外部设备交互的，<font color="red">总线的宽度是8位，同时CPU的寄存器也是8位</font>，那么这个CPU就叫8位CPU。</li><li>如果总线是32位，寄存器也是32位，那么这个CPU就是32位CPU。</li><li>有一种CPU内部的寄存器是32位的，但总线是16位，准32位CPU。</li><li>所有的64位CPU兼容32位的指令，32位也兼容16位的指令，所以在64位的CPU上是可以识别32位的指令的。</li><li>在64位的CPU架构上运行了64位的软件操作系统，那么这个系统是64位。</li><li>在64位的CPU架构上，运行了32位的软件操作系统，那么这个系统就是32位。</li><li>64位的软件不能运行在32位的CPU之上。</li></ul><h2 id="寄存器名称"><a href="#寄存器名称" class="headerlink" title="寄存器名称"></a><center><font color="#55ee0f" size="6px">寄存器名称</font></center></h2><table><thead><tr><th>8位</th><th>16 位</th><th>32位</th><th>64位</th></tr></thead><tbody><tr><td>A</td><td>AX</td><td>EAX</td><td>RAX</td></tr><tr><td>B</td><td>BX</td><td>EBX</td><td>RBX</td></tr><tr><td>C</td><td>CX</td><td>ECX</td><td>RCX</td></tr><tr><td>D</td><td>DX</td><td>EDX</td><td>RDX</td></tr></tbody></table><h2 id="寄存器、缓存、内存三者关系"><a href="#寄存器、缓存、内存三者关系" class="headerlink" title="寄存器、缓存、内存三者关系"></a><center><font color="#55ee0f" size="6px">寄存器、缓存、内存三者关系</font></center></h2><p>按与CPU远近来分，离得最近的是寄存器，然后缓存（CPU缓存），最后内存。</p><p><font color="red">CPU计算时</font>，先预先把要用的数据从硬盘读到内存，然后再把即将要用到的数据读到寄存器，于是<kbd>CPU <--> 寄存器 <--> 内存</kbd>，这就是它们之间的信息交换。</p><p>那为什么没有缓存呢？因为如果经常操作内存中的同一地址的数据，就会影响速度。于是就在寄存器和内存之间设置一个缓存。</p><p>因为从缓存提取的速度远高于内存。当然缓存的价格肯定也远远高于内存，不然的话，机器里就没有内存的存在。</p><p>由此可以看出，从远近来看：<kbd>CPU <--> 寄存器 <--> 缓存 <--> 内存</kbd>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;64位和32位系统区别&lt;/p&gt;
&lt;p&gt;寄存器名称&lt;/p&gt;
&lt;p&gt;寄存器、缓存、内存三者关系&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>C语言编译过程</title>
    <link href="https://imqinhao.cn/2021/05/14/gcc/"/>
    <id>https://imqinhao.cn/2021/05/14/gcc/</id>
    <published>2021-05-14T09:02:14.000Z</published>
    <updated>2021-05-14T11:03:07.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>C语言编译过程</p><p>​    C程序编译步骤</p><p>​    gcc编译过程</p><p>​        分步编译</p><p>​        常见代码问题</p><a id="more"></a><h2 id="C语言编译过程"><a href="#C语言编译过程" class="headerlink" title="C语言编译过程"></a><center><font color="#55ee0f" size="7px">C语言编译过程</font></center></h2><h3 id="C程序编译步骤"><a href="#C程序编译步骤" class="headerlink" title="C程序编译步骤"></a><center><font color="#ff33ee" size="6px" >C程序编译步骤</font></center></h3><p>C代码编译成可执行程序经过4步：</p><ol><li><kbd>预处理</kbd>：宏定义展开、头文件展开、条件编译等，同时将代码中的注释删除，这里并不会检查语法。</li><li><kbd>编译</kbd>：检查语法，将预处理后文件编译生成汇编文件。</li><li><kbd>汇编</kbd>：将汇编文件生成目标文件（二进制文件）</li><li><kbd>链接</kbd>：C语言写的程序是需要依赖各种库的，所以编译之后还需要把库链接到最终的可执行程序中去。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210514190258.png" alt=""></p><h3 id="gcc编译过程"><a href="#gcc编译过程" class="headerlink" title="gcc编译过程"></a><center><font color="#ff33ee" size="6px" >gcc编译过程</font></center></h3><h4 id="分步编译"><a href="#分步编译" class="headerlink" title="分步编译"></a><center><font color = "#ffaa00" size="5px">分步编译</font></center></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">预处理: gcc -E hello.c -o hello.i</span><br><span class="line">编  译: gcc -S hello.i -o hello.s</span><br><span class="line">汇  编: gcc -c hello.s -o hello.o</span><br><span class="line">链  接: gcc hello.o -o hello</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-E</td><td>只进行预处理</td></tr><tr><td>-S（大写）</td><td>只进行预处理和编译</td></tr><tr><td>-c（小写）</td><td>只进行预处理、编译和汇编</td></tr><tr><td>-o  file</td><td>指定生成的输出文件名为file</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210514164441.png" alt="程序编译过程"></p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210514165349.png" alt="程序执行过程"></p><table><thead><tr><th>文件后缀</th><th>含义</th></tr></thead><tbody><tr><td>.c</td><td>C语言文件</td></tr><tr><td>.i</td><td>预处理后的C语言文件</td></tr><tr><td>.s</td><td>编译后的汇编文件</td></tr><tr><td>.o</td><td>编译后的目标文件</td></tr></tbody></table><h4 id="常见代码问题"><a href="#常见代码问题" class="headerlink" title="常见代码问题"></a><center><font color = "#ffaa00" size="5px">常见代码问题</font></center></h4><ol><li>编辑时异常</li><li>编译时异常</li><li>运行时异常</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言编译过程&lt;/p&gt;
&lt;p&gt;​    C程序编译步骤&lt;/p&gt;
&lt;p&gt;​    gcc编译过程&lt;/p&gt;
&lt;p&gt;​        分步编译&lt;/p&gt;
&lt;p&gt;​        常见代码问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>Python网络编程-文件下载器</title>
    <link href="https://imqinhao.cn/2021/04/25/FileDownload/"/>
    <id>https://imqinhao.cn/2021/04/25/FileDownload/</id>
    <published>2021-04-25T10:40:14.000Z</published>
    <updated>2021-04-25T10:58:07.543Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>文件下载器小案例</p><a id="more"></a><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a><center><font color="\#f05b72" size="6px">服务器</font></center></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_file</span><span class="params">(client_socket, client_addr)</span>:</span></span><br><span class="line">    file_content = <span class="literal">None</span></span><br><span class="line">    <span class="comment"># 接收消息</span></span><br><span class="line">    recv_data = client_socket.recv(<span class="number">1024</span>).decode(<span class="string">"gbk"</span>)</span><br><span class="line">    print(<span class="string">"%s 需要下载 %s"</span> % (str(client_addr), recv_data))</span><br><span class="line">    <span class="comment"># 打开文件</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = open(recv_data, <span class="string">"rb"</span>)</span><br><span class="line">        file_content = f.read()</span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> res:</span><br><span class="line">        print(<span class="string">"没有需要下载的文件(%s)"</span> % recv_data)</span><br><span class="line">    <span class="comment"># 处理消息</span></span><br><span class="line">    <span class="keyword">if</span> file_content:</span><br><span class="line">        client_socket.send(file_content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建socket</span></span><br><span class="line">    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    <span class="comment"># 绑定本地信息</span></span><br><span class="line">    server_socket.bind((<span class="string">""</span>, <span class="number">8080</span>))</span><br><span class="line">    <span class="comment"># 设主动为被动</span></span><br><span class="line">    server_socket.listen(<span class="number">128</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 监听</span></span><br><span class="line">        client_socket, client_addr = server_socket.accept()</span><br><span class="line">        <span class="comment"># 调用函数</span></span><br><span class="line">        send_file(client_socket, client_addr)</span><br><span class="line">        client_socket.close()</span><br><span class="line">    server_socket.close()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a><center><font color="\#f05b72" size="6px">客户端</font></center></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建socket</span></span><br><span class="line">    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    <span class="comment"># 链接服务器</span></span><br><span class="line">    client_socket.connect((<span class="string">"10.198.207.67"</span>, <span class="number">8080</span>))</span><br><span class="line">    <span class="comment"># 获取下载的文件名称</span></span><br><span class="line">    download_file_name = input(<span class="string">"请输入下载的文件名："</span>)</span><br><span class="line">    <span class="comment"># 将文件名发送给服务器</span></span><br><span class="line">    client_socket.send(download_file_name.encode(<span class="string">"gbk"</span>))</span><br><span class="line">    <span class="comment"># 接收文件中的数据</span></span><br><span class="line">    recv_data = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="comment"># 保存接收到的数据到同一个文件中</span></span><br><span class="line">    <span class="keyword">if</span> recv_data:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"[下载]"</span> + download_file_name, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(recv_data)</span><br><span class="line">    <span class="comment"># 关闭socket</span></span><br><span class="line">    client_socket.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件下载器小案例&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python网络编程-TCP服务器</title>
    <link href="https://imqinhao.cn/2021/04/25/TCP_server/"/>
    <id>https://imqinhao.cn/2021/04/25/TCP_server/</id>
    <published>2021-04-25T07:40:14.000Z</published>
    <updated>2021-04-25T07:38:47.665Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>TCP服务器功能的创建</p><p>循环为多个客户端服务</p><p>循环为多个客户端服务(升级版)</p><a id="more"></a><h2 id="TCP服务器"><a href="#TCP服务器" class="headerlink" title="TCP服务器"></a><center><font color="\#f05b72" size="6px">TCP服务器</font></center></h2><p>如果需要创建一个TCP服务器的功能，需要的流程如下：</p><ol><li><kbd>socket</kbd>创建一个套接字</li><li><kbd>bind</kbd>绑定ip和port</li><li><kbd>listen</kbd>使套接字变为可以被动连接</li><li><kbd>accept</kbd>等待客户端的链接</li><li><kbd>recv/send</kbd>接收发送数据</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1. socket创建一个套接字</span></span><br><span class="line">    tcp_server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    <span class="comment"># 2. bind绑定ip和port</span></span><br><span class="line">    local_addr = (<span class="string">""</span>, <span class="number">9999</span>)</span><br><span class="line">    tcp_server_socket.bind(local_addr)</span><br><span class="line">    <span class="comment"># 3. listen使套接字变为可以被动连接</span></span><br><span class="line">    tcp_server_socket.listen(<span class="number">128</span>)</span><br><span class="line">    <span class="comment"># 4. accept等待客户端的链接</span></span><br><span class="line">    print(<span class="string">"等待客户端的接入..."</span>)</span><br><span class="line">    new_client_socket, client_addr = tcp_server_socket.accept()</span><br><span class="line">    print(<span class="string">"有新的客户端接入..."</span>)</span><br><span class="line">    print(<span class="string">"%s:%s已与服务器建立连接..."</span> % (client_addr[<span class="number">0</span>], client_addr[<span class="number">1</span>]))</span><br><span class="line">    <span class="comment"># 5. recv/send接收发送数据</span></span><br><span class="line">    recv_data = new_client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">"%s"</span> % recv_data.decode(<span class="string">"gbk"</span>))</span><br><span class="line">    <span class="comment"># 回送数据</span></span><br><span class="line">    new_client_socket.send(<span class="string">"ok"</span>.encode(<span class="string">"gbk"</span>))</span><br><span class="line">    <span class="comment"># 关闭套接字</span></span><br><span class="line">    new_client_socket.close()</span><br><span class="line">    tcp_server_socket.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210425142708.png" alt="运行情况"></p><h3 id="循环为多个客户端服务"><a href="#循环为多个客户端服务" class="headerlink" title="循环为多个客户端服务"></a><center><font color="green" size="5px">循环为多个客户端服务</font></center></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建socket</span></span><br><span class="line">    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    <span class="comment"># 绑定本地信息</span></span><br><span class="line">    server_socket.bind((<span class="string">""</span>, <span class="number">8888</span>))</span><br><span class="line">    <span class="comment"># 变主动为被动</span></span><br><span class="line">    server_socket.listen(<span class="number">128</span>)</span><br><span class="line">    <span class="comment"># 等待客户机的链接</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"等待客户端的链接..."</span>)</span><br><span class="line">        new_client_socket, client_addr = server_socket.accept()</span><br><span class="line">        print(<span class="string">"%s:%s已经链接到服务器"</span> % (client_addr[<span class="number">0</span>], client_addr[<span class="number">1</span>]))</span><br><span class="line">        <span class="comment"># 接收数据</span></span><br><span class="line">        recv_data = new_client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="comment"># 打印接收到的数据</span></span><br><span class="line">        print(recv_data.decode(<span class="string">"gbk"</span>))</span><br><span class="line">        <span class="comment"># 发送数据</span></span><br><span class="line">        new_client_socket.send(<span class="string">"connect ok!"</span>.encode(<span class="string">"gbk"</span>))</span><br><span class="line">        <span class="comment"># 关闭新socket</span></span><br><span class="line">        new_client_socket.close()</span><br><span class="line">        print(<span class="string">"为%s:%s服务完毕"</span> % (client_addr[<span class="number">0</span>], client_addr[<span class="number">1</span>]))</span><br><span class="line">    <span class="comment"># 关闭socket</span></span><br><span class="line">    server_socket.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="循环为多个客户端服务-升级版"><a href="#循环为多个客户端服务-升级版" class="headerlink" title="循环为多个客户端服务(升级版)"></a><center><font color="green" size="5px">循环为多个客户端服务(升级版)</font></center></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建socket</span></span><br><span class="line">    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    <span class="comment"># 绑定本地信息</span></span><br><span class="line">    server_socket.bind((<span class="string">""</span>, <span class="number">8888</span>))</span><br><span class="line">    <span class="comment"># 设置主动为被动</span></span><br><span class="line">    server_socket.listen(<span class="number">128</span>)</span><br><span class="line">    <span class="comment"># 监听</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"等待客户端的链接..."</span>)</span><br><span class="line">        new_client_socket, client_addr = server_socket.accept()</span><br><span class="line">        print(<span class="string">"%s已经链接到服务器"</span> % str(client_addr))</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 接收数据</span></span><br><span class="line">            recv_data = new_client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> recv_data:</span><br><span class="line">                <span class="comment"># 打印接收到的数据</span></span><br><span class="line">                print(recv_data.decode(<span class="string">"gbk"</span>))</span><br><span class="line">                <span class="comment"># 发送数据</span></span><br><span class="line">                new_client_socket.send(<span class="string">"ok"</span>.encode(<span class="string">"gbk"</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 关闭新链接的socket</span></span><br><span class="line">        new_client_socket.close()</span><br><span class="line">        print(<span class="string">"已经服务完成..."</span>)</span><br><span class="line">    <span class="comment"># 关闭socket</span></span><br><span class="line">    server_socket.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TCP服务器功能的创建&lt;/p&gt;
&lt;p&gt;循环为多个客户端服务&lt;/p&gt;
&lt;p&gt;循环为多个客户端服务(升级版)&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python网络编程-TCP构建流程</title>
    <link href="https://imqinhao.cn/2021/04/25/TCP_client/"/>
    <id>https://imqinhao.cn/2021/04/25/TCP_client/</id>
    <published>2021-04-25T04:40:14.000Z</published>
    <updated>2021-04-25T05:05:14.003Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>TCP构建流程示例</p><a id="more"></a><h2 id="TCP构建流程"><a href="#TCP构建流程" class="headerlink" title="TCP构建流程"></a><center><font color="\#f05b72" size="5px">TCP构建流程</font><center></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建TCP套接字</span></span><br><span class="line">    tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    <span class="comment"># 建立连接</span></span><br><span class="line">    tcp_socket.connect((<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>))</span><br><span class="line">    <span class="comment"># 发送数据/接收数据</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 发送数据</span></span><br><span class="line">        send_content = input(<span class="string">"请输入要发送的消息："</span>)</span><br><span class="line">        <span class="keyword">if</span>(send_content == <span class="string">"exit"</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        tcp_socket.send(send_content.encode(<span class="string">"gbk"</span>))</span><br><span class="line">        <span class="comment"># 接收数据</span></span><br><span class="line">        recv_data = tcp_socket.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="comment"># 打印接收到的数据</span></span><br><span class="line">        print(recv_data.decode(<span class="string">"gbk"</span>))</span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    tcp_socket.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TCP构建流程示例&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python网络编程-TCP简介</title>
    <link href="https://imqinhao.cn/2021/04/25/TCP/"/>
    <id>https://imqinhao.cn/2021/04/25/TCP/</id>
    <published>2021-04-25T04:02:14.000Z</published>
    <updated>2021-04-25T04:55:42.415Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>TCP介绍</p><p>TCP特点</p><p>UDP/TCP通信模型</p><p>UDP与TCP的不同点</p><a id="more"></a><h2 id="TCP简介"><a href="#TCP简介" class="headerlink" title="TCP简介"></a><center><font color="\#f05b72" size="8px">TCP简介</font></center></h2><h3 id="TCP介绍"><a href="#TCP介绍" class="headerlink" title="TCP介绍"></a><center><font color="green" size="5px">TCP介绍</font></center></h3><p>TCP协议，传输控制协议（英语：Transmission  Control  Protocol，缩写：TCP）是一种面向连接的、可靠的、基于字节流的传输层通信协议。</p><p>TCP通信需要经过<kbd>创建连接</kbd>、<kbd>数据传送</kbd>、<kbd>终止连接</kbd>三个步骤。</p><h3 id="TCP特点"><a href="#TCP特点" class="headerlink" title="TCP特点"></a><center><font color="green" size="5px">TCP特点</font></center></h3><p>通信双方必须先建立连接才能进行数据的传输</p><p>双方都必须为该连接分配必要的系统内核资源,以管理连接的状态和连接上的传输双方间的数据传输都可以通过这一个连接进行</p><p>完成数据交换后双方必须断开此连接,以释放系统资源</p><p>这种连接是一对一的,因此<font color="red">TCP不适用于广播的应用程序，基于广播的应用程序请使用UDP协议</font>。</p><h3 id="UDP通信模型"><a href="#UDP通信模型" class="headerlink" title="UDP通信模型"></a><center><font color="green" size="5px">UDP通信模型</font></center></h3><p>UDP通信模型中，在通信开始之前，不需要建立相关的连接，只需要发送数据即可。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/UDP%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B.png" alt=""></p><h3 id="TCP通信模型"><a href="#TCP通信模型" class="headerlink" title="TCP通信模型"></a><center><font color="green" size="5px">TCP通信模型</font></center></h3><p>TCP通信模型中，在通信开始之前，一定要先建立相关的连接，才能发送数据。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/TCP%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B.png" alt=""></p><h3 id="TCP与UDP的不同点"><a href="#TCP与UDP的不同点" class="headerlink" title="TCP与UDP的不同点"></a><center><font color="green" size="5px">TCP与UDP的不同点</font></center></h3><ul><li>面向连接(确认有创建三方交握，连接已创建才作传输)</li><li>有序数据传输</li><li>重发丢失的数据包</li><li>舍弃重复的数据包</li><li>无差错的数据传输</li><li>阻塞/流量控制</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TCP介绍&lt;/p&gt;
&lt;p&gt;TCP特点&lt;/p&gt;
&lt;p&gt;UDP/TCP通信模型&lt;/p&gt;
&lt;p&gt;UDP与TCP的不同点&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python网络编程-UDP</title>
    <link href="https://imqinhao.cn/2021/04/25/PythonUdp/"/>
    <id>https://imqinhao.cn/2021/04/25/PythonUdp/</id>
    <published>2021-04-25T02:02:14.000Z</published>
    <updated>2021-04-25T02:01:54.746Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>发送数据的流程</p><p>接收数据的流程</p><p>案例：UDP聊天器</p><a id="more"></a><h2 id="发送数据的流程"><a href="#发送数据的流程" class="headerlink" title="发送数据的流程"></a>发送数据的流程</h2><ol><li>创建套接字</li><li>发送数据</li><li>关闭套接字</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建udp套接字</span></span><br><span class="line">    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="comment"># 绑定本地信息</span></span><br><span class="line">    local_addr = (<span class="string">""</span>, <span class="number">7890</span>)</span><br><span class="line">    udp_socket.bind(local_addr)</span><br><span class="line">    <span class="comment"># 目的地主机信息</span></span><br><span class="line">    desc_addr = (<span class="string">"10.197.36.81"</span>, <span class="number">8080</span>)</span><br><span class="line">    <span class="comment"># 发送数据</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        sent_content = input(<span class="string">"请输入要发送的消息："</span>)</span><br><span class="line">        <span class="keyword">if</span>(sent_content == <span class="string">"exit"</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        udp_socket.sendto(sent_content.encode(<span class="string">"gbk"</span>), desc_addr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭套接字</span></span><br><span class="line">    udp_socket.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="接收数据的流程"><a href="#接收数据的流程" class="headerlink" title="接收数据的流程"></a>接收数据的流程</h2><ol><li>创建套接字</li><li>绑定本地自己的信息（ip及port）</li><li>接收数据</li><li>关闭套接字</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建udp套接字</span></span><br><span class="line">    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="comment"># 绑定本地地址信息</span></span><br><span class="line">    local_addr = (<span class="string">""</span>, <span class="number">8088</span>)</span><br><span class="line">    udp_socket.bind(local_addr)</span><br><span class="line">    times = datetime.datetime.now().strftime(<span class="string">'%F %T'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 接收数据</span></span><br><span class="line">        recv = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">        recv_data = recv[<span class="number">0</span>].decode(<span class="string">"gbk"</span>)</span><br><span class="line">        recv_addr = recv[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="comment"># 打印接收到的数据</span></span><br><span class="line">        print(<span class="string">"【%s】 接收到来自%s的消息：\n%s"</span> % (times, recv_addr, recv_data))</span><br><span class="line">    <span class="comment"># 关闭udp套接字</span></span><br><span class="line">    udp_socket.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p>同一个端口不允许同一时刻被使用两次</p></blockquote><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ol><li>recvfrom 在没有数据到来时，会怎样？</li></ol><blockquote><p>会阻塞。</p></blockquote><hr><blockquote><p>套接字是可以同时收发数据的。</p><p>socket套接字是全双工。</p></blockquote><hr><p><kbd>单工</kbd>：单工数据传输只支持数据在一个方向上传输。</p><p><kbd>半双工</kbd>： 半双工数据传输允许数据在两个方向上传输，但是，在某一时刻，只允许数据在一个方向上传输，它实际上是一种切换方向的单工通信。</p><p><kbd>全双工</kbd>：全双工数据通信允许数据同时在两个方向上传输，因此，全双工通信是两个单工通信方式的结合，它要求发送设备和接收设备都有独立的接收和发送能力。</p><h2 id="案例：UDP聊天器"><a href="#案例：UDP聊天器" class="headerlink" title="案例：UDP聊天器"></a>案例：UDP聊天器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_msg</span><span class="params">(udp_socket)</span>:</span></span><br><span class="line">    desc_ip = input(<span class="string">"请输入对方的IP地址："</span>)</span><br><span class="line">    desc_port = int(input(<span class="string">"请输入对方的端口号："</span>))</span><br><span class="line">    desc_addr = (desc_ip, desc_port)</span><br><span class="line">    send_content = input(<span class="string">"请输入需要发送的消息："</span>)</span><br><span class="line">    udp_socket.sendto(send_content.encode(<span class="string">"gbk"</span>), desc_addr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recv_msg</span><span class="params">(udp_socket)</span>:</span></span><br><span class="line">    recv_data = udp_socket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    recv_msg = recv_data[<span class="number">0</span>].decode(<span class="string">"gbk"</span>)</span><br><span class="line">    recv_addr = recv_data[<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">    print(<span class="string">"您收到了来自【%s】的消息：\n%s"</span> % (recv_addr, recv_msg))</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建套接字</span></span><br><span class="line">    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">    local_addr = (<span class="string">""</span>, <span class="number">8888</span>)</span><br><span class="line">    udp_socket.bind(local_addr)</span><br><span class="line">    <span class="comment"># 发送和接收</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"------------- UDP聊天器 -------------"</span>)</span><br><span class="line">        print(<span class="string">"1. 发送数据"</span>)</span><br><span class="line">        print(<span class="string">"2. 接收数据"</span>)</span><br><span class="line">        print(<span class="string">"0. 退出系统"</span>)</span><br><span class="line">        choice = input(<span class="string">"请输入功能选项："</span>)</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">"1"</span>:</span><br><span class="line">            <span class="comment"># 发送数据</span></span><br><span class="line">            send_msg(udp_socket)</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">"2"</span>:</span><br><span class="line">            <span class="comment"># 接收数据</span></span><br><span class="line">            recv_msg(udp_socket)</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">"0"</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"输入有误，请重新输入！\n"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发送数据的流程&lt;/p&gt;
&lt;p&gt;接收数据的流程&lt;/p&gt;
&lt;p&gt;案例：UDP聊天器&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://imqinhao.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>文件操作</title>
    <link href="https://imqinhao.cn/2021/03/17/c-11/"/>
    <id>https://imqinhao.cn/2021/03/17/c-11/</id>
    <published>2021-03-17T09:02:14.000Z</published>
    <updated>2021-03-17T06:11:01.841Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>文件指针</p><p>打开和关闭文件</p><p>文件的读写操作</p><a id="more"></a><h2 id="文件指针"><a href="#文件指针" class="headerlink" title="文件指针"></a>文件指针</h2><p><strong>用一个称为文件指针的指针变量指向文件，通过文件指针就可对它所指向的文件进行各种操作。</strong></p><p>声明文件指针的简单形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FILE *变量名;</span><br></pre></td></tr></table></figure><blockquote><p>FILE是结构体类型struct _iobuf的同义词，结构体类型struct _iobuf在头文件stdio.h中声明，用于描述文件的相关信息。</p></blockquote><h2 id="打开和关闭文件"><a href="#打开和关闭文件" class="headerlink" title="打开和关闭文件"></a>打开和关闭文件</h2><p>文件在进行读写操作之前要先打开，使用完毕要关闭。所谓打开文件，实际上是获取文件的有关信息，并使文件指针指向该文件，以便进行相关操作。关闭文件则断开指针与文件之间的联系。</p><h3 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h3><p>库函数fopen用来打开一个文件，要使用库函数fopen，需包含头文件stdio.h。函数调用的形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件指针名 = fopen(文件名, 使用文件方式);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fp1 = (<span class="string">"data.txt"</span>, <span class="string">"r"</span>);</span><br></pre></td></tr></table></figure><blockquote><p>功能：打开当前目录下的文件data.txt，只允许进行“读”操作，并使文件指针fp1指向文件data.txt。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FILE *fp2 = fopen(<span class="string">"C:\\info.dat"</span>, <span class="string">"rb"</span>);</span><br></pre></td></tr></table></figure><blockquote><p>功能：打开C驱动器磁盘的根目录下的文件info.dat，按二进制方式进行读操作，并使文件指针fp2指向文件info.dat。</p></blockquote><table><thead><tr><th align="center">字符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">r</td><td align="center">读（read）</td></tr><tr><td align="center">w</td><td align="center">写（write）</td></tr><tr><td align="center">a</td><td align="center">追加（append）</td></tr><tr><td align="center">t</td><td align="center">文本文件（text），可省略不写</td></tr><tr><td align="center">b</td><td align="center">二进制文件（banary）</td></tr><tr><td align="center">+</td><td align="center">读和写</td></tr></tbody></table><table><thead><tr><th>组合</th><th align="left">含义</th></tr></thead><tbody><tr><td>rt 或 r</td><td align="left">只读打开一个文本文件，只允许读数据</td></tr><tr><td>wt 或 w</td><td align="left">打开或创立一个文件文件，只允许写数据</td></tr><tr><td>at 或 a</td><td align="left">追加打开一个文本文件，并在文件末尾写数据</td></tr><tr><td>rb</td><td align="left">只读打开一个二进制文件，只允许读数据</td></tr><tr><td>wb</td><td align="left">打开或建立一个二进制文件，只允许写数据</td></tr><tr><td>ab</td><td align="left">追加打开一个二进制文件，并在文件末尾写数据</td></tr></tbody></table><details ><summary> <p>关于使用文件方式有以下几点说明</p> </summary>              <div class='content'>              <div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>用r打开文件时，该文件必须已经存在。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>用w打开文件时，如果文件不存在，则以指定的文件名建立文件；否则，将文件删除，重建一个新文件。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>要向一个已存在的文件追加新的信息，应该用a打开文件。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>打开文件时，如果出错，库函数fopen 将返回NULL。</p>            </div>              </div>            </details><h3 id="关闭文件"><a href="#关闭文件" class="headerlink" title="关闭文件"></a>关闭文件</h3><p>文件一旦使用完毕，应调用库函数fclose关闭文件，以避免数据丢失等错误。要使用库函数fclose，需包含头文件stdio.h。函数调用的形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fclose (文件指针);</span><br></pre></td></tr></table></figure><h2 id="文件的读写操作"><a href="#文件的读写操作" class="headerlink" title="文件的读写操作"></a>文件的读写操作</h2><h3 id="字符读写库函数"><a href="#字符读写库函数" class="headerlink" title="字符读写库函数"></a>字符读写库函数</h3><ol><li><strong>库函数fputc</strong></li></ol><p>函数调用的形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fputc(字符数据, 文件指针);</span><br></pre></td></tr></table></figure><blockquote><p>功能：将一个字符写入文件指针指向的文件中。例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fputc(<span class="string">'?'</span>, fp);</span><br></pre></td></tr></table></figure><p>将“?”写入fp指向的文件中。</p></blockquote><ol start="2"><li><strong>库函数fgetc</strong></li></ol><p>函数调用的形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fgetc(文件指针);</span><br></pre></td></tr></table></figure><blockquote><p>功能：从文件指针指向的文件中读取一个字符并返回，如果文件已结束，则返回EOF。</p></blockquote><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p>输入一行字符，写入文件 data.txt ，读取并输出文件 data.txt 的内容。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        FILE *fp;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        fp = fopen(<span class="string">"data.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input a string: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">        <span class="keyword">while</span>(ch != <span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                fputc(ch, fp);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        fp = fopen(<span class="string">"data.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">        ch = fgetc(fp);</span><br><span class="line">        <span class="keyword">while</span>(ch != EOF)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">                ch = fgetc(fp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        fclose(fp);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input a string: Programming Language C</span><br><span class="line">Programming Language C</span><br></pre></td></tr></table></figure><blockquote><p>写入文件完成，文件的当前位置移到文件尾，关闭文件，读取文件之前再重新打开文件，使文件的当前位置移到文件头，以读取数据。</p></blockquote><h3 id="字符串读写库函数"><a href="#字符串读写库函数" class="headerlink" title="字符串读写库函数"></a>字符串读写库函数</h3><ol><li><strong>库函数fputs</strong></li></ol><p>函数调用的形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fputs</span>(字符串, 文件指针);</span><br></pre></td></tr></table></figure><blockquote><p>功能：将字符串写入文件指针所指向的文件中，不写入’\0’。</p></blockquote><ol start="2"><li><strong>库函数 fgets</strong></li></ol><p>函数调用的形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fgets(数组元素的类型为<span class="keyword">char</span>的数组名, 整数n, 文件指针);</span><br></pre></td></tr></table></figure><blockquote><p>功能：从文件指针指向的文件中读取最多n - 1个字符，并存储到数组中，遇到换行符（读取并存入数组）或文件结束标志，读取结束。在最后一个字符存入数组后，还要向数组中存入一个’\0’，以构成一个字符串。</p></blockquote><h3 id="编程练习1"><a href="#编程练习1" class="headerlink" title="编程练习1"></a>编程练习1</h3><p>输入一行字符，将其中的小写字母转换为大写字母，其他字符保持不变，将转换后的内容写入文件 data1.txt 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="comment">// 输入一行字符，将其中的小写字母转换为大写字母，其他字符不变</span></span><br><span class="line">        <span class="comment">// 将转换后的内容写入文件 data1.txt</span></span><br><span class="line">        FILE *fp;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        fp = fopen(<span class="string">"data1.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入一行字符："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">        <span class="keyword">while</span>(ch != <span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(ch &gt;= <span class="string">'a'</span> &amp;&amp; ch &lt;= <span class="string">'z'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                        ch -= <span class="number">32</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                fputc(ch, fp);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        fp = fopen(<span class="string">"data1.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">        ch = fgetc(fp);</span><br><span class="line">        <span class="keyword">while</span>(ch != EOF)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">                ch = fgetc(fp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        fclose(fp);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210317101730.png" alt=""></p><h3 id="编程练习2"><a href="#编程练习2" class="headerlink" title="编程练习2"></a>编程练习2</h3><p>读取文件data1.txt 的内容，将其中的大写字母转换为小写字母，其他的字符不变，将转换后的内容输出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        FILE *fp;</span><br><span class="line">        fp = fopen(<span class="string">"data1.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        ch = fgetc(fp);</span><br><span class="line">        <span class="keyword">while</span>(ch != EOF)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(ch &gt;= <span class="string">'A'</span> &amp;&amp; ch &lt;= <span class="string">'Z'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch + <span class="number">32</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">                &#125;</span><br><span class="line">                ch = fgetc(fp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        fclose(fp);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello123.com</span><br></pre></td></tr></table></figure><h3 id="编程练习3"><a href="#编程练习3" class="headerlink" title="编程练习3"></a>编程练习3</h3><p>描述学生的结构体类型 struct  student 的声明如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>输入这五个学生的信息，并写入文件 data2.txt 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        FILE *fp;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[5];</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">t</span>[5];</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"请输入第%d个学生的信息：\n"</span>, i + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(i != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                        getchar();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"性别(男：M  女：F）："</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;s[i].sex);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"学号："</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i].sno);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"姓名："</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i].name);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"年龄："</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s[i].age);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"分数："</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;s[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">        fp = fopen(<span class="string">"data2.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(fp, <span class="string">"%c %s %s %d %lf\n"</span>, s[i].sex, s[i].sno, s[i].name, s[i].age, s[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        fp = fopen(<span class="string">"data2.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"  sno\t\tname\t\tsex\t\tage\t\tscore\n"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">fscanf</span>(fp, <span class="string">"%c%s%s%d%lf"</span>, &amp;t[i].sex, t[i].sno, t[i].name, &amp;t[i].age, &amp;t[i].score);</span><br><span class="line">                fgetc(fp);      <span class="comment">// 读入并丢弃空格</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n"</span>, t[i].sno, t[i].name, t[i].sex, t[i].age, t[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">请输入第1个学生的信息：</span><br><span class="line">性别(男：M  女：F）：M</span><br><span class="line">学号：2018001</span><br><span class="line">姓名：猫七</span><br><span class="line">年龄：24</span><br><span class="line">分数：96</span><br><span class="line">请输入第2个学生的信息：</span><br><span class="line">性别(男：M  女：F）：F</span><br><span class="line">学号：2018002</span><br><span class="line">姓名：老六</span><br><span class="line">年龄：25</span><br><span class="line">分数：99</span><br><span class="line">请输入第3个学生的信息：</span><br><span class="line">性别(男：M  女：F）：M</span><br><span class="line">学号：2018003</span><br><span class="line">姓名：苏晗</span><br><span class="line">年龄：28</span><br><span class="line">分数：94</span><br><span class="line">请输入第4个学生的信息：</span><br><span class="line">性别(男：M  女：F）：M</span><br><span class="line">学号：2018004</span><br><span class="line">姓名：韩星星</span><br><span class="line">年龄：23</span><br><span class="line">分数：92</span><br><span class="line">请输入第5个学生的信息：</span><br><span class="line">性别(男：M  女：F）：F</span><br><span class="line">学号：2018005</span><br><span class="line">姓名：阿么</span><br><span class="line">年龄：25</span><br><span class="line">分数：89</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210317110301.png" alt=""></p><h3 id="编程练习4"><a href="#编程练习4" class="headerlink" title="编程练习4"></a>编程练习4</h3><p>读取文件 data2.txt 的内容，计算平均分并输出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        FILE *fp;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[5];</span></span><br><span class="line">        fp = fopen(<span class="string">"data2.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0.0</span>, average = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">fscanf</span>(fp, <span class="string">"%c %s %s %d %lf"</span>, &amp;s[i].sex, s[i].sno, s[i].name, &amp;s[i].age, &amp;s[i].score);</span><br><span class="line">                fgetc(fp);</span><br><span class="line">                sum += s[i].score;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(fp);</span><br><span class="line">        average = sum / <span class="number">5</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"average = %.2lf\n"</span>, average);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">average &#x3D; 94.00</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件指针&lt;/p&gt;
&lt;p&gt;打开和关闭文件&lt;/p&gt;
&lt;p&gt;文件的读写操作&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>结构体、共同体和枚举类型</title>
    <link href="https://imqinhao.cn/2021/03/16/c_10/"/>
    <id>https://imqinhao.cn/2021/03/16/c_10/</id>
    <published>2021-03-16T09:02:14.000Z</published>
    <updated>2021-03-16T11:08:18.283Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>结构体类型</p><p>结构体类型与数组</p><p>结构体类型与函数</p><p>单链表</p><p>共同体声明</p><p>枚举类型</p><p>typedef声明</p><a id="more"></a><h2 id="结构体类型"><a href="#结构体类型" class="headerlink" title="结构体类型"></a>结构体类型</h2><p>​        在程序设计中，有时需要将不同类型的数据组合成一个有机的整体，以便于引用。例如，学生的信息包括学号、姓名、性别、年龄和成绩。如果用独立的变量：学号（sno）、姓名（name）、性别（sex）、年龄（age）和成绩（score）来表示。如图所示，变量之间是孤立的，很难体现数据之间的内在联系。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210315175506.png" alt="用单个变量表示学生信息"></p><p>使用结构体类型，可以把多个数据项合成一个整体。学生信息可用结构体类型来描述。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210315175613.png" alt="用结构体类型描述学生信息"></p><h3 id="结构体类型声明"><a href="#结构体类型声明" class="headerlink" title="结构体类型声明"></a>结构体类型声明</h3><p>为描述学生信息，可声明一个结构体类型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];<span class="comment">//学号</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];<span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">char</span> sex;   <span class="comment">//性别</span></span><br><span class="line">    <span class="keyword">int</span> age;   <span class="comment">//年龄</span></span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];<span class="comment">//三门课程的成绩</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体类型 struct student ，包括 sno 、name 、 sex 、 age 和 score 共五个成员。struct student 是一个类型说明符，它和 int 、char 、 float 、 double 等一样，都可以用来指定变量的类型，只不过结构体类型 struct student 需要由程序员自行声明一样。</p><hr><p>结构体类型声明的一般形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> [标记名称]</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员列表</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>标记名称是一个标识符，也可以省略标记名称，表示匿名结构体类型。</p></blockquote><span class='p green'>结构体类型声明既可以放在函数之外，被其作用范围内的所有函数使用；也可以放在某个函数的函数体内，只能在该函数的函数体内使用。</span><hr><span class='p blue'>如果 sizeof 运算符的运算对象是结构体类型，运算结果是所有成员占内存大小(按字节计算)再加上内部和尾部填充所占内存大小(按字节计算)的总和。</span><hr><h3 id="结构体类型的变量声明"><a href="#结构体类型的变量声明" class="headerlink" title="结构体类型的变量声明"></a>结构体类型的变量声明</h3><ol><li><strong>先声明结构体类型再声明变量</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 标记名称</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员列表</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> 标记名称 变量名1 [, 变量名2, 变量名3, …];</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>;</span></span><br></pre></td></tr></table></figure><details ><summary> <p>点击查看更多</p> </summary>              <div class='content'>              <p>struct student 才是类型说明符，以下两种声明变量的方法都是错误的。</p><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>struct s； //错误</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>student s； //错误</p>            </div>              </div>            </details><ol start="2"><li><strong>在声明结构体类型的同时声明变量</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 标记名称</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员列表</span><br><span class="line">&#125; 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, 变量名<span class="number">3</span>, …];</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125; s1, s2;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>使用匿名结构体类型声明变量</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员列表</span><br><span class="line">&#125; 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, 变量名<span class="number">3</span>, …];</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125; s1, s2;</span><br></pre></td></tr></table></figure><p>结构体类型的成员，其类型也可以是结构体类型。例如，结构体类型 struct student 中的成员 age（年龄），由于年龄总是随着时间变化，比较好的方法是用生日代替年龄，生日是一个日期（由年、月、日组成），可以声明一个结构体类型来描述日期：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>于是，描述学生信息的结构体类型声明可改为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">birthday</span>;</span><span class="comment">//birthday的类型是struct date</span></span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="初始化结构体类型的变量"><a href="#初始化结构体类型的变量" class="headerlink" title="初始化结构体类型的变量"></a>初始化结构体类型的变量</h3><p>在结构体类型的变量声明时给变量赋值，称为初始化。例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span> = &#123;</span><span class="string">"2015001"</span>, <span class="string">"LiMing"</span>, <span class="string">'M'</span>, <span class="number">18</span>, &#123;<span class="number">85.0</span>, <span class="number">92.5</span>, <span class="number">95.5</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>在初始化结构体类型的变量时，大括号内的数据顺序必须与结构体类型中成员的声明顺序一致；否则，就会产生混乱。</p></blockquote><p>如果某个成员的类型是结构体类型，其初始化方式如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">birthday</span>;</span><span class="comment">//birthday的类型是struct date</span></span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">t</span> = &#123;</span><span class="string">"2015001"</span>, <span class="string">"LiMing"</span>, <span class="string">'M'</span>, &#123;<span class="number">1997</span>, <span class="number">11</span>, <span class="number">18</span>&#125;, &#123;<span class="number">85.0</span>, <span class="number">92.5</span>, <span class="number">95.5</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><h3 id="引用结构体类型的变量"><a href="#引用结构体类型的变量" class="headerlink" title="引用结构体类型的变量"></a>引用结构体类型的变量</h3><ol><li><strong>不能将结构体类型的变量作为一个整体进行输入或输出</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span> = &#123;</span><span class="string">"2015001"</span>, <span class="string">"LiMing"</span>, <span class="string">'M'</span>, <span class="number">18</span>, &#123;<span class="number">85.0</span>, <span class="number">92.5</span>, <span class="number">95.5</span>&#125;&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s, %s, %c, %d, %f, %f, %f"</span>, s);<span class="comment">// 错误</span></span><br></pre></td></tr></table></figure><p><strong>引用结构体类型的变量中的成员要使用成员选择运算符 “ . ”，其一般形式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">结构体类型的变量名.成员名</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s.age = <span class="number">20</span>;<span class="comment">//将20赋值给变量s中的成员age</span></span><br><span class="line">s.age++;<span class="comment">//使变量s中的成员age加1</span></span><br><span class="line">sum = s.score[<span class="number">0</span>] + s.score[<span class="number">1</span>] + s.score[<span class="number">2</span>];</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>如果成员本身又是一个结构体类型的变量，则要用若干成员运算符，一级一级地找到最低一级的成员</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t.sno</span><br><span class="line">t.birthday.year</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>除了初始化，在其他位置只能用同类型的变量为结构体类型的变量赋值，或者为其成员赋值</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125; s1, s2;</span><br><span class="line"><span class="comment">// 对s1的各个成员逐一赋值</span></span><br><span class="line"><span class="built_in">strcpy</span>(s1.sno, <span class="string">"2015001"</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(s1.name, <span class="string">" LiMing"</span>);</span><br><span class="line">s1.sex = <span class="string">'M'</span>;</span><br><span class="line">s1.age = <span class="number">18</span>;</span><br><span class="line">s1.score[<span class="number">0</span>] = <span class="number">85.0</span>;</span><br><span class="line">s1.score[<span class="number">1</span>] = <span class="number">92.5</span>;</span><br><span class="line">s1.score[<span class="number">2</span>] = <span class="number">95.5</span>;</span><br><span class="line">s2 = s1;<span class="comment">// 用同类型的变量 s1 为 s2 赋值</span></span><br></pre></td></tr></table></figure><h4 id="例题1"><a href="#例题1" class="headerlink" title="例题1"></a>例题1</h4><p>初始化结构体类型的变量，然后输出该变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">        &#123;</span></span><br><span class="line">                <span class="keyword">char</span> sno[<span class="number">9</span>];</span><br><span class="line">                <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">                <span class="keyword">char</span> sex;</span><br><span class="line">                <span class="keyword">int</span> age;</span><br><span class="line">                <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span> = &#123;</span><span class="string">"2018001"</span>, <span class="string">"QinHao"</span>, <span class="string">'M'</span>, <span class="number">21</span>, &#123;<span class="number">100</span>, <span class="number">95</span>, <span class="number">98</span>&#125;&#125;;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sno: %s\n"</span>, s.sno);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"name: %s\n"</span>, s.name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sno: %c\n"</span>, s.sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sno: %d\n"</span>, s.age);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"score: "</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%5.lf"</span>, s.score[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sno: 2018001</span><br><span class="line">name: QinHao</span><br><span class="line">sno: M</span><br><span class="line">sno: 21</span><br><span class="line">score:   100   95   98</span><br></pre></td></tr></table></figure><blockquote><p>结构体类型 struct student 的声明放在 main 函数的函数体内，只能在 main 函数的函数体内使用 struct student 。</p></blockquote><h4 id="例题2"><a href="#例题2" class="headerlink" title="例题2"></a>例题2</h4><p>输入结构体类型的变量中各成员的值，为结构体类型的变量赋值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s1</span>, <span class="title">s2</span>;</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input the student's information: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c%s%s%d"</span>, &amp;s1.sex,s1.sno, s1.name, &amp;s1.age);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;s1.score[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        s2 = s1;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sno: %s\n"</span>, s2.sno);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"name: %s\n"</span>, s2.name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sex: %c\n"</span>, s2.sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"age: %d\n"</span>, s2.age);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"score: "</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%6.1lf"</span>, s2.score[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input the student&#39;s information: M 2018001 QinHao 21 85.0 92.5 95.5</span><br><span class="line">sno: 2018001</span><br><span class="line">name: QinHao</span><br><span class="line">sex: M</span><br><span class="line">age: 21</span><br><span class="line">score:   85.0  92.5  95.5</span><br></pre></td></tr></table></figure><blockquote><p>结构体函数 struct student 的声明放在 main 函数之前，struct student 可以被其作用范围内的所有函数使用。通常，将结构体、共同体或枚举类型的声明放在 main 函数之前。</p></blockquote><h3 id="指向结构体类型的指针变量"><a href="#指向结构体类型的指针变量" class="headerlink" title="指向结构体类型的指针变量"></a>指向结构体类型的指针变量</h3><p>使用成员间接选择运算符“-&gt;”，可以直观、方便地通过指向结构体类型的指针变量访问该结构体类型变量的成员，其一般形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">指向结构体类型的指针变量名-&gt;成员名</span><br></pre></td></tr></table></figure><h4 id="例题3"><a href="#例题3" class="headerlink" title="例题3"></a>例题3</h4><p>使用指向结构体类型的指针变量访问该结构体类型变量的成员。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>;</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span>      <span class="comment">// 声明指向结构体类型的指针变量</span></span><br><span class="line">        <span class="built_in">strcpy</span>(s.sno, <span class="string">"2018001"</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(s.name, <span class="string">"QinHao"</span>);</span><br><span class="line">        s.sex = <span class="string">'M'</span>;</span><br><span class="line">        s.age = <span class="number">21</span>;</span><br><span class="line">        s.score = <span class="number">92.5</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"s.sno\t\ts.name\t\ts.sex\t\ts.age\t\ts.score"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n\n"</span>, s.sno, s.name, s.sex, s.age, s.score);</span><br><span class="line">        p = &amp;s;         <span class="comment">// 使指针变量 p 指向变量s</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"(*p).sno\t(*p).name\t(*p).sex\t(*p).age\t(*p).score"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n\n"</span>, (*p).sno, (*p).name, (*p).sex, (*p).age, (*p).score);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"p-&gt;sno\t\tp-&gt;name\t\tp-&gt;sex\t\tp-&gt;age\t\tp-&gt;score"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n"</span>, p-&gt;sno, p-&gt;name, p-&gt;sex, p-&gt;age, p-&gt;score);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s.sno           s.name          s.sex           s.age           s.score</span><br><span class="line">2018001         QinHao          M               21              92.5</span><br><span class="line"></span><br><span class="line">(*p).sno        (*p).name       (*p).sex        (*p).age        (*p).score</span><br><span class="line">2018001         QinHao          M               21              92.5</span><br><span class="line"></span><br><span class="line">p-&gt;sno          p-&gt;name         p-&gt;sex          p-&gt;age          p-&gt;score</span><br><span class="line">2018001         QinHao          M               21              92.5</span><br></pre></td></tr></table></figure><h3 id="编程练习1"><a href="#编程练习1" class="headerlink" title="编程练习1"></a>编程练习1</h3><p>声明结构体类型 struct book，描述图书信息：书名（title）、作者（author）、出版社（press）、价格（price）、数量（amount）。输入一本图书的信息，采用例题3的三种方式输出图书的信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> title[<span class="number">30</span>];</span><br><span class="line">        <span class="keyword">char</span> author[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> <span class="built_in">press</span>[<span class="number">30</span>];</span><br><span class="line">        <span class="keyword">double</span> price;</span><br><span class="line">        <span class="keyword">int</span> amount;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">b</span>;</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">book</span> *<span class="title">p</span>;</span></span><br><span class="line">        <span class="built_in">strcpy</span>(b.title, <span class="string">"疯狂Java讲义"</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(b.author, <span class="string">"李刚"</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(b.<span class="built_in">press</span>, <span class="string">"电子工业出版社"</span>);</span><br><span class="line">        b.price = <span class="number">79.0</span>;</span><br><span class="line">        b.amount = <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"b.title\t\t\tb.author\t\tb.press\t\t\tb.price\t\t\tb.amount"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t\t%s\t\t%.1lf%\t\t\t%d\n\n"</span>, b.title, b.author, b.<span class="built_in">press</span>, b.price, b.amount);</span><br><span class="line">        p = &amp;b;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"(*p).title\t\t(*p).author\t\t(*p).press\t\t(*p).price\t\t(*p).amount"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t\t%s\t\t%.1lf\t\t\t%d\n\n"</span>, (*p).title, (*p).author, (*p).<span class="built_in">press</span>, (*p).price, (*p).amount);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"(*p-&gt;title\t\t(*p-&gt;author\t\t(*p-&gt;press\t\t(*p-&gt;price\t\t(*p-&gt;amount"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t\t%s\t\t%.1lf\t\t\t%d\n"</span>, p-&gt;title, p-&gt;author, p-&gt;<span class="built_in">press</span>, p-&gt;price, p-&gt;amount);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210315192454.png" alt=""></p><h3 id="编程练习2"><a href="#编程练习2" class="headerlink" title="编程练习2"></a>编程练习2</h3><p>声明结构体类型 struct date ，描述日期信息：年（year）、月（month）、日（day）。输入一个日期，计算并输出是这一年的第几天，注意判断是不是闰年。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">int</span> year;</span><br><span class="line">        <span class="keyword">int</span> month;</span><br><span class="line">        <span class="keyword">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">d</span>;</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>, i;</span><br><span class="line">        <span class="keyword">int</span> leapyear[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> commonyear[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入年："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;d.year);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入月："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;d.month);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入日："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;d.day);</span><br><span class="line">        <span class="keyword">if</span>(d.year % <span class="number">400</span> == <span class="number">0</span> || (d.year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; d.year % <span class="number">100</span> != <span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; d.month;i ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        sum += leapyear[i];</span><br><span class="line">                &#125;</span><br><span class="line">                sum += d.day;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; d.month;i ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        sum += commonyear[i];</span><br><span class="line">                &#125;</span><br><span class="line">                sum += d.day;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d年%d月%d日是%d年的第%d天\n"</span>, d.year, d.month, d.day, d.year, sum);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请输入年：2020</span><br><span class="line">请输入月：12</span><br><span class="line">请输入日：31</span><br><span class="line">2020年12月31日是2020年的第366天</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请输入年：2021</span><br><span class="line">请输入月：12</span><br><span class="line">请输入日：31</span><br><span class="line">2021年12月31日是2021年的第365天</span><br></pre></td></tr></table></figure><h2 id="结构体类型与数组"><a href="#结构体类型与数组" class="headerlink" title="结构体类型与数组"></a>结构体类型与数组</h2><h3 id="数组声明"><a href="#数组声明" class="headerlink" title="数组声明"></a>数组声明</h3><ol><li><strong>先声明结构体类型再声明数组</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[10];</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>在声明结构体类型的同时声明数组</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125; s[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>使用匿名结构体类型声明数组</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125; s[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><h3 id="引用数组元素的成员"><a href="#引用数组元素的成员" class="headerlink" title="引用数组元素的成员"></a>引用数组元素的成员</h3><p>数组元素的类型是结构体类型，可使用成员选择运算符引用数组元素的成员。</p><h3 id="初始化数组"><a href="#初始化数组" class="headerlink" title="初始化数组"></a>初始化数组</h3><h4 id="例题1-1"><a href="#例题1-1" class="headerlink" title="例题1"></a>例题1</h4><p>初始化数组，输出数组中的每一个数组元素。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[3] = &#123;</span></span><br><span class="line">                &#123;<span class="string">"2018001"</span>, <span class="string">"Zhangsan"</span>, <span class="string">'M'</span>, <span class="number">18</span>, <span class="number">92.5</span>&#125;,</span><br><span class="line">                &#123;<span class="string">"2018002"</span>, <span class="string">"Lisi"</span>, <span class="string">'F'</span>, <span class="number">18</span>, <span class="number">95.5</span>&#125;,</span><br><span class="line">                &#123;<span class="string">"2018003"</span>, <span class="string">"Wangwu"</span>, <span class="string">'M'</span>, <span class="number">19</span>, <span class="number">85.0</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"  sno                  name     sex     age       score"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s%20s%5c%8d%12.1lf\n"</span>, s[i].sno, s[i].name, s[i].sex, s[i].age, s[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210315205559.png" alt=""></p><h4 id="例题2-1"><a href="#例题2-1" class="headerlink" title="例题2"></a>例题2</h4><p>输入三个学生的信息，输出成绩（score）高于平均成绩的学生信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[3];</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>, avg = <span class="number">0.0</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Input three students' information (sex, sno, name, age, score):"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="comment">// 先输入字符数据</span></span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%c%s%s%d%lf"</span>, &amp;s[i].sex, &amp;s[i].sno, &amp;s[i].name, &amp;s[i].age, &amp;s[i].score);</span><br><span class="line">                getchar();</span><br><span class="line">                sum += s[i].score;</span><br><span class="line">        &#125;</span><br><span class="line">        avg = sum / <span class="number">3.0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average score is %4.1lf\n"</span>, avg);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"  sno                 name    sex  age   score"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i].score &gt; avg)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%s%20s%5c%5d%8.1lf\n"</span>, s[i].sno, s[i].name, s[i].sex, s[i].age, s[i].score);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210315212109.png" alt=""></p><h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><p>声明结构体类型 struct book，描述图书信息：书名（title）、作者（author）、出版社（press）、价格（price）、数量（amount）。输入五本图书的信息，按价格升序的方式对五本图书排序，输出排序后的图书信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> title[<span class="number">40</span>];</span><br><span class="line">        <span class="keyword">char</span> author[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> <span class="built_in">press</span>[<span class="number">40</span>];</span><br><span class="line">        <span class="keyword">double</span> price;</span><br><span class="line">        <span class="keyword">int</span> amount;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">b</span>[5], <span class="title">temp</span>;</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入5本书的资料（书名，作者，出版社，价格，数量）:\n"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%s%s%s%lf%d"</span>, &amp;b[i].title, &amp;b[i].author, &amp;b[i].<span class="built_in">press</span>, &amp;b[i].price, &amp;b[i].amount);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">4</span> - i;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">if</span>(b[j].price &gt;  b[j + <span class="number">1</span>].price)</span><br><span class="line">                        &#123;</span><br><span class="line">                                temp = b[j];</span><br><span class="line">                                b[j] = b[j + <span class="number">1</span>];</span><br><span class="line">                                b[j + <span class="number">1</span>] = temp;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t%s\t\t%.1lf\t\t%d\n"</span>, b[i].title, b[i].author, b[i].<span class="built_in">press</span>, b[i].price, b[i].amount);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210316091354.png" alt=""></p><h2 id="结构体类型与函数"><a href="#结构体类型与函数" class="headerlink" title="结构体类型与函数"></a>结构体类型与函数</h2><h3 id="形参是结构体类型的变量"><a href="#形参是结构体类型的变量" class="headerlink" title="形参是结构体类型的变量"></a>形参是结构体类型的变量</h3><h4 id="例题1-2"><a href="#例题1-2" class="headerlink" title="例题1"></a>例题1</h4><p>输入两个学生中成绩（score）较高的学生信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">struct student <span class="title">max</span><span class="params">(struct student t1, struct student t2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s1</span> = &#123;</span><span class="string">"2018001"</span>, <span class="string">"Liming"</span>, <span class="string">'M'</span>, <span class="number">18</span>, <span class="number">92.5</span>&#125;;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s2</span> = &#123;</span><span class="string">"2018002"</span>, <span class="string">"Wangfang"</span>, <span class="string">'F'</span>, <span class="number">18</span>, <span class="number">95.5</span>&#125;;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>;</span></span><br><span class="line">        s = <span class="built_in">max</span>(s1, s2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sno: %s\n"</span>, s.sno);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"name: %s\n"</span>, s.name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sex: %c\n"</span>, s.sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"age: %d\n"</span>, s.age);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"score: %.1lf\n"</span>, s.score);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">struct student <span class="title">max</span><span class="params">(struct student t1, struct student t2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t1.score &gt; t2.score)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> t1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> t2;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sno: 2018002</span><br><span class="line">name: Wangfang</span><br><span class="line">sex: F</span><br><span class="line">age: 18</span><br><span class="line">score: 95.5</span><br></pre></td></tr></table></figure><h4 id="例题2-2"><a href="#例题2-2" class="headerlink" title="例题2"></a>例题2</h4><p>修改学生的年龄。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(struct student t)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span> = &#123;</span><span class="string">"2015001"</span>, <span class="string">"Liming"</span>, <span class="string">'M'</span>, <span class="number">18</span>, <span class="number">92.5</span>&#125;;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"\t\t\tsno\t\tname\t\tsex\t\tage\t\tscore"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Before modifying\t%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n"</span>, s.sno, s.name, s.sex, s.age, s.score);</span><br><span class="line">        change(s);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"After modifying\t\t%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n"</span>, s.sno, s.name, s.sex, s.age, s.score);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(struct student t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        t.age ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210316093022.png" alt=""></p><blockquote><p>实参向形参的传递是单向的，在被调函数 change 中改变形参 t 的值并不影响实参 s 的值。因此，调用函数 change 后，学生的年龄依旧是 18 岁。</p></blockquote><h3 id="形参是指向结构体类型的指针变量"><a href="#形参是指向结构体类型的指针变量" class="headerlink" title="形参是指向结构体类型的指针变量"></a>形参是指向结构体类型的指针变量</h3><h4 id="例题1-3"><a href="#例题1-3" class="headerlink" title="例题1"></a>例题1</h4><p>输出两个学生中成绩（score）较高的学生信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">struct student *<span class="title">max</span><span class="params">(struct student *p1, struct student *p2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s1</span> = &#123;</span><span class="string">"2015001"</span>, <span class="string">"LiMing"</span>, <span class="string">'M'</span>, <span class="number">18</span>, <span class="number">92.5</span>&#125;;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s2</span> = &#123;</span><span class="string">"2015002"</span>, <span class="string">"WangFang"</span>, <span class="string">'F'</span>, <span class="number">18</span>, <span class="number">95.5</span>&#125;;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">q</span>;</span></span><br><span class="line">        q = <span class="built_in">max</span>(&amp;s1, &amp;s2);      <span class="comment">//实参是结构体类型变量的地址</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sno: %s\n"</span>, q-&gt;sno);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"name: %s\n"</span>, q-&gt;name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sex: %c\n"</span>, q-&gt;sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"age: %d\n"</span>, q-&gt;age);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"score: %.1lf\n"</span>, q-&gt;score);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 形参是指向结构体类型的指针变量</span></span><br><span class="line"><span class="function">struct student *<span class="title">max</span><span class="params">(struct student *p1, struct student *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p1-&gt;score &gt; p2-&gt;score)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> p1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> p2;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sno: 2015002</span><br><span class="line">name: WangFang</span><br><span class="line">sex: F</span><br><span class="line">age: 18</span><br><span class="line">score: 95.5</span><br></pre></td></tr></table></figure><h4 id="例题2-3"><a href="#例题2-3" class="headerlink" title="例题2"></a>例题2</h4><p>修改学生的年龄。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(struct student *p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span> = &#123;</span><span class="string">"2015001"</span>, <span class="string">"LiMing"</span>, <span class="string">'M'</span>, <span class="number">18</span>, <span class="number">92.5</span>&#125;;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">q</span> = &amp;<span class="title">s</span>;</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"\t\t\tsno\t\tname\t\tsex\t\tage\t\tscore"</span>);       </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Before modifying\t%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n"</span>, s.sno, s.name, s.sex, s.age, s.score);</span><br><span class="line">        change(q);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"After modifying\t\t%s\t\t%s\t\t%c\t\t%d\t\t%.1lf\n"</span>, s.sno, s.name, s.sex, s.age, s.score);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(struct student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        p-&gt;age ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210316094850.png" alt=""></p><h3 id="形参是数组元素为结构体类型的数组"><a href="#形参是数组元素为结构体类型的数组" class="headerlink" title="形参是数组元素为结构体类型的数组"></a>形参是数组元素为结构体类型的数组</h3><h4 id="例题1-4"><a href="#例题1-4" class="headerlink" title="例题1"></a>例题1</h4><p>输入三个学生的信息并输出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n, struct student t[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n, struct student *t)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[3];</span></span><br><span class="line">        input(<span class="number">3</span>, s);</span><br><span class="line">        output(<span class="number">3</span>, s);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n, struct student t[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入%d位同学的信息（性别，学号，姓名，年龄，成绩）\n"</span>, n);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%c%s%s%d%lf"</span>, &amp;t[i].sex, t[i].sno, t[i].name, &amp;t[i].age, &amp;t[i].score);</span><br><span class="line">                getchar();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n, struct student *t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"  sno                  name     sex  age   score"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s%20s%5c%5d%8.1lf\n"</span>, t[i].sno, t[i].name, t[i].sex, t[i].age, t[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210316100449.png" alt=""></p><h3 id="编程练习1-1"><a href="#编程练习1-1" class="headerlink" title="编程练习1"></a>编程练习1</h3><p>声明结构体类型 struct book，描述图书信息：书名（title）、作者（author）、出版社（press）、价格（price）、数量（amount）。已知函数头及功能如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span>;<span class="comment">// 输入n本图书的信息到一维数组t中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span>;<span class="comment">// 对长度为n的一维数组t中的数组元素按价格升序排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n, struct book t[[ ])</span></span>;<span class="comment">// 输出长度为n的一维数组t中的数组元素</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> title[<span class="number">30</span>];</span><br><span class="line">        <span class="keyword">char</span> author[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> <span class="built_in">press</span>[<span class="number">30</span>];</span><br><span class="line">        <span class="keyword">double</span> price;</span><br><span class="line">        <span class="keyword">int</span> amount;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">b</span>[5];</span></span><br><span class="line">        input(<span class="number">5</span>, b);</span><br><span class="line">        sort(<span class="number">5</span>, b);</span><br><span class="line">        output(<span class="number">5</span>, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入%d本图书的资料（书名，作者，出版社，价格，数量）\n"</span>, n);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%s%s%s%lf%d"</span>, t[i].title, t[i].author, t[i].<span class="built_in">press</span>, &amp;t[i].price, &amp;t[i].amount);</span><br><span class="line">                getchar();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="comment">// 按照价格升序顺序排列</span></span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">temp</span>;</span></span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; (n - <span class="number">1</span>) - i;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">if</span>(t[j].price &gt; t[j + <span class="number">1</span>].price)</span><br><span class="line">                        &#123;</span><br><span class="line">                                temp = t[j];</span><br><span class="line">                                t[j] = t[j + <span class="number">1</span>];</span><br><span class="line">                                t[j + <span class="number">1</span>] = temp;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n, struct book t[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"title\t\tauthor\t\tpress\t\tprice\t\tamount"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\t\t%s\t\t%s\t\t%.1lf\t\t%d\n"</span>, t[i].title, t[i].author, t[i].<span class="built_in">press</span>, t[i].price, t[i].amount);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210316102737.png" alt=""></p><h3 id="编程练习2-1"><a href="#编程练习2-1" class="headerlink" title="编程练习2"></a>编程练习2</h3><p>struct mycomplex 是表示复数的结构体类型，成员 real 表示实部，成员 image 表示虚部。已知函数头及功能如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mycomplex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> real;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">image</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">struct mycomplex <span class="title">input</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">// 输入并返回一个复数</span></span><br><span class="line"><span class="function">struct mycomplex <span class="title">add</span><span class="params">(struct mycomplex c1, struct mycomplex c2)</span></span>;<span class="comment">// 计算并返回两个复数的和</span></span><br><span class="line"><span class="function">struct mycomplex <span class="title">mul</span><span class="params">(struct mycomplex c1, struct mycomplex c2)</span></span>;<span class="comment">// 计算并返回两个复数的乘积</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(struct mycomplex c)</span></span>;<span class="comment">// 输出一个复数</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mycomplex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> real;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">image</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">struct mycomplex <span class="title">input</span><span class="params">(<span class="keyword">void</span>)</span></span>;                   <span class="comment">// 输入并返回一个复数</span></span><br><span class="line"><span class="function">struct mycomplex <span class="title">add</span><span class="params">(struct mycomplex c1, struct mycomplex c2)</span></span>;         <span class="comment">// 计算并返回两个复数的和</span></span><br><span class="line"><span class="function">struct mycomplex <span class="title">mul</span><span class="params">(struct mycomplex c1, struct mycomplex c2)</span></span>;         <span class="comment">// 计算并返回两个复数的乘积</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(struct mycomplex c)</span></span>;        <span class="comment">// 输出一个复数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">mycomplex</span> <span class="title">c1</span>, <span class="title">c2</span>, <span class="title">c3</span>, <span class="title">c4</span>;</span></span><br><span class="line">        c1 = input();</span><br><span class="line">        c2 = input();</span><br><span class="line">        c3 = add(c1, c2);</span><br><span class="line">        c4 = mul(c1, c2);</span><br><span class="line">        output(c3);</span><br><span class="line">        output(c4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">struct mycomplex <span class="title">input</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">mycomplex</span> <span class="title">c</span>;</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入复数的实部和虚部："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;c.real, &amp;c.<span class="built_in">image</span>);</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">struct mycomplex <span class="title">add</span><span class="params">(struct mycomplex c1, struct mycomplex c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">mycomplex</span> <span class="title">c</span>;</span></span><br><span class="line">        i = c1.real + c2.real;</span><br><span class="line">        j = c1.<span class="built_in">image</span> + c2.<span class="built_in">image</span>;</span><br><span class="line">        c.real = i;</span><br><span class="line">        c.<span class="built_in">image</span> = j;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">struct mycomplex <span class="title">mul</span><span class="params">(struct mycomplex c1, struct mycomplex c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">mycomplex</span> <span class="title">c</span>;</span></span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        i = c1.real * c2.real - c1.<span class="built_in">image</span> * c2.<span class="built_in">image</span>;</span><br><span class="line">        j = c1.<span class="built_in">image</span> * c2.real + c1.real * c2.<span class="built_in">image</span>;</span><br><span class="line">        c.real = i;</span><br><span class="line">        c.<span class="built_in">image</span> = j;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(struct mycomplex c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.lf + %.lfi\n"</span>, c.real, c.<span class="built_in">image</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请输入复数的实部和虚部：1 2</span><br><span class="line">请输入复数的实部和虚部：3 4</span><br><span class="line">4 + 6i</span><br><span class="line">-5 + 10i</span><br></pre></td></tr></table></figure><h2 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h2><p><strong>单链表的元素称为结点，每个结点包括两个域：存储实际数据的域称为数据域；存储下一个结点地址的域称为指针域。</strong></p><p><strong>为了在编程时方便处理，往往在单链表的第一个结点之前附设一个结点，称为头结点</strong></p><p><strong>头结点的数据域不存储任何信息，头结点的指针域存储第一个结点的地址</strong></p><h3 id="动态存储库函数"><a href="#动态存储库函数" class="headerlink" title="动态存储库函数"></a>动态存储库函数</h3><ol><li>库函数 malloc</li></ol><p>所需包含的头文件：<kbd>stdlib.h</kbd>。</p><p>函数原型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">malloc</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="built_in">size</span>)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>功能：分配长度为size个字节的存储单元，当执行成功时，返回一个指向所分配存储单元起始地址的指针；否则，返回NULL</p></blockquote><ol start="2"><li>库函数 free</li></ol><p>所需包含的头文件：<kbd>stdlib.h</kbd>。</p><p>函数原型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">free</span><span class="params">(<span class="keyword">void</span> *ptr)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>功能：释放指针变量 ptr 指向的存储单元</p></blockquote><h4 id="例题1-5"><a href="#例题1-5" class="headerlink" title="例题1"></a>例题1</h4><p>调用库函数 malloc 和 free ，分配 、释放存储单元。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Input the students' information(sex, sno, name, age, score)"</span>);</span><br><span class="line">        p = (struct student *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct student));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c%s%s%d%lf"</span>, &amp;p-&gt;sex, p-&gt;sno, p-&gt;name, &amp;p-&gt;age, &amp;p-&gt;score);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sno: %s\n"</span>, p-&gt;sno);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"name: %s\n"</span>, p-&gt;name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sex: %c\n"</span>, p-&gt;sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"age: %d\n"</span>, p-&gt;age);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"score: %.1lf\n"</span>, p-&gt;score);</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">        p = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input the students&#39; information(sex, sno, name, age, score)</span><br><span class="line">M 2015001 LiMing 18 92.5</span><br><span class="line">sno: 2015001</span><br><span class="line">name: LiMing</span><br><span class="line">sex: M</span><br><span class="line">age: 18</span><br><span class="line">score: 92.5</span><br></pre></td></tr></table></figure><h3 id="单链表的基本操作"><a href="#单链表的基本操作" class="headerlink" title="单链表的基本操作"></a>单链表的基本操作</h3><p><strong>通常用结构体类型的变量来表示单链表中的结点，一个结构体类型的变量包含若干成员，用指针类型的成员存储下一个结点的地址</strong>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，成员 <kbd>sno</kbd>、<kbd>name</kbd>、<kbd>sex</kbd>、<kbd>age</kbd> 和 <kbd>score</kbd> 一起作为数据域，存储实际数据；成员<kbd>next</kbd> 是指向结构体类型 <kbd>struct student</kbd> 的指针变量，将成员<kbd>next</kbd> 作为指针域，存储下一个节点的地址。</p><hr><h4 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h4><p>建立一个学生信息的单链表，输出单链表中的学生信息，然后销毁单链表。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> sex;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">double</span> score;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 将p 指向的节点作为第一个节点插入到以head为头指针的单链表中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert_node</span><span class="params">(struct student *head, struct student *p)</span></span>;</span><br><span class="line"><span class="comment">// 输出以 head 为头指针的单链表中所有学生的信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(struct student *head)</span></span>;</span><br><span class="line"><span class="comment">// 删除以head为头指针的单链表的第一个节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_node</span><span class="params">(struct student *head)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">h</span>, *<span class="title">q</span>;</span></span><br><span class="line">        <span class="keyword">int</span> i, n;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input the number of students:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        getchar();      <span class="comment">// 读入并丢弃“回车符”</span></span><br><span class="line">        <span class="comment">// 创建头节点，并设置头结点的指针域为空</span></span><br><span class="line">        h = (struct student *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct student));</span><br><span class="line">        h -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input %d students' information(sex, sno, name, age, score):\n"</span>, n);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="comment">// 创建新节点</span></span><br><span class="line">                q = (struct student *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct student));</span><br><span class="line">                <span class="comment">// 读入学生信息</span></span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%c%s%s%d%lf"</span>, &amp;q-&gt;sex, q-&gt;sno, q-&gt;name, &amp;q-&gt;age, &amp;q-&gt;score);</span><br><span class="line">                getchar();      <span class="comment">// 读入并丢弃“回车符”</span></span><br><span class="line">                <span class="comment">// 将新节点作为第一个节点插入到单链表中</span></span><br><span class="line">                insert_node(h, q);</span><br><span class="line">        &#125;</span><br><span class="line">        traverse(h);</span><br><span class="line">        <span class="keyword">while</span>(h-&gt;next)</span><br><span class="line">        &#123;</span><br><span class="line">                delete_node(h);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(h);</span><br><span class="line">        h = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert_node</span><span class="params">(struct student *head, struct student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        p -&gt; next = head -&gt; next;</span><br><span class="line">        head -&gt; next = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(struct student *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"  sno              name       sex  age   score"</span>);</span><br><span class="line">        p = head -&gt; next;       <span class="comment">// 将p指向单链表的第一个结点</span></span><br><span class="line">        <span class="comment">// 当p等于NULL时，整个链表输出完成，while语句结束</span></span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="comment">// 输出p所指结点的数据域，即学生信息</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s%20s%5c%5d%8.1lf\n"</span>, p-&gt;sno, p-&gt;name, p-&gt;sex, p-&gt;age, p-&gt;score);</span><br><span class="line">                p = p -&gt; next;  <span class="comment">// 使p指向下一个结点</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_node</span><span class="params">(struct student *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span></span><br><span class="line">        p = head -&gt; next;</span><br><span class="line">        head -&gt; next = p -&gt; next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Deleting the student %s ...\n"</span>, p-&gt;sno);</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">        p = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210316141108.png" alt=""></p><h2 id="共同体声明"><a href="#共同体声明" class="headerlink" title="共同体声明"></a>共同体声明</h2><h3 id="共同体类型声明"><a href="#共同体类型声明" class="headerlink" title="共同体类型声明"></a>共同体类型声明</h3><p>共同体声明的一般形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> [标记名称]</span><br><span class="line">&#123;</span><br><span class="line">    成员列表</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="共同体类型的变量声明"><a href="#共同体类型的变量声明" class="headerlink" title="共同体类型的变量声明"></a>共同体类型的变量声明</h3><ol><li>先声明共同体类型再声明变量</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> 标记名称</span><br><span class="line">&#123;</span><br><span class="line">    成员列表</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">union</span> 标记名称 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, 变量名<span class="number">3</span>, ...];</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> data</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">double</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">union</span> data x;</span><br></pre></td></tr></table></figure><ol start="2"><li>在声明共同体类型的同时声明变量</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> 标记名称</span><br><span class="line">&#123;</span><br><span class="line">    成员列表</span><br><span class="line">&#125; 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, 变量名<span class="number">3</span>, ...];</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> data</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">double</span> d;</span><br><span class="line">&#125; x1, x2;</span><br></pre></td></tr></table></figure><ol start="3"><li>使用匿名共同体类型声明变量</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span></span><br><span class="line">&#123;</span><br><span class="line">    成员变量</span><br><span class="line">&#125; 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, 变量名<span class="number">3</span>, ...];</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">double</span> d;</span><br><span class="line">&#125; x1, x2;</span><br></pre></td></tr></table></figure><h3 id="初始化共同体类型的变量"><a href="#初始化共同体类型的变量" class="headerlink" title="初始化共同体类型的变量"></a>初始化共同体类型的变量</h3><p>在共同体类型的变量声明时给变量赋值，称为初始化。只能对共同体类型变量的第一个成员赋值，不能像结构体类型的变量那样对所有的成员赋值。例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> data</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">double</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">union</span> data x1, x2;</span><br><span class="line"><span class="keyword">union</span> data x1 = &#123;<span class="string">'s'</span>&#125;;<span class="comment">//正确，为第一个成员ch赋值's'</span></span><br><span class="line"><span class="keyword">union</span> data x2 = &#123;<span class="string">'s'</span>, <span class="number">100</span>, <span class="number">95.5</span>&#125;;<span class="comment">//错误</span></span><br></pre></td></tr></table></figure><h3 id="引用共同体类型的变量"><a href="#引用共同体类型的变量" class="headerlink" title="引用共同体类型的变量"></a>引用共同体类型的变量</h3><p><strong>引用共同体类型的变量应遵守以下规则：</strong></p><ol><li>不能将共同体类型的变量作为一个整体进行输入和输出。</li><li>除了初始化，在其他位置只能用同类型的变量为共同体类型的变量赋值，或者为其他成员赋值。</li><li>共同体类型的变量中起作用的成员是最后一次赋值的成员，在给一个成员赋值后原有的成员就会失去作用。</li></ol><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>建立如表所示的成绩单，输入各科成绩，然后再输出。</p><table><thead><tr><th align="center">课程名</th><th align="center">评分方式</th><th align="center">分数</th><th align="center">等级</th></tr></thead><tbody><tr><td align="center">C  Language  Programming</td><td align="center">百分制</td><td align="center">90</td><td align="center"></td></tr><tr><td align="center">College  Chinese</td><td align="center">五级分制</td><td align="center"></td><td align="center">excellent</td></tr><tr><td align="center">Advanced  Mathematics</td><td align="center">百分制</td><td align="center">88</td><td align="center"></td></tr><tr><td align="center">Introduction  to  Computers</td><td align="center">五级分制</td><td align="center"></td><td align="center">good</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">union</span> method</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">int</span> hundred;    <span class="comment">// 百分制成绩</span></span><br><span class="line">        <span class="keyword">char</span> five[<span class="number">10</span>];  <span class="comment">// 五级分制成绩</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">course</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">30</span>];  <span class="comment">// 课程名称</span></span><br><span class="line">        <span class="keyword">char</span> mode;      <span class="comment">// 评分方式（h：百分制，f：五级制）</span></span><br><span class="line">        <span class="keyword">union</span> method grade;     <span class="comment">// 共同体类型的成员表示不同类型的成绩</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">course</span> <span class="title">report</span>[4];</span></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="comment">// 将课程名称存入结构体类型</span></span><br><span class="line">        <span class="built_in">strcpy</span>(report[<span class="number">0</span>].name, <span class="string">"C  Language  Programming"</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(report[<span class="number">1</span>].name, <span class="string">"College  Chinese"</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(report[<span class="number">2</span>].name, <span class="string">"Advanced  Mathematics"</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(report[<span class="number">3</span>].name, <span class="string">"Introduction  to  Computers"</span>);</span><br><span class="line">        <span class="comment">// 输入各门课程的评分方式、考试成绩</span></span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Input the mode(h/f) of course \"%s\": "</span>, report[i].name);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;report[i].mode);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Examination  Result: "</span>);</span><br><span class="line">                <span class="comment">// 根据评分方式输入不同类型的考试成绩</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="string">'h'</span> == report[i].mode)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;report[i].grade.hundred);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, report[i].grade.five);</span><br><span class="line">                &#125;</span><br><span class="line">                getchar();      <span class="comment">// 读入并丢弃回车符</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"\nname                          mode             grade"</span>);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%-30s%-16c"</span>, report[i].name, report[i].mode);</span><br><span class="line">                <span class="comment">// 根据评分方式输出不同类型的考试成绩</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="string">'h'</span> == report[i].mode)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, report[i].grade.hundred);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, report[i].grade.five);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210316164129.png" alt=""></p><h2 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h2><p>所谓”枚举”，就是将变量的可取值一一列举出来，变量只能存、取其中的某个值，存、取其他值是错误的</p><h3 id="枚举类型声明"><a href="#枚举类型声明" class="headerlink" title="枚举类型声明"></a>枚举类型声明</h3><p>枚举类型声明的一般形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> [标记名称] &#123;枚举常量<span class="number">1</span>[, 枚举常量<span class="number">2</span>, 枚举常量<span class="number">3</span>, ...]&#125;;</span><br></pre></td></tr></table></figure><blockquote><p><strong>标记名称是一个标识符，也可以省略标记名称，表示匿名枚举类型</strong></p><p><strong>枚举常量是类型为 int 的标识符</strong></p></blockquote><span class='p red'>枚举类型声明既可以放在函数之外，被其作用范围内的所有函数使用；也可以放在某个函数的函数体内，只能在该函数的函数体内使用</span><h3 id="枚举常量的值"><a href="#枚举常量的值" class="headerlink" title="枚举常量的值"></a>枚举常量的值</h3><p>*<em>在枚举类型声明中，枚举常量的值从 0 开始，依次加 1 *</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> weekday &#123;sun, mon, tue, wed, thu, fri, sat&#125;;</span><br></pre></td></tr></table></figure><table><thead><tr><th>枚举常量</th><th>sun</th><th>mon</th><th>tue</th><th>wed</th><th>thu</th><th>fri</th><th>sat</th></tr></thead><tbody><tr><td>枚举常量的值</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td></tr></tbody></table><h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h4><p>输出枚举常量的值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">enum</span> weekday &#123;sun, mon, tue, wed, thu = <span class="number">10</span>, fri, sat&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sun: %d\n"</span>, sun);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"mon: %d\n"</span>, mon);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"tue: %d\n"</span>, tue);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"wed: %d\n"</span>, wed);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"thu: %d\n"</span>, thu);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"fri: %d\n"</span>, fri);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sat: %d\n"</span>, sat);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sun: 0</span><br><span class="line">mon: 1</span><br><span class="line">tue: 2</span><br><span class="line">wed: 3</span><br><span class="line">thu: 10</span><br><span class="line">fri: 11</span><br><span class="line">sat: 12</span><br></pre></td></tr></table></figure><h3 id="枚举类型的变量声明"><a href="#枚举类型的变量声明" class="headerlink" title="枚举类型的变量声明"></a>枚举类型的变量声明</h3><ol><li>先声明枚举类型再声明变量</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> 标记名称 &#123;枚举常量<span class="number">1</span>[, 枚举常量<span class="number">2</span>, 枚举常量<span class="number">3</span>, ...]&#125;;</span><br><span class="line"><span class="keyword">enum</span> 标记名称 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, 变量名<span class="number">3</span>, ...];</span><br></pre></td></tr></table></figure><ol start="2"><li>在声明枚举类型的同时声明变量</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> 标记名称 &#123;枚举常量<span class="number">1</span>[, 枚举常量<span class="number">2</span>, ...]&#125; 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, ...];</span><br></pre></td></tr></table></figure><ol start="3"><li>使用匿名枚举类型声明变量</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> &#123;枚举变量<span class="number">1</span>[, 枚举变量<span class="number">2</span>, ...]&#125; 变量名<span class="number">1</span> [, 变量名<span class="number">2</span>, ...];</span><br></pre></td></tr></table></figure><h4 id="例题1-6"><a href="#例题1-6" class="headerlink" title="例题1"></a>例题1</h4><p>枚举类型的变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">enum</span> weekday &#123;sun, mon, tue, wed, thu, fri, sat&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">enum</span> weekday today, tomorrow;</span><br><span class="line">        today = mon;</span><br><span class="line">        tomorrow = (<span class="keyword">enum</span> weekday)(today + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"today: %d\n"</span>, today);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"tomorrow: %d\n"</span>, tomorrow);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">today: 1</span><br><span class="line">tomorrow: 2</span><br></pre></td></tr></table></figure><h4 id="例题2-4"><a href="#例题2-4" class="headerlink" title="例题2"></a>例题2</h4><p>间接输入、输出枚举类型的变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">enum</span> weekday &#123;sun, mon, tue, wed, thu, fri, sat&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">enum</span> weekday today, tomorrow;</span><br><span class="line">        <span class="keyword">char</span> *s[ ] = &#123;<span class="string">"sun"</span>, <span class="string">"mon"</span>, <span class="string">"tue"</span>, <span class="string">"wed"</span>, <span class="string">"thu"</span>, <span class="string">"fri"</span>, <span class="string">"sat"</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> day;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"What day is today:\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0--sun,1--mon,2--tue,3--wed,4--thu,5--fri,6--sat： "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;day);      <span class="comment">// 通过输入一个整数获知今天是星期几</span></span><br><span class="line">        today = (<span class="keyword">enum</span> weekday)day;</span><br><span class="line">        <span class="comment">// 根据today计算tomorrow</span></span><br><span class="line">        <span class="keyword">if</span>(sat == today)</span><br><span class="line">        &#123;</span><br><span class="line">                tomorrow = sun;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                tomorrow = (<span class="keyword">enum</span> weekday)(today + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Tomorrow is %s.\n"</span>, s[tomorrow]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">What day is today:</span><br><span class="line">0--sun,1--mon,2--tue,3--wed,4--thu,5--fri,6--sat: 5</span><br><span class="line">Tomorrow is sat.</span><br></pre></td></tr></table></figure><h3 id="编程练习-1"><a href="#编程练习-1" class="headerlink" title="编程练习"></a>编程练习</h3><p>输入五个学生的信息到数组 s 中，查找并输出平均成绩最高的学生的信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        <span class="keyword">char</span> sno[<span class="number">8</span>];    <span class="comment">//学号</span></span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];  <span class="comment">//姓名</span></span><br><span class="line">        <span class="keyword">enum</span> &#123;male, female&#125; sex;        <span class="comment">// 性别</span></span><br><span class="line">        <span class="keyword">int</span> age;        <span class="comment">// 年龄</span></span><br><span class="line">        <span class="keyword">double</span> score[<span class="number">3</span>];        <span class="comment">//成绩</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[5];</span></span><br></pre></td></tr></table></figure><h2 id="typedef-声明"><a href="#typedef-声明" class="headerlink" title="typedef 声明"></a>typedef 声明</h2><blockquote><p>typedef声明(typedef declaration)并没有引入新类型，只是为已有类型引入一个同义词</p></blockquote><p><strong>为已有类型引入一个同义词的方法：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">①声明变量</span><br><span class="line">②将变量名换成新类型名</span><br><span class="line">③在最前面加上typedef</span><br><span class="line">④使用新类型名声明变量</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;结构体类型&lt;/p&gt;
&lt;p&gt;结构体类型与数组&lt;/p&gt;
&lt;p&gt;结构体类型与函数&lt;/p&gt;
&lt;p&gt;单链表&lt;/p&gt;
&lt;p&gt;共同体声明&lt;/p&gt;
&lt;p&gt;枚举类型&lt;/p&gt;
&lt;p&gt;typedef声明&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>变量的属性和编译预处理</title>
    <link href="https://imqinhao.cn/2021/03/15/c_9/"/>
    <id>https://imqinhao.cn/2021/03/15/c_9/</id>
    <published>2021-03-15T09:02:14.000Z</published>
    <updated>2021-03-15T09:05:07.735Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>变量的作用域</p><p>变量的存储类别</p><p>宏定义</p><p>文件包含</p><p>条件编译</p><a id="more"></a><h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><blockquote><p>变量都有自己的作用域，按照作用域的范围可分为两种：<kbd>局部变量</kbd>和<kbd>全局变量</kbd>。</p></blockquote><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>在<wavy>函数内声明</wavy>的变量是<wavy>局部变量</wavy>，它<wavy>只在本函数内有效</wavy>。</p><details ><summary> <p>关于局部变量的说明如下</p> </summary>              <div class='content'>              <div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>main 函数内申明的变量也只在 main 函数内有效，main 函数不能使用其他函数中声明的局部变量。</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>不同函数内可以声明同名的局部变量，他们代表不同的对象，互不干扰。</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>形参也是局部变量。</p>            </div>              </div>            </details><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p>在<wavy>函数之外声明</wavy>的变量称为<wavy>全局变量</wavy>。全局变量的作用范围是<wavy>从声明变量的位置到本源文件的末尾</wavy>。</p><details ><summary> <p>关于全局变量的说明如下</p> </summary>              <div class='content'>              <div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>全局变量增加了函数间数据联系的渠道。</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>如果全局变量与局部变量同名，则在局部变量的作用范围内，全局变量被屏蔽，不起作用。</p>            </div>              </div>            </details><h3 id="编程练习1"><a href="#编程练习1" class="headerlink" title="编程练习1"></a>编程练习1</h3><p>编写并调用函数 exchange ，用于交换 int 类型全局变量 x 、 y 的值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入x的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入y的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"x = %d , y = %d\n"</span>, x, y);</span><br><span class="line">        exchange();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"now x = %d , y = %d\n"</span>, x, y);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        temp = x;</span><br><span class="line">        x = y;</span><br><span class="line">        y = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量的存储类别"><a href="#变量的存储类别" class="headerlink" title="变量的存储类别"></a>变量的存储类别</h2><p>变量的存储类别分为六种：<kbd>自动的（auto）</kbd>、<kbd>静态的（static）</kbd>、<kbd>寄存器的（register）</kbd>、<kbd>外部的（extern）</kbd>、<kbd>typedef</kbd>、<kbd>_Thread_local</kbd>。</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/%E5%8F%98%E9%87%8F%E7%9A%84%E5%AD%98%E5%82%A8%E7%B1%BB%E5%88%AB.png" alt=""></p><span class='p red'>静态存储变量：是指在程序运行期间分配固定的存储空间的方式。</span><span class='p red'>动态存储变量：是指在程序运行期间根据需要进行动态的分配空间的方式。</span><p>内存中供用户使用的存储空间的情况分为三部分：<strong>程序区；静态存储区；动态存储区</strong>。</p><blockquote><p>全局变量存放在静态存储区中，在程序开始执行时给全局变量分配存储区，程序执行完毕就释放。在程序执行过程中它们占据固定的存储单元，而不是动态地分配和释放的。</p></blockquote><h3 id="局部变量的存储类别"><a href="#局部变量的存储类别" class="headerlink" title="局部变量的存储类别"></a>局部变量的存储类别</h3><ul><li>函数中的局部变量，如不做专门的说明，都是动态的分配存储空间的，存储在动态存储区中。对它们分配和释放存储空间的工作是由编译系统自动处理的，因此这类局部变量称为<strong>自动变量</strong>。</li><li>自动变量用关键字<kbd><strong>auto</strong></kbd>作存储类型的说明。</li><li>如果声明局部变量时没有指定存储类别，默认为auto，通常称为<strong>自动变量</strong>。例如：int n;     // 等价于 auto int n;</li><li>有时希望函数中的局部变量的值在函数调用结束后不消失而保留原值，即其占用的存储单元不释放，在下一次该函数调用时，该变量的值是上一次函数调用结束时的值。这时就可以指定该局部变量为“<strong>静态局部变量</strong>”，用static指定存储类别。</li><li>静态局部变量的说明：<ol><li>静态局部变量占用的存储单元在程序整个运行期间都不释放；而自动变量在函数调用时分配存储单元，函数调用结束，存储单元被释放。</li><li>静态局部变量在编译时赋初值，即只赋初值一次；而对自动变量赋初值是在函数调用时进行，每调用一次函数重新赋一次初值。</li><li>声明静态局部变量时没有初始化，静态局部变量的值是0（对数值型变量）或空字符（对char类型变量）；声明自动变量时没有初始化，自动变量的值是不确定的。</li></ol></li></ul><h4 id="例题1"><a href="#例题1" class="headerlink" title="例题1"></a>例题1</h4><p>静态局部变量实例。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;       </span><br><span class="line">        <span class="keyword">int</span> i, a = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%6d"</span>, f(a));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">int</span> c = <span class="number">3</span>;</span><br><span class="line">        b = b + <span class="number">1</span>;</span><br><span class="line">        c = c + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">789</span><br></pre></td></tr></table></figure><p>先后三次调用函数 f 时，变量 b 、 c 的值如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/queen999/ImageHosting/images/20210315110302.png" alt=""></p><h4 id="例题2"><a href="#例题2" class="headerlink" title="例题2"></a>例题2</h4><p>输出1 ~ 5 的阶乘值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= <span class="number">5</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d! = %.0lf\n"</span>, i, factorial(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">double</span> f = <span class="number">1.0</span>;</span><br><span class="line">        f *= n;</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1! &#x3D; 1</span><br><span class="line">2! &#x3D; 2</span><br><span class="line">3! &#x3D; 6</span><br><span class="line">4! &#x3D; 24</span><br><span class="line">5! &#x3D; 120</span><br></pre></td></tr></table></figure><p>如果有一些变量使用频繁，为提高执行效率，C 语言允许将局部变量的值存储在寄存器中，以提高执行效率。这种变量叫<kbd>寄存器变量</kbd>，用<kbd>register</kbd>指定存储类别。</p><h3 id="全局变量的存储类别"><a href="#全局变量的存储类别" class="headerlink" title="全局变量的存储类别"></a>全局变量的存储类别</h3><ul><li>全局变量有 <strong>extern</strong> 和 <strong>static</strong> 两种存储类别。如果声明全局变量时没有指定存储类别，默认为 <strong>extern</strong> 。</li><li>如果全局变量不在文件的开头声明，其作用域只限于声明点到源文件末尾。如果在声明点之前的函数想使用该全局变量，则应该在使用之前用关键字extern对该变量声明，表示该变量是一个已经声明的全局变量，以扩展全局变量的作用域。</li></ul><h4 id="例题1-1"><a href="#例题1-1" class="headerlink" title="例题1"></a>例题1</h4><p>用 extern 声明全局变量，扩展全局变量的作用域。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">extern</span> <span class="keyword">int</span> a, b;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"max = %d\n"</span>, <span class="built_in">max</span>(a, b));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> z;</span><br><span class="line">        z = x &gt; y ? x : y;</span><br><span class="line">        <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">15</span>, b = <span class="number">8</span>;</span><br></pre></td></tr></table></figure><p>该程序的运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max &#x3D; 15</span><br></pre></td></tr></table></figure><p>原本 main 函数不在全局变量 a 、 b 的作用范围内，用 extern 对使用全局变量 a 、 b 进行声明，就可以在 main 函数内使用全局变量 a 、 b 。</p><h2 id="宏定义"><a href="#宏定义" class="headerlink" title="宏定义"></a>宏定义</h2><p>编译预处理是在编译前对源程序进行的一些预加工。它是 C 语言与其他高级语言的一个重要区别，有助于编写易移植、易调试的程序。</p><h3 id="不带参数的宏定义"><a href="#不带参数的宏定义" class="headerlink" title="不带参数的宏定义"></a>不带参数的宏定义</h3><p>一般形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> 宏名 宏体</span></span><br></pre></td></tr></table></figure><h4 id="例题1-2"><a href="#例题1-2" class="headerlink" title="例题1"></a>例题1</h4><p>计算圆的面积。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> r, s;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input the radius: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;r);</span><br><span class="line">        s = PI * r * r;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"s = %.2lf\n"</span>, s);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><details ><summary> <p>点击查看说明</p> </summary>              <div class='content'>              <div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>宏名的替换过程其实是一种简单的复制工作，它不做任何计算，也不做任何错误检查，错误的检查工作要等到编译过程中才会进行。</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>宏名通常用大写字母表示。</p>            </div>              </div>            </details><h4 id="例题2-1"><a href="#例题2-1" class="headerlink" title="例题2"></a>例题2</h4><p>计算圆的周长。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R 3.0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> L 2 * PI * R</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"L = %.2lf\n"</span>, L);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L &#x3D; 18.85</span><br></pre></td></tr></table></figure><h3 id="带参数的宏定义"><a href="#带参数的宏定义" class="headerlink" title="带参数的宏定义"></a>带参数的宏定义</h3><p>一般形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> 宏名(参数表) 宏体</span></span><br></pre></td></tr></table></figure><details ><summary> <p>点击查看注意</p> </summary>              <div class='content'>              <div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>宏名与参数表的括号之间不可有空格符；否则，系统将把程序中的宏名替换成空格后的字符串，变成不带参数的宏定义。</p>            </div>              </div>            </details><h4 id="例题1-3"><a href="#例题1-3" class="headerlink" title="例题1"></a>例题1</h4><p>计算长方形的面积。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S(a, b) a * b</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> x, y;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input the length and the width: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"S = %.2lf\n"</span>, S(x, y));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input the length and the width: 3 4</span><br><span class="line">S &#x3D; 12.00</span><br></pre></td></tr></table></figure><p>带参数的宏定义与带形参的函数，他们从形式上与特征上都很相似，但他们在本质上是不同的：</p><ol><li>函数调用时是在程序的执行过程中进行的，而宏调用是在预处理中进行的，宏名被替换后，宏体将是程序的一部分。</li><li>在函数调用时，要先求实参的值，然后将这个值赋给形参，而宏调用时，只是简单地用实参替换宏体中的形参。</li></ol><h4 id="例题2-2"><a href="#例题2-2" class="headerlink" title="例题2"></a>例题2</h4><p>宏调用是简单的替换。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SUM(a, b) a * b</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"SUM = %d\n"</span>, SUM(<span class="number">1</span> + <span class="number">2</span>, <span class="number">3</span> + <span class="number">4</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUM &#x3D; 11</span><br></pre></td></tr></table></figure><span class='p red'>宏调用 SUM(1 + 2</span><h4 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h4><p>定义并调用带参数的宏，交换两个参数的值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EXCHANGE(a, b) b,a</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">5</span>, y = <span class="number">3</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"x = %d , y = %d\n"</span>, x, y);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"now, x = %d , y = %d\n"</span>, EXCHANGE(x, y));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &#x3D; 5 , y &#x3D; 3</span><br><span class="line">now, x &#x3D; 3 , y &#x3D; 5</span><br></pre></td></tr></table></figure><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>文件包含也叫宏包含，是编译预处理的一个重要功能，通过预处理命令<kbd>#include</kbd>把另一个文件的整个内容嵌入进来。文件包含有以下两种方式：</p><ol><li><p><strong>第一种形式</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"文件名"</span></span></span><br></pre></td></tr></table></figure><p>首先在源文件所在目录中检索指定的文件；如果没有找到，则按系统规定的标准方式检索文件目录，直至找到文件为止。</p></li><li><p><strong>第二种形式</strong></p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;文件名&gt;</span></span></span><br></pre></td></tr></table></figure><p>只按系统规定的标准方式检索文件目录，直至找到文件为止。</p><h2 id="条件编译"><a href="#条件编译" class="headerlink" title="条件编译"></a>条件编译</h2><p>编译预处理提供了条件编译的功能，可以根据条件编译程序的不同部分，从而产生不同的目标代码文件。</p><p><strong>第一种形式</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> 标识符</span></span><br><span class="line">        程序段<span class="number">1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">       程序段<span class="number">2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p>功能：如果标识符已被 #define命令定义过，则对程序段1进行编译；否则，对程序段2进行编译。</p></blockquote><hr><p><strong>第二种形式</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> 标识符</span></span><br><span class="line">程序段<span class="number">1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">程序段<span class="number">2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p>功能：如果标识符没有被 #define命令定义过，则对程序段1进行编译；否则，对程序段2进行编译。这与第一种形式的功能正好相反。</p></blockquote><p><strong>第三种形式</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 常量表达式</span></span><br><span class="line">程序段<span class="number">1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">程序段<span class="number">2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p>功能：如果常量表达式的值不等于0，则对程序段1进行编译；否则，对程序段2进行编译。</p></blockquote><h3 id="例题1-4"><a href="#例题1-4" class="headerlink" title="例题1"></a>例题1</h3><p>条件编译示例。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R 1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> r, c, s;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Input the radius: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;r);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> R</span></span><br><span class="line">        s = PI * r * r;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"s = %.2lf\n"</span>, s);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        c = <span class="number">2</span> * PI * r;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"c = %.2lf\n"</span>, c);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input the radius: 5</span><br><span class="line">s &#x3D; 78.54</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;变量的作用域&lt;/p&gt;
&lt;p&gt;变量的存储类别&lt;/p&gt;
&lt;p&gt;宏定义&lt;/p&gt;
&lt;p&gt;文件包含&lt;/p&gt;
&lt;p&gt;条件编译&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>函数</title>
    <link href="https://imqinhao.cn/2021/03/08/c_8/"/>
    <id>https://imqinhao.cn/2021/03/08/c_8/</id>
    <published>2021-03-08T09:02:14.000Z</published>
    <updated>2021-03-17T07:24:42.015Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>函数编程练习题</p><a id="more"></a><h2 id="编程练习1"><a href="#编程练习1" class="headerlink" title="编程练习1"></a>编程练习1</h2><p>已知函数头为 void  avg(void) ，写出函数定义。函数 avg 的功能：输入10个分数，去掉最高分和最低分后求平均分，保留一位小数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">avg</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"******************************** 编程练习8.1 ********************************\n"</span>);</span><br><span class="line">        avg( );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">avg</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> score[<span class="number">10</span>], <span class="built_in">max</span>, <span class="built_in">min</span>, average, sum = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"请输入第%d个分数："</span>, i + <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;score[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">max</span> = score[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">min</span> = score[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                sum += score[i];</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">max</span> &lt; score[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">max</span> = score[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">min</span> &gt; score[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">min</span> = score[i];</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        average = (sum - <span class="built_in">max</span> - <span class="built_in">min</span>) / <span class="number">8</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"平均分：%.1lf\n"</span>, average);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">******************************** 编程练习8.1 ********************************</span><br><span class="line">请输入第1个分数：95</span><br><span class="line">请输入第2个分数：88</span><br><span class="line">请输入第3个分数：77</span><br><span class="line">请输入第4个分数：86</span><br><span class="line">请输入第5个分数：93</span><br><span class="line">请输入第6个分数：86</span><br><span class="line">请输入第7个分数：79</span><br><span class="line">请输入第8个分数：83</span><br><span class="line">请输入第9个分数：92</span><br><span class="line">请输入第10个分数：99</span><br><span class="line">平均分：87.8</span><br></pre></td></tr></table></figure><h2 id="编程练习2"><a href="#编程练习2" class="headerlink" title="编程练习2"></a>编程练习2</h2><p>$$<br>已知函数头为 void  calroot(double a, double b, double c) ，写出函数定义。函数calroot的功能：求一元二次方程ax^2+bx+c=0的根。形参a、b、c是一元二次方程的系数。<br>$$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calroot</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> a1,b1,c1;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"********************************* 编程练习8.2 *********************************\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入a的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入b的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;b1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入c的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;c1);</span><br><span class="line">        </span><br><span class="line">        calroot(a1, b1, c1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calroot</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> x1, x2, d, e, real, imaginarys;</span><br><span class="line">        d = b * b - <span class="number">4</span> * a * c;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ( <span class="number">0</span> == a)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>( <span class="number">0</span> == b)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"error!\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"x = %f\n"</span>, -c / b);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">0</span> == d)</span><br><span class="line">        &#123;</span><br><span class="line">                x1 = x2 = -b / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x1 = x2 = %f\n"</span>, x1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(d &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                e = <span class="built_in">sqrt</span>(d);</span><br><span class="line">                x1 = (-b + e) / (<span class="number">2</span> * a);</span><br><span class="line">                x2 = (-b - e) / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x1 = %f\n"</span>, x1);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x2 = %f\n"</span>, x2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                e = <span class="built_in">sqrt</span>(-d);</span><br><span class="line">                real = -b / (<span class="number">2</span> * a);</span><br><span class="line">                imaginarys = e / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x1 = %f + %fi\n"</span>, real, imaginarys);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x2 = %f - %fi\n"</span>, real, imaginarys);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">********************************* 编程练习8.2 *********************************</span><br><span class="line">请输入a的值：0</span><br><span class="line">请输入b的值：1.5</span><br><span class="line">请输入c的值：-5.4</span><br><span class="line">x &#x3D; 3.600000</span><br></pre></td></tr></table></figure><h2 id="编程练习3"><a href="#编程练习3" class="headerlink" title="编程练习3"></a>编程练习3</h2><p>$$<br>已知函数头为 double sum(int n) ，写出函数定义。函数sum的功能：返回1-\frac{1}{2}+\frac{1}{3}-\frac{1}{4}+…+\frac{(-1)^{n+1}}{n}的值，其中n即为形参n。<br>$$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入n的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">double</span> result = sum(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"********************************* 编程练习8.3 *********************************\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"result = %.2lf\n"</span>, result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                        sum -= <span class="number">1.0</span> / i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        sum += <span class="number">1.0</span> / i;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入n的值：4</span><br><span class="line">********************************* 编程练习8.3 *********************************</span><br><span class="line">result &#x3D; 0.58</span><br></pre></td></tr></table></figure><h2 id="编程练习4"><a href="#编程练习4" class="headerlink" title="编程练习4"></a>编程练习4</h2><p>已知函数头为 int getgcd(int m, int n) ，写出函数定义。函数 getgcd 的功能：返回形参m 、 n 的最大公约数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getgcd</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"********************************* 编程练习8.4 *********************************\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入m的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入n的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b);</span><br><span class="line">        <span class="keyword">int</span> result = getgcd(a, b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"最大公约数为：%d\n"</span>, result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getgcd</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> gcd;</span><br><span class="line">        <span class="keyword">if</span>(m &gt; n)</span><br><span class="line">        &#123;</span><br><span class="line">                gcd = n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                gcd = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(m % gcd || n % gcd)</span><br><span class="line">        &#123;</span><br><span class="line">                gcd --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gcd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">********************************* 编程练习8.4 *********************************</span><br><span class="line">请输入m的值：9</span><br><span class="line">请输入n的值：3</span><br><span class="line">最大公约数为：3</span><br></pre></td></tr></table></figure><h2 id="编程练习5"><a href="#编程练习5" class="headerlink" title="编程练习5"></a>编程练习5</h2><p>已知函数头为 int prime(int n) ， 写出函数定义。函数 prime 的功能，如果 n 是质数，返回1；否则，返回0 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入n的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">        <span class="keyword">int</span> result = prime(a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n &gt; <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">2</span>;i &lt; <span class="built_in">sqrt</span>(n) + <span class="number">1</span>;i ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">if</span>(n % i == <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"error\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请输入n的值：5</span><br><span class="line">1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请输入n的值：4</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="函数练习6"><a href="#函数练习6" class="headerlink" title="函数练习6"></a>函数练习6</h2><p>已知函数头为 void avg(void) ，函数 avg 的功能：输入10个分数，去掉最高分和最低分，求平均分，保留一位小数。编写并调用函数avg。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">avg</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        avg( );</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">avg</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">double</span> <span class="built_in">max</span>, <span class="built_in">min</span>, sum = <span class="number">0.0</span>, average, score[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"请输入第%d个成绩："</span>, i + <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;score[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">max</span> = score[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">min</span> = score[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                sum += score[i];</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">max</span> &lt; score[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">max</span> = score[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">min</span> &gt; score[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">min</span> = score[i];</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        average = (sum - <span class="built_in">max</span> - <span class="built_in">min</span>) / <span class="number">8</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"去掉最高分：%.1lf 分\n"</span>, <span class="built_in">max</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"去掉最低分：%.1lf 分\n"</span>, <span class="built_in">min</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"平均分为：%.1lf\n"</span>, average);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">请输入第1个成绩：95</span><br><span class="line">请输入第2个成绩：99</span><br><span class="line">请输入第3个成绩：78</span><br><span class="line">请输入第4个成绩：85</span><br><span class="line">请输入第5个成绩：93</span><br><span class="line">请输入第6个成绩：85</span><br><span class="line">请输入第7个成绩：86</span><br><span class="line">请输入第8个成绩：91</span><br><span class="line">请输入第9个成绩：87</span><br><span class="line">请输入第10个成绩：91</span><br><span class="line">去掉最高分：99.0 分</span><br><span class="line">去掉最低分：78.0 分</span><br><span class="line">平均分为：89.1</span><br></pre></td></tr></table></figure><h2 id="编程练习7"><a href="#编程练习7" class="headerlink" title="编程练习7"></a>编程练习7</h2><p>$$<br>已知函数头为 void calroot(double a, double b, double c) ，函数 calroot 的功能：求一元二次方程ax^2+bx+c=0的根。形参a、b、c是一元二次方程的系数，编写并调用函数 calroot。<br>$$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calroot</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> a1, b1, c1;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入a的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入b的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;b1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入c的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;c1);</span><br><span class="line">        calroot(a1, b1, c1);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calroot</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> d, e, x1, x2, real, imaginarys;</span><br><span class="line">        d = b * b - <span class="number">4</span> * a * c;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == a)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="number">0</span> == b)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"error\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"x = %lf\n"</span>, -c / b);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>( <span class="number">0</span> == d)</span><br><span class="line">        &#123;</span><br><span class="line">                x1 = x2 = -b / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x1 = x2 = %lf\n"</span>, x1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(d &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                e = <span class="built_in">sqrt</span>(d);</span><br><span class="line">                x1 = (-b + e) / (<span class="number">2</span> * a);</span><br><span class="line">                x2 = (-b - e) / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x1 = %lf\n"</span>, x1);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x2 = %lf\n"</span>, x2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                e = <span class="built_in">sqrt</span>(-d);</span><br><span class="line">                real = -b / (<span class="number">2</span> * a);</span><br><span class="line">                imaginarys = e / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x1 = %lf + %lfi\n"</span>, real, imaginarys);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x2 = %lf - %lfi\n"</span>, real, imaginarys);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请输入a的值：0</span><br><span class="line">请输入b的值：1.5</span><br><span class="line">请输入c的值：-5.4</span><br><span class="line">x &#x3D; 3.600000</span><br></pre></td></tr></table></figure><h2 id="编程练习8"><a href="#编程练习8" class="headerlink" title="编程练习8"></a>编程练习8</h2><p>$$<br>已知函数头为 double sum(int n) ，写出函数定义。函数sum的功能：返回1-\frac{1}{2}+\frac{1}{3}-\frac{1}{4}+…+\frac{(-1)^{n+1}}{n}的值，其中n即为形参n。编写并调用函数sum。<br>$$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="keyword">double</span> result;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Please input value of n: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">        result = sum(a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"result = %.2lf\n"</span>, result);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">double</span> s;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                        s -= <span class="number">1.0</span> / i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        s += <span class="number">1.0</span> / i;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Please input value of n: 4</span><br><span class="line">result &#x3D; 0.58</span><br></pre></td></tr></table></figure><h2 id="编程练习9"><a href="#编程练习9" class="headerlink" title="编程练习9"></a>编程练习9</h2><p>已知函数头为 int getgcd(int m, int n) ，写出函数定义。函数 getgcd 的功能：返回形参m 、 n 的最大公约数。编写并调用函数 getgcd 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getgcd</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, result;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入m的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入n的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b);</span><br><span class="line">        result = getgcd(a, b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 和 %d 的最大公约数为：%d\n"</span>, a, b, result);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getgcd</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> gcd;</span><br><span class="line">        <span class="keyword">if</span>(m &gt; n)</span><br><span class="line">        &#123;</span><br><span class="line">                gcd = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                gcd = n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(gcd % m || gcd % n)</span><br><span class="line">        &#123;</span><br><span class="line">                gcd ++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gcd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入m的值：9</span><br><span class="line">请输入n的值：6</span><br><span class="line">9 和 6 的最大公约数为：18</span><br></pre></td></tr></table></figure><h2 id="编程练习10"><a href="#编程练习10" class="headerlink" title="编程练习10"></a>编程练习10</h2><p>已知函数头为 int prime(int n) ， 写出函数定义。函数 prime 的功能，如果 n 是质数，返回1；否则，返回0 。编写并调用函数 prime 输出 100 以内所有的质数，每行输出5个 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, res, times = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">2</span>;i &lt; <span class="number">100</span>;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                res = prime(i);</span><br><span class="line">                <span class="keyword">if</span>(res == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                        times ++;</span><br><span class="line">                        <span class="keyword">if</span>(times % <span class="number">5</span> == <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">"%d\t"</span>, i);</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j, flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">2</span>;j &lt; <span class="built_in">sqrt</span>(n) + <span class="number">1</span>;j ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(n % j == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                        flag = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2       3       5       7       11</span><br><span class="line">13      17      19      23      29</span><br><span class="line">31      37      41      43      47</span><br><span class="line">53      59      61      67      71</span><br><span class="line">73      79      83      89      97</span><br></pre></td></tr></table></figure><h2 id="编程练习11"><a href="#编程练习11" class="headerlink" title="编程练习11"></a>编程练习11</h2><p>定义两个函数分别计算球体的表面积和体积，在main函数中输入球体的半径，调用这两个函数，在 main 函数中输出球体的表面积和体积。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_ball_s</span><span class="params">(<span class="keyword">double</span> r)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_ball_v</span><span class="params">(<span class="keyword">double</span> r)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> a, s, v;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入球体的半径："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a);</span><br><span class="line">        s = get_ball_s(a);</span><br><span class="line">        v = get_ball_v(a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"球体的表面积为：%.2lf\n"</span>, s);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"球体的体积为：%.2lf\n"</span>, v);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_ball_s</span><span class="params">(<span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span> * <span class="number">3.14</span> * r * r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_ball_v</span><span class="params">(<span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">4</span> / <span class="number">3.0</span>) * <span class="number">3.14</span> * r * r * r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入球体的半径：5</span><br><span class="line">球体的表面积为：314.00</span><br><span class="line">球体的体积为：523.33</span><br></pre></td></tr></table></figure><h2 id="编程练习12"><a href="#编程练习12" class="headerlink" title="编程练习12"></a>编程练习12</h2><p>已知函数头为 int avg(int n, int t[ ]) ，函数avg的功能：去掉长度为 n 的一维数组 t 中的最大值和最小值，计算并返回平均值。编写并调用函数avg。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">avg</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> t[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> s[<span class="number">9</span>] = &#123;<span class="number">52</span>, <span class="number">99</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">20</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">101</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> average;</span><br><span class="line">        average = avg(<span class="number">9</span>, s);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"average = %d\n"</span>, average);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">avg</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> t[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> <span class="built_in">max</span>, <span class="built_in">min</span>, i, sum;</span><br><span class="line">        <span class="built_in">max</span> = t[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">min</span> = t[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                sum += t[i];</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">max</span> &lt; t[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">max</span> = t[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">min</span> &gt; t[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">min</span> = t[i];</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (sum - <span class="built_in">max</span> - <span class="built_in">min</span>) / (n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">average &#x3D; 39</span><br></pre></td></tr></table></figure><h2 id="编程练习13"><a href="#编程练习13" class="headerlink" title="编程练习13"></a>编程练习13</h2><p>已知函数头为 int str_cmp(char s1[ ], char s2[ ]) ，函数 str_cmp 的功能：比较数组 s1 和 s2 中字符串的大小，如果 s1 中的字符串大于 s2 中的字符串，返回一个正整数；如果 s1 中的字符串等于 s2 中的字符串，返回0；如果 s1 中的字符串小于 s2 中的字符串，返回一个负整数。输入两个字符串，编写并调用函数 str_cmp，比较两个字符串的大小（要求不调用库函数 strcmp)。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">str_cmp</span><span class="params">(<span class="keyword">char</span> s1[ ], <span class="keyword">char</span> s2[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch1[<span class="number">100</span>], ch2[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">int</span> result;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入第一段字符："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, ch1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入第二段字符："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, ch2);</span><br><span class="line">        result = str_cmp(ch1, ch2);</span><br><span class="line">        <span class="keyword">if</span>(result &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s &gt; %s\n"</span>, ch1, ch2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(result == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s == %s\n"</span>, ch1, ch2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s &lt; %s\n"</span>, ch1, ch2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;       </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">str_cmp</span><span class="params">(<span class="keyword">char</span> s1[ ], <span class="keyword">char</span> s2[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, length1 = <span class="number">0</span>, length2 = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 计算s1数组长度</span></span><br><span class="line">        <span class="keyword">while</span>(s1[length1] != <span class="string">'\0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                length1 ++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(s2[length2] != <span class="string">'\0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                length2 ++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(s1[i] != <span class="string">'\0'</span> || s2[i] != <span class="string">'\0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(s1[i] &gt; s2[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s1[i] &lt; s2[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">if</span>(length1 &gt; length2)</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(length1 == length2)</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                i ++;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入第一段字符：com</span><br><span class="line">请输入第二段字符：computer</span><br><span class="line">com &lt; computer</span><br></pre></td></tr></table></figure><h2 id="编程练习14"><a href="#编程练习14" class="headerlink" title="编程练习14"></a>编程练习14</h2><p>已知函数头为 void output(int row, int t[ ][5])，函数output 的功能：输出行数为row，列数为5的二维数组 t 中所有的数组元素。编写并调用函数 output，输出 3 行 5 列的二位数组，再次调用 output，输出 4 行 5 列的二维数组。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> t[ ][<span class="number">5</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, r = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> t1[][<span class="number">5</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;, &#123;<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;, &#123;<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>&#125;&#125;;</span><br><span class="line">        <span class="keyword">int</span> t2[][<span class="number">5</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;, &#123;<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;, &#123;<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>&#125;, &#123;<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>&#125;&#125;;</span><br><span class="line">        output(<span class="number">3</span>, t1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        output(<span class="number">4</span>, t2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> t[ ][<span class="number">5</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; row;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">5</span>;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%6d"</span>, t[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1     2     3     4     5</span><br><span class="line">6     7     8     9    10</span><br><span class="line">11    12    13    14    15</span><br><span class="line"></span><br><span class="line">1     2     3     4     5</span><br><span class="line">6     7     8     9    10</span><br><span class="line">11    12    13    14    15</span><br><span class="line">16    17    18    19    20</span><br></pre></td></tr></table></figure><h2 id="编程练习15"><a href="#编程练习15" class="headerlink" title="编程练习15"></a>编程练习15</h2><p>已知函数头为 int getmin(int n, int r[ ][3])，函数 getmin 的功能：计算并返回行数为 n 列数为 3 的二维数组 t 中的最小值。编写并调用函数 getmin 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> r[ ][<span class="number">3</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copyright</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">3</span>] = &#123;&#123;<span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>&#125;, &#123;<span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>&#125;, &#123;<span class="number">7</span>, <span class="number">8</span>,<span class="number">9</span>&#125; ,&#123; <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>&#125;&#125;;</span><br><span class="line">        <span class="keyword">int</span> <span class="built_in">min</span>;</span><br><span class="line">        copyright( );</span><br><span class="line">        <span class="built_in">min</span> = getmin(<span class="number">4</span>, a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"最小值为：%d\n"</span>, <span class="built_in">min</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> r[ ][<span class="number">3</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i,j, <span class="built_in">min</span>, b[n];</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">3</span>;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        b[i] = r[i][<span class="number">2</span>];</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">min</span> = b[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>;i &lt; n;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">min</span> &gt; b[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">min</span> = b[i];</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>;     </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copyright</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"******************************* 编程练习8.15 *******************************\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"2\t1\t3\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"4\t6\t5\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"7\t8\t9\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"10\t12\t11\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">******************************* 编程练习8.15 *******************************</span><br><span class="line">2       1       3</span><br><span class="line">4       6       5</span><br><span class="line">7       8       9</span><br><span class="line">10      12      11</span><br><span class="line">最小值为：3</span><br></pre></td></tr></table></figure><h2 id="编程练习16"><a href="#编程练习16" class="headerlink" title="编程练习16"></a>编程练习16</h2><p>在 main 函数中输入两个整数 m 和 n ，调用函数 change，要求函数 change 调用完成后，整数 m 的值加 5，整数 n 的值减 3，在主函数中输出改变后的 m 和 n。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m, n;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入m的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入n的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Before function call:\tm = %d , n = %d\n"</span>, m , n);</span><br><span class="line">        change(&amp;m, &amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"After function call:\tm = %d , n = %d\n"</span>, m, n);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        *x += <span class="number">5</span>;</span><br><span class="line">        *y -= <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Before function call:   m &#x3D; 5 , n &#x3D; 3</span><br><span class="line">After function call:    m &#x3D; 10 , n &#x3D; 0</span><br></pre></td></tr></table></figure><h2 id="编程练习17"><a href="#编程练习17" class="headerlink" title="编程练习17"></a>编程练习17</h2><p>已知函数头及功能如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n1, <span class="keyword">int</span> t1[ ])</span></span>;<span class="comment">// 输入n1个整数到一维数组t1中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> n2, <span class="keyword">int</span> t2[ ])</span></span>;<span class="comment">// 对长度为n2的一维数组t2中的数组元素按升序排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n3, <span class="keyword">int</span> t3[ ])</span></span>;<span class="comment">// 输出长度为n3的一维数组t3中的数组元素</span></span><br></pre></td></tr></table></figure><p>编写并调用函数输入10个整数，对这10个整数按升序排序，输出排序后的10个整数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n1, <span class="keyword">int</span> t1[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> n2, <span class="keyword">int</span> t2[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n3, <span class="keyword">int</span> t3[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i,s1[<span class="number">10</span>];</span><br><span class="line">        input(<span class="number">10</span>, s1);</span><br><span class="line">        sort(<span class="number">10</span>, s1);</span><br><span class="line">        output(<span class="number">10</span>, s1);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n1, <span class="keyword">int</span> t1[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入10个整数：\n"</span>, i);</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> n2, <span class="keyword">int</span> t2[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, temp;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n2;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">9</span> - i;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">if</span>(t2[j] &gt; t2[j + <span class="number">1</span>])</span><br><span class="line">                        &#123;</span><br><span class="line">                                temp = t2[j];</span><br><span class="line">                                t2[j] = t2[j + <span class="number">1</span>];</span><br><span class="line">                                t2[j + <span class="number">1</span>] = temp;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n3, <span class="keyword">int</span> t3[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n3;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\t"</span>, t3[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">请输入10个整数：</span><br><span class="line">95</span><br><span class="line">77</span><br><span class="line">99</span><br><span class="line">36</span><br><span class="line">56</span><br><span class="line">85</span><br><span class="line">19</span><br><span class="line">74</span><br><span class="line">69</span><br><span class="line">88</span><br><span class="line">19      36      56      69      74      77      85      88      95      99</span><br></pre></td></tr></table></figure><h2 id="编程练习18"><a href="#编程练习18" class="headerlink" title="编程练习18"></a>编程练习18</h2><p>已知函数头及功能如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n1, <span class="keyword">int</span> t1[ ])</span></span>;<span class="comment">// 输入n1个整数到一维数组t1中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swapmin</span><span class="params">(<span class="keyword">int</span> n2, <span class="keyword">int</span> t2[ ])</span></span>;<span class="comment">// 将数组t2中最小数组元素与t2[0]交换</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swapmax</span><span class="params">(<span class="keyword">int</span> n3, <span class="keyword">int</span> t3[ ])</span></span>;<span class="comment">// 将数组t3中最大数组元素与t3[n3 - 1]交换</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n4, <span class="keyword">int</span> t4[ ])</span></span>;<span class="comment">// 输出长度为n4的一维数组t4中的数组元素</span></span><br></pre></td></tr></table></figure><p>编写并调用函数输入10个整数，完成数据交换，输出交换后的10个整数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n1, <span class="keyword">int</span> t1[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swapmin</span><span class="params">(<span class="keyword">int</span> n2, <span class="keyword">int</span> t2[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swapmax</span><span class="params">(<span class="keyword">int</span> n3, <span class="keyword">int</span> t3[ ])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n4, <span class="keyword">int</span> t4[ ])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, s[<span class="number">10</span>];</span><br><span class="line">        input(<span class="number">10</span>, s);</span><br><span class="line">        swapmin(<span class="number">10</span>, s);</span><br><span class="line">        swapmax(<span class="number">10</span>, s);</span><br><span class="line">        output(<span class="number">10</span>, s);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n1, <span class="keyword">int</span> t1[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n1; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"请输入第%d个整数："</span>, i + <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swapmin</span><span class="params">(<span class="keyword">int</span> n2, <span class="keyword">int</span> t2[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> <span class="built_in">min</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i, temp;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n2;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(t2[<span class="built_in">min</span>] &gt; t2[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">min</span> = i;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">min</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                temp = t2[<span class="number">0</span>];</span><br><span class="line">                t2[<span class="number">0</span>] = t2[<span class="built_in">min</span>];</span><br><span class="line">                t2[<span class="built_in">min</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swapmax</span><span class="params">(<span class="keyword">int</span> n3, <span class="keyword">int</span> t3[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> <span class="built_in">max</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i, temp;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n3;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(t3[<span class="built_in">max</span>] &lt; t3[i])</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">max</span> = i;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">max</span> != n3 - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                temp = t3[n3 - <span class="number">1</span>];</span><br><span class="line">                t3[n3 - <span class="number">1</span>] = t3[<span class="built_in">max</span>];</span><br><span class="line">                t3[<span class="built_in">max</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> n4, <span class="keyword">int</span> t4[ ])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n4;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\t"</span>, t4[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">请输入第1个整数：74</span><br><span class="line">请输入第2个整数：20</span><br><span class="line">请输入第3个整数：99</span><br><span class="line">请输入第4个整数：13</span><br><span class="line">请输入第5个整数：14</span><br><span class="line">请输入第6个整数：52</span><br><span class="line">请输入第7个整数：33</span><br><span class="line">请输入第8个整数：44</span><br><span class="line">请输入第9个整数：66</span><br><span class="line">请输入第10个整数：99</span><br><span class="line">13      20      99      74      14      52      33      44      66      99</span><br></pre></td></tr></table></figure><h2 id="编程练习19"><a href="#编程练习19" class="headerlink" title="编程练习19"></a>编程练习19</h2><p>已知函数头及功能如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> t1[ ][<span class="number">3</span>])</span></span>;<span class="comment">// 输入row1 * 3个整数到二维数组t1中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> row2, <span class="keyword">int</span> t2[ ][<span class="number">3</span>])</span></span>;<span class="comment">// 使数组t2中每个元素的值增1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> row3, <span class="keyword">int</span> t3[ ][<span class="number">3</span>])</span></span>;<span class="comment">// 输出二维数组t3中的数组元素</span></span><br></pre></td></tr></table></figure><p>编写并调用函数输入6个整数，完成数据处理，输出处理后的6个整数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> t1[ ][<span class="number">3</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> row2, <span class="keyword">int</span> t2[ ][<span class="number">3</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> row3, <span class="keyword">int</span> t3[ ][<span class="number">3</span>])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> t[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">        input(<span class="number">2</span>, t);</span><br><span class="line">        change(<span class="number">2</span>, t);</span><br><span class="line">        output(<span class="number">2</span>, t);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> t1[ ][<span class="number">3</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; row1;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">3</span>;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t1[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> row2, <span class="keyword">int</span> t2[ ][<span class="number">3</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; row2;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">3</span>;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        t2[i][j] += <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> row3, <span class="keyword">int</span> t3[ ][<span class="number">3</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; row3;i ++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">3</span>;j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%d\t"</span>, t3[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6</span><br><span class="line">2       3       4       </span><br><span class="line">5       6       7</span><br></pre></td></tr></table></figure><h2 id="编程练习20"><a href="#编程练习20" class="headerlink" title="编程练习20"></a>编程练习20</h2><psw>此题略</psw><h2 id="编程练习21"><a href="#编程练习21" class="headerlink" title="编程练习21"></a>编程练习21</h2><p>输入长方形的长和宽，调用同一个函数，第一次调用求长方形的面积，第二次调用求长方形的周长。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_s</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_l</span><span class="params">(<span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x3, <span class="keyword">int</span> y3, <span class="keyword">int</span> (*p)(<span class="keyword">int</span> m, <span class="keyword">int</span> n))</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, s, l;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入长方形的长："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入长方形的宽："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b);</span><br><span class="line">        s = <span class="built_in">get</span>(a, b, get_s);</span><br><span class="line">        l = <span class="built_in">get</span>(a, b, get_l);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"长方形的面积为：%d\n"</span>, s);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"长方形的周长为：%d\n"</span>, l);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_s</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x1 * y1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_l</span><span class="params">(<span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * (x2 + y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x3, <span class="keyword">int</span> y3, <span class="keyword">int</span> (*p)(<span class="keyword">int</span> m, <span class="keyword">int</span> n))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (*p)(x3, y3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请输入长方形的长：5</span><br><span class="line">请输入长方形的宽：6</span><br><span class="line">长方形的面积为：30</span><br><span class="line">长方形的周长为：22</span><br></pre></td></tr></table></figure><h2 id="编程练习22"><a href="#编程练习22" class="headerlink" title="编程练习22"></a>编程练习22</h2><p>采用递归的函数调用求 1 + 2 + 3 + … + n 的值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="keyword">double</span> sum;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入n的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">        sum = factorial(a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"sum = %.0lf\n"</span>, sum);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">factorial</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> sum;</span><br><span class="line">        <span class="keyword">if</span>(n &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                sum = n + factorial(n - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                sum = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请输入n的值：20</span><br><span class="line">sum &#x3D; 210</span><br></pre></td></tr></table></figure><h2 id="编程练习23"><a href="#编程练习23" class="headerlink" title="编程练习23"></a>编程练习23</h2><p>$$<br>采用递归的函数调用求x^n的值，x的类型是double，n的类型是int，且n≥0 。<br>$$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="keyword">double</span> b, result;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入x的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入n的值："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">        result = power(b, a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"result = %.2lf\n"</span>, result);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> s;</span><br><span class="line">        <span class="keyword">if</span>(n &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                s = x * power(x, n - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                s = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入x的值：2</span><br><span class="line">请输入n的值：10</span><br><span class="line">result &#x3D; 1024.00</span><br></pre></td></tr></table></figure><h2 id="编程练习24"><a href="#编程练习24" class="headerlink" title="编程练习24"></a>编程练习24</h2><p>已知函数头为 int hanoi(int n, char first, char second, char third) ， 函数 hanoi 的功能：输出汉诺塔问题中圆盘的移动步骤，计算并返回圆盘移动的总次数。编写并调用函数 hanoi 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> first, <span class="keyword">char</span> second, <span class="keyword">char</span> third)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m, times;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入圆盘的个数："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">        times = hanoi(m, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"共移动了%d次\n"</span>, times);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> first, <span class="keyword">char</span> second, <span class="keyword">char</span> third)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                hanoi(n - <span class="number">1</span>, first, third, second);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"将第%d个圆盘从%c移动到%c\n"</span>, n, first, third);</span><br><span class="line">                hanoi(n - <span class="number">1</span>, second, first, third);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"将第%d个圆盘从%c移动到%c\n"</span>, n, first, third);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">pow</span>(<span class="number">2</span>, n) - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">请输入圆盘的个数：4</span><br><span class="line">将第1个圆盘从A移动到B</span><br><span class="line">将第2个圆盘从A移动到C</span><br><span class="line">将第1个圆盘从B移动到C</span><br><span class="line">将第3个圆盘从A移动到B</span><br><span class="line">将第1个圆盘从C移动到A</span><br><span class="line">将第2个圆盘从C移动到B</span><br><span class="line">将第1个圆盘从A移动到B</span><br><span class="line">将第4个圆盘从A移动到C</span><br><span class="line">将第1个圆盘从B移动到C</span><br><span class="line">将第2个圆盘从B移动到A</span><br><span class="line">将第1个圆盘从C移动到A</span><br><span class="line">将第3个圆盘从B移动到C</span><br><span class="line">将第1个圆盘从A移动到B</span><br><span class="line">将第2个圆盘从A移动到C</span><br><span class="line">将第1个圆盘从B移动到C</span><br><span class="line">共移动了15次</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;函数编程练习题&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="https://imqinhao.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
</feed>
